{
  "cells": [
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "view-in-github",
        "colab_type": "text"
      },
      "source": [
        "<a href=\"https://colab.research.google.com/github/jmdelvecchio/WISP_arctic_hydro/blob/main/Google%20Earth%20Engine%20Data%20Collection\" target=\"_parent\"><img src=\"https://colab.research.google.com/assets/colab-badge.svg\" alt=\"Open In Colab\"/></a>"
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "_0P87CEWjM4i"
      },
      "source": [
        "# Import and initialize"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": 1,
      "metadata": {
        "id": "wECFwKhii0c7",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 1000
        },
        "outputId": "14f72bbf-811e-4223-c42c-ca50d54337c7"
      },
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Looking in indexes: https://pypi.org/simple, https://us-python.pkg.dev/colab-wheels/public/simple/\n",
            "Collecting geopandas\n",
            "  Downloading geopandas-0.10.2-py2.py3-none-any.whl (1.0 MB)\n",
            "\u001b[K     |████████████████████████████████| 1.0 MB 8.3 MB/s \n",
            "\u001b[?25hCollecting pyproj>=2.2.0\n",
            "  Downloading pyproj-3.2.1-cp37-cp37m-manylinux2010_x86_64.whl (6.3 MB)\n",
            "\u001b[K     |████████████████████████████████| 6.3 MB 32.3 MB/s \n",
            "\u001b[?25hCollecting fiona>=1.8\n",
            "  Downloading Fiona-1.8.21-cp37-cp37m-manylinux2014_x86_64.whl (16.7 MB)\n",
            "\u001b[K     |████████████████████████████████| 16.7 MB 9.7 MB/s \n",
            "\u001b[?25hRequirement already satisfied: shapely>=1.6 in /usr/local/lib/python3.7/dist-packages (from geopandas) (1.8.2)\n",
            "Requirement already satisfied: pandas>=0.25.0 in /usr/local/lib/python3.7/dist-packages (from geopandas) (1.3.5)\n",
            "Collecting munch\n",
            "  Downloading munch-2.5.0-py2.py3-none-any.whl (10 kB)\n",
            "Collecting click-plugins>=1.0\n",
            "  Downloading click_plugins-1.1.1-py2.py3-none-any.whl (7.5 kB)\n",
            "Requirement already satisfied: certifi in /usr/local/lib/python3.7/dist-packages (from fiona>=1.8->geopandas) (2022.5.18.1)\n",
            "Requirement already satisfied: click>=4.0 in /usr/local/lib/python3.7/dist-packages (from fiona>=1.8->geopandas) (7.1.2)\n",
            "Requirement already satisfied: setuptools in /usr/local/lib/python3.7/dist-packages (from fiona>=1.8->geopandas) (57.4.0)\n",
            "Collecting cligj>=0.5\n",
            "  Downloading cligj-0.7.2-py3-none-any.whl (7.1 kB)\n",
            "Requirement already satisfied: attrs>=17 in /usr/local/lib/python3.7/dist-packages (from fiona>=1.8->geopandas) (21.4.0)\n",
            "Requirement already satisfied: six>=1.7 in /usr/local/lib/python3.7/dist-packages (from fiona>=1.8->geopandas) (1.15.0)\n",
            "Requirement already satisfied: pytz>=2017.3 in /usr/local/lib/python3.7/dist-packages (from pandas>=0.25.0->geopandas) (2022.1)\n",
            "Requirement already satisfied: numpy>=1.17.3 in /usr/local/lib/python3.7/dist-packages (from pandas>=0.25.0->geopandas) (1.21.6)\n",
            "Requirement already satisfied: python-dateutil>=2.7.3 in /usr/local/lib/python3.7/dist-packages (from pandas>=0.25.0->geopandas) (2.8.2)\n",
            "Installing collected packages: munch, cligj, click-plugins, pyproj, fiona, geopandas\n",
            "Successfully installed click-plugins-1.1.1 cligj-0.7.2 fiona-1.8.21 geopandas-0.10.2 munch-2.5.0 pyproj-3.2.1\n",
            "Looking in indexes: https://pypi.org/simple, https://us-python.pkg.dev/colab-wheels/public/simple/\n",
            "Requirement already satisfied: shapely in /usr/local/lib/python3.7/dist-packages (1.8.2)\n",
            "Looking in indexes: https://pypi.org/simple, https://us-python.pkg.dev/colab-wheels/public/simple/\n",
            "Collecting geemap\n",
            "  Downloading geemap-0.13.7-py2.py3-none-any.whl (2.0 MB)\n",
            "\u001b[K     |████████████████████████████████| 2.0 MB 7.5 MB/s \n",
            "\u001b[?25hCollecting ipytree\n",
            "  Downloading ipytree-0.2.1-py2.py3-none-any.whl (1.3 MB)\n",
            "\u001b[K     |████████████████████████████████| 1.3 MB 44.0 MB/s \n",
            "\u001b[?25hCollecting pyshp>=2.1.3\n",
            "  Downloading pyshp-2.3.0-py2.py3-none-any.whl (46 kB)\n",
            "\u001b[K     |████████████████████████████████| 46 kB 3.4 MB/s \n",
            "\u001b[?25hRequirement already satisfied: matplotlib in /usr/local/lib/python3.7/dist-packages (from geemap) (3.2.2)\n",
            "Collecting ffmpeg-python\n",
            "  Downloading ffmpeg_python-0.2.0-py3-none-any.whl (25 kB)\n",
            "Collecting geocoder\n",
            "  Downloading geocoder-1.38.1-py2.py3-none-any.whl (98 kB)\n",
            "\u001b[K     |████████████████████████████████| 98 kB 7.2 MB/s \n",
            "\u001b[?25hCollecting python-box\n",
            "  Downloading python_box-6.0.2-cp37-cp37m-manylinux_2_17_x86_64.manylinux2014_x86_64.whl (3.0 MB)\n",
            "\u001b[K     |████████████████████████████████| 3.0 MB 46.1 MB/s \n",
            "\u001b[?25hCollecting sankee\n",
            "  Downloading sankee-0.0.7.tar.gz (29 kB)\n",
            "Collecting geojson\n",
            "  Downloading geojson-2.5.0-py2.py3-none-any.whl (14 kB)\n",
            "Collecting bqplot\n",
            "  Downloading bqplot-0.12.33-py2.py3-none-any.whl (1.2 MB)\n",
            "\u001b[K     |████████████████████████████████| 1.2 MB 40.7 MB/s \n",
            "\u001b[?25hCollecting mapclassify>=2.4.0\n",
            "  Downloading mapclassify-2.4.3-py3-none-any.whl (38 kB)\n",
            "Collecting geeadd>=0.5.1\n",
            "  Downloading geeadd-0.5.5-py3-none-any.whl (30 kB)\n",
            "Collecting ipyleaflet>=0.14.0\n",
            "  Downloading ipyleaflet-0.16.0-py2.py3-none-any.whl (3.3 MB)\n",
            "\u001b[K     |████████████████████████████████| 3.3 MB 50.1 MB/s \n",
            "\u001b[?25hCollecting xyzservices\n",
            "  Downloading xyzservices-2022.4.0-py3-none-any.whl (36 kB)\n",
            "Collecting whiteboxgui>=0.6.0\n",
            "  Downloading whiteboxgui-0.7.0-py2.py3-none-any.whl (99 kB)\n",
            "\u001b[K     |████████████████████████████████| 99 kB 9.9 MB/s \n",
            "\u001b[?25hCollecting colour\n",
            "  Downloading colour-0.1.5-py2.py3-none-any.whl (23 kB)\n",
            "Requirement already satisfied: gdown in /usr/local/lib/python3.7/dist-packages (from geemap) (4.4.0)\n",
            "Collecting ipyevents\n",
            "  Downloading ipyevents-2.0.1-py2.py3-none-any.whl (130 kB)\n",
            "\u001b[K     |████████████████████████████████| 130 kB 73.6 MB/s \n",
            "\u001b[?25hRequirement already satisfied: earthengine-api>=0.1.304 in /usr/local/lib/python3.7/dist-packages (from geemap) (0.1.311)\n",
            "Requirement already satisfied: pandas in /usr/local/lib/python3.7/dist-packages (from geemap) (1.3.5)\n",
            "Requirement already satisfied: pillow in /usr/local/lib/python3.7/dist-packages (from geemap) (7.1.2)\n",
            "Collecting folium>=0.11.0\n",
            "  Downloading folium-0.12.1.post1-py2.py3-none-any.whl (95 kB)\n",
            "\u001b[K     |████████████████████████████████| 95 kB 3.5 MB/s \n",
            "\u001b[?25hCollecting ipyfilechooser>=0.6.0\n",
            "  Downloading ipyfilechooser-0.6.0-py3-none-any.whl (11 kB)\n",
            "Collecting pycrs\n",
            "  Downloading PyCRS-1.0.2.tar.gz (36 kB)\n",
            "Collecting ee-extra>=0.0.10\n",
            "  Downloading ee_extra-0.0.13.tar.gz (187 kB)\n",
            "\u001b[K     |████████████████████████████████| 187 kB 61.5 MB/s \n",
            "\u001b[?25hRequirement already satisfied: numpy in /usr/local/lib/python3.7/dist-packages (from geemap) (1.21.6)\n",
            "Collecting jupyterlab>=3\n",
            "  Downloading jupyterlab-3.4.2-py3-none-any.whl (8.8 MB)\n",
            "\u001b[K     |████████████████████████████████| 8.8 MB 40.5 MB/s \n",
            "\u001b[?25hRequirement already satisfied: google-api-python-client<2,>=1.12.1 in /usr/local/lib/python3.7/dist-packages (from earthengine-api>=0.1.304->geemap) (1.12.11)\n",
            "Requirement already satisfied: six in /usr/local/lib/python3.7/dist-packages (from earthengine-api>=0.1.304->geemap) (1.15.0)\n",
            "Requirement already satisfied: httplib2shim in /usr/local/lib/python3.7/dist-packages (from earthengine-api>=0.1.304->geemap) (0.0.3)\n",
            "Requirement already satisfied: httplib2<1dev,>=0.9.2 in /usr/local/lib/python3.7/dist-packages (from earthengine-api>=0.1.304->geemap) (0.17.4)\n",
            "Requirement already satisfied: future in /usr/local/lib/python3.7/dist-packages (from earthengine-api>=0.1.304->geemap) (0.16.0)\n",
            "Requirement already satisfied: google-auth>=1.4.1 in /usr/local/lib/python3.7/dist-packages (from earthengine-api>=0.1.304->geemap) (1.35.0)\n",
            "Requirement already satisfied: google-auth-httplib2>=0.0.3 in /usr/local/lib/python3.7/dist-packages (from earthengine-api>=0.1.304->geemap) (0.0.4)\n",
            "Requirement already satisfied: google-cloud-storage in /usr/local/lib/python3.7/dist-packages (from earthengine-api>=0.1.304->geemap) (1.18.1)\n",
            "Requirement already satisfied: requests in /usr/local/lib/python3.7/dist-packages (from folium>=0.11.0->geemap) (2.23.0)\n",
            "Requirement already satisfied: branca>=0.3.0 in /usr/local/lib/python3.7/dist-packages (from folium>=0.11.0->geemap) (0.5.0)\n",
            "Requirement already satisfied: jinja2>=2.9 in /usr/local/lib/python3.7/dist-packages (from folium>=0.11.0->geemap) (2.11.3)\n",
            "Collecting beautifulsoup4>=4.9.0\n",
            "  Downloading beautifulsoup4-4.11.1-py3-none-any.whl (128 kB)\n",
            "\u001b[K     |████████████████████████████████| 128 kB 77.4 MB/s \n",
            "\u001b[?25hCollecting logzero>=1.5.0\n",
            "  Downloading logzero-1.7.0-py2.py3-none-any.whl (16 kB)\n",
            "Requirement already satisfied: soupsieve>1.2 in /usr/local/lib/python3.7/dist-packages (from beautifulsoup4>=4.9.0->geeadd>=0.5.1->geemap) (2.3.2.post1)\n",
            "Requirement already satisfied: uritemplate<4dev,>=3.0.0 in /usr/local/lib/python3.7/dist-packages (from google-api-python-client<2,>=1.12.1->earthengine-api>=0.1.304->geemap) (3.0.1)\n",
            "Requirement already satisfied: google-api-core<3dev,>=1.21.0 in /usr/local/lib/python3.7/dist-packages (from google-api-python-client<2,>=1.12.1->earthengine-api>=0.1.304->geemap) (1.31.6)\n",
            "Requirement already satisfied: setuptools>=40.3.0 in /usr/local/lib/python3.7/dist-packages (from google-api-core<3dev,>=1.21.0->google-api-python-client<2,>=1.12.1->earthengine-api>=0.1.304->geemap) (57.4.0)\n",
            "Requirement already satisfied: protobuf<4.0.0dev,>=3.12.0 in /usr/local/lib/python3.7/dist-packages (from google-api-core<3dev,>=1.21.0->google-api-python-client<2,>=1.12.1->earthengine-api>=0.1.304->geemap) (3.17.3)\n",
            "Requirement already satisfied: packaging>=14.3 in /usr/local/lib/python3.7/dist-packages (from google-api-core<3dev,>=1.21.0->google-api-python-client<2,>=1.12.1->earthengine-api>=0.1.304->geemap) (21.3)\n",
            "Requirement already satisfied: pytz in /usr/local/lib/python3.7/dist-packages (from google-api-core<3dev,>=1.21.0->google-api-python-client<2,>=1.12.1->earthengine-api>=0.1.304->geemap) (2022.1)\n",
            "Requirement already satisfied: googleapis-common-protos<2.0dev,>=1.6.0 in /usr/local/lib/python3.7/dist-packages (from google-api-core<3dev,>=1.21.0->google-api-python-client<2,>=1.12.1->earthengine-api>=0.1.304->geemap) (1.56.2)\n",
            "Requirement already satisfied: rsa<5,>=3.1.4 in /usr/local/lib/python3.7/dist-packages (from google-auth>=1.4.1->earthengine-api>=0.1.304->geemap) (4.8)\n",
            "Requirement already satisfied: cachetools<5.0,>=2.0.0 in /usr/local/lib/python3.7/dist-packages (from google-auth>=1.4.1->earthengine-api>=0.1.304->geemap) (4.2.4)\n",
            "Requirement already satisfied: pyasn1-modules>=0.2.1 in /usr/local/lib/python3.7/dist-packages (from google-auth>=1.4.1->earthengine-api>=0.1.304->geemap) (0.2.8)\n",
            "Requirement already satisfied: ipywidgets in /usr/local/lib/python3.7/dist-packages (from ipyfilechooser>=0.6.0->geemap) (7.7.0)\n",
            "Collecting traittypes<3,>=0.2.1\n",
            "  Downloading traittypes-0.2.1-py2.py3-none-any.whl (8.6 kB)\n",
            "Requirement already satisfied: widgetsnbextension~=3.6.0 in /usr/local/lib/python3.7/dist-packages (from ipywidgets->ipyfilechooser>=0.6.0->geemap) (3.6.0)\n",
            "Requirement already satisfied: ipykernel>=4.5.1 in /usr/local/lib/python3.7/dist-packages (from ipywidgets->ipyfilechooser>=0.6.0->geemap) (4.10.1)\n",
            "Requirement already satisfied: traitlets>=4.3.1 in /usr/local/lib/python3.7/dist-packages (from ipywidgets->ipyfilechooser>=0.6.0->geemap) (5.1.1)\n",
            "Requirement already satisfied: jupyterlab-widgets>=1.0.0 in /usr/local/lib/python3.7/dist-packages (from ipywidgets->ipyfilechooser>=0.6.0->geemap) (1.1.0)\n",
            "Requirement already satisfied: ipython-genutils~=0.2.0 in /usr/local/lib/python3.7/dist-packages (from ipywidgets->ipyfilechooser>=0.6.0->geemap) (0.2.0)\n",
            "Requirement already satisfied: nbformat>=4.2.0 in /usr/local/lib/python3.7/dist-packages (from ipywidgets->ipyfilechooser>=0.6.0->geemap) (5.4.0)\n",
            "Requirement already satisfied: ipython>=4.0.0 in /usr/local/lib/python3.7/dist-packages (from ipywidgets->ipyfilechooser>=0.6.0->geemap) (5.5.0)\n",
            "Requirement already satisfied: tornado>=4.0 in /usr/local/lib/python3.7/dist-packages (from ipykernel>=4.5.1->ipywidgets->ipyfilechooser>=0.6.0->geemap) (5.1.1)\n",
            "Requirement already satisfied: jupyter-client in /usr/local/lib/python3.7/dist-packages (from ipykernel>=4.5.1->ipywidgets->ipyfilechooser>=0.6.0->geemap) (5.3.5)\n",
            "Requirement already satisfied: pexpect in /usr/local/lib/python3.7/dist-packages (from ipython>=4.0.0->ipywidgets->ipyfilechooser>=0.6.0->geemap) (4.8.0)\n",
            "Requirement already satisfied: pickleshare in /usr/local/lib/python3.7/dist-packages (from ipython>=4.0.0->ipywidgets->ipyfilechooser>=0.6.0->geemap) (0.7.5)\n",
            "Requirement already satisfied: simplegeneric>0.8 in /usr/local/lib/python3.7/dist-packages (from ipython>=4.0.0->ipywidgets->ipyfilechooser>=0.6.0->geemap) (0.8.1)\n",
            "Requirement already satisfied: prompt-toolkit<2.0.0,>=1.0.4 in /usr/local/lib/python3.7/dist-packages (from ipython>=4.0.0->ipywidgets->ipyfilechooser>=0.6.0->geemap) (1.0.18)\n",
            "Requirement already satisfied: pygments in /usr/local/lib/python3.7/dist-packages (from ipython>=4.0.0->ipywidgets->ipyfilechooser>=0.6.0->geemap) (2.6.1)\n",
            "Requirement already satisfied: decorator in /usr/local/lib/python3.7/dist-packages (from ipython>=4.0.0->ipywidgets->ipyfilechooser>=0.6.0->geemap) (4.4.2)\n",
            "Requirement already satisfied: MarkupSafe>=0.23 in /usr/local/lib/python3.7/dist-packages (from jinja2>=2.9->folium>=0.11.0->geemap) (2.0.1)\n",
            "Collecting jupyter-server~=1.16\n",
            "  Downloading jupyter_server-1.17.0-py3-none-any.whl (342 kB)\n",
            "\u001b[K     |████████████████████████████████| 342 kB 55.7 MB/s \n",
            "\u001b[?25hCollecting jupyterlab-server~=2.10\n",
            "  Downloading jupyterlab_server-2.14.0-py3-none-any.whl (54 kB)\n",
            "\u001b[K     |████████████████████████████████| 54 kB 2.9 MB/s \n",
            "\u001b[?25hCollecting nbclassic~=0.2\n",
            "  Downloading nbclassic-0.3.7-py3-none-any.whl (13 kB)\n",
            "Requirement already satisfied: jupyter-core in /usr/local/lib/python3.7/dist-packages (from jupyterlab>=3->geemap) (4.10.0)\n",
            "Collecting tornado>=4.0\n",
            "  Downloading tornado-6.1-cp37-cp37m-manylinux2010_x86_64.whl (428 kB)\n",
            "\u001b[K     |████████████████████████████████| 428 kB 49.9 MB/s \n",
            "\u001b[?25hRequirement already satisfied: prometheus-client in /usr/local/lib/python3.7/dist-packages (from jupyter-server~=1.16->jupyterlab>=3->geemap) (0.14.1)\n",
            "Collecting websocket-client\n",
            "  Downloading websocket_client-1.3.2-py3-none-any.whl (54 kB)\n",
            "\u001b[K     |████████████████████████████████| 54 kB 3.0 MB/s \n",
            "\u001b[?25hCollecting anyio<4,>=3.1.0\n",
            "  Downloading anyio-3.6.1-py3-none-any.whl (80 kB)\n",
            "\u001b[K     |████████████████████████████████| 80 kB 8.9 MB/s \n",
            "\u001b[?25hCollecting jupyter-client\n",
            "  Downloading jupyter_client-7.3.1-py3-none-any.whl (130 kB)\n",
            "\u001b[K     |████████████████████████████████| 130 kB 49.6 MB/s \n",
            "\u001b[?25hCollecting nbconvert>=6.4.4\n",
            "  Downloading nbconvert-6.5.0-py3-none-any.whl (561 kB)\n",
            "\u001b[K     |████████████████████████████████| 561 kB 46.0 MB/s \n",
            "\u001b[?25hRequirement already satisfied: terminado>=0.8.3 in /usr/local/lib/python3.7/dist-packages (from jupyter-server~=1.16->jupyterlab>=3->geemap) (0.13.3)\n",
            "Requirement already satisfied: Send2Trash in /usr/local/lib/python3.7/dist-packages (from jupyter-server~=1.16->jupyterlab>=3->geemap) (1.8.0)\n",
            "Requirement already satisfied: argon2-cffi in /usr/local/lib/python3.7/dist-packages (from jupyter-server~=1.16->jupyterlab>=3->geemap) (21.3.0)\n",
            "Requirement already satisfied: pyzmq>=17 in /usr/local/lib/python3.7/dist-packages (from jupyter-server~=1.16->jupyterlab>=3->geemap) (23.0.0)\n",
            "Requirement already satisfied: idna>=2.8 in /usr/local/lib/python3.7/dist-packages (from anyio<4,>=3.1.0->jupyter-server~=1.16->jupyterlab>=3->geemap) (2.10)\n",
            "Collecting sniffio>=1.1\n",
            "  Downloading sniffio-1.2.0-py3-none-any.whl (10 kB)\n",
            "Requirement already satisfied: typing-extensions in /usr/local/lib/python3.7/dist-packages (from anyio<4,>=3.1.0->jupyter-server~=1.16->jupyterlab>=3->geemap) (4.2.0)\n",
            "Requirement already satisfied: entrypoints in /usr/local/lib/python3.7/dist-packages (from jupyter-client->ipykernel>=4.5.1->ipywidgets->ipyfilechooser>=0.6.0->geemap) (0.4)\n",
            "Requirement already satisfied: python-dateutil>=2.8.2 in /usr/local/lib/python3.7/dist-packages (from jupyter-client->ipykernel>=4.5.1->ipywidgets->ipyfilechooser>=0.6.0->geemap) (2.8.2)\n",
            "Requirement already satisfied: nest-asyncio>=1.5.4 in /usr/local/lib/python3.7/dist-packages (from jupyter-client->ipykernel>=4.5.1->ipywidgets->ipyfilechooser>=0.6.0->geemap) (1.5.5)\n",
            "Requirement already satisfied: babel in /usr/local/lib/python3.7/dist-packages (from jupyterlab-server~=2.10->jupyterlab>=3->geemap) (2.10.1)\n",
            "Requirement already satisfied: importlib-metadata>=3.6 in /usr/local/lib/python3.7/dist-packages (from jupyterlab-server~=2.10->jupyterlab>=3->geemap) (4.11.4)\n",
            "Requirement already satisfied: jsonschema>=3.0.1 in /usr/local/lib/python3.7/dist-packages (from jupyterlab-server~=2.10->jupyterlab>=3->geemap) (4.3.3)\n",
            "Collecting jinja2>=2.9\n",
            "  Downloading Jinja2-3.1.2-py3-none-any.whl (133 kB)\n",
            "\u001b[K     |████████████████████████████████| 133 kB 51.2 MB/s \n",
            "\u001b[?25hCollecting json5\n",
            "  Downloading json5-0.9.8.tar.gz (22 kB)\n",
            "Requirement already satisfied: zipp>=0.5 in /usr/local/lib/python3.7/dist-packages (from importlib-metadata>=3.6->jupyterlab-server~=2.10->jupyterlab>=3->geemap) (3.8.0)\n",
            "Requirement already satisfied: attrs>=17.4.0 in /usr/local/lib/python3.7/dist-packages (from jsonschema>=3.0.1->jupyterlab-server~=2.10->jupyterlab>=3->geemap) (21.4.0)\n",
            "Requirement already satisfied: pyrsistent!=0.17.0,!=0.17.1,!=0.17.2,>=0.14.0 in /usr/local/lib/python3.7/dist-packages (from jsonschema>=3.0.1->jupyterlab-server~=2.10->jupyterlab>=3->geemap) (0.18.1)\n",
            "Requirement already satisfied: importlib-resources>=1.4.0 in /usr/local/lib/python3.7/dist-packages (from jsonschema>=3.0.1->jupyterlab-server~=2.10->jupyterlab>=3->geemap) (5.7.1)\n",
            "Requirement already satisfied: networkx in /usr/local/lib/python3.7/dist-packages (from mapclassify>=2.4.0->geemap) (2.6.3)\n",
            "Requirement already satisfied: scikit-learn in /usr/local/lib/python3.7/dist-packages (from mapclassify>=2.4.0->geemap) (1.0.2)\n",
            "Requirement already satisfied: scipy>=1.0 in /usr/local/lib/python3.7/dist-packages (from mapclassify>=2.4.0->geemap) (1.4.1)\n",
            "Collecting notebook-shim>=0.1.0\n",
            "  Downloading notebook_shim-0.1.0-py3-none-any.whl (13 kB)\n",
            "Requirement already satisfied: notebook<7 in /usr/local/lib/python3.7/dist-packages (from nbclassic~=0.2->jupyterlab>=3->geemap) (5.3.1)\n",
            "Requirement already satisfied: mistune<2,>=0.8.1 in /usr/local/lib/python3.7/dist-packages (from nbconvert>=6.4.4->jupyter-server~=1.16->jupyterlab>=3->geemap) (0.8.4)\n",
            "Requirement already satisfied: tinycss2 in /usr/local/lib/python3.7/dist-packages (from nbconvert>=6.4.4->jupyter-server~=1.16->jupyterlab>=3->geemap) (1.1.1)\n",
            "Requirement already satisfied: bleach in /usr/local/lib/python3.7/dist-packages (from nbconvert>=6.4.4->jupyter-server~=1.16->jupyterlab>=3->geemap) (5.0.0)\n",
            "Requirement already satisfied: jupyterlab-pygments in /usr/local/lib/python3.7/dist-packages (from nbconvert>=6.4.4->jupyter-server~=1.16->jupyterlab>=3->geemap) (0.2.2)\n",
            "Requirement already satisfied: defusedxml in /usr/local/lib/python3.7/dist-packages (from nbconvert>=6.4.4->jupyter-server~=1.16->jupyterlab>=3->geemap) (0.7.1)\n",
            "Requirement already satisfied: nbclient>=0.5.0 in /usr/local/lib/python3.7/dist-packages (from nbconvert>=6.4.4->jupyter-server~=1.16->jupyterlab>=3->geemap) (0.6.3)\n",
            "Requirement already satisfied: pandocfilters>=1.4.1 in /usr/local/lib/python3.7/dist-packages (from nbconvert>=6.4.4->jupyter-server~=1.16->jupyterlab>=3->geemap) (1.5.0)\n",
            "Requirement already satisfied: fastjsonschema in /usr/local/lib/python3.7/dist-packages (from nbformat>=4.2.0->ipywidgets->ipyfilechooser>=0.6.0->geemap) (2.15.3)\n",
            "Requirement already satisfied: pyparsing!=3.0.5,>=2.0.2 in /usr/local/lib/python3.7/dist-packages (from packaging>=14.3->google-api-core<3dev,>=1.21.0->google-api-python-client<2,>=1.12.1->earthengine-api>=0.1.304->geemap) (3.0.9)\n",
            "Requirement already satisfied: wcwidth in /usr/local/lib/python3.7/dist-packages (from prompt-toolkit<2.0.0,>=1.0.4->ipython>=4.0.0->ipywidgets->ipyfilechooser>=0.6.0->geemap) (0.2.5)\n",
            "Requirement already satisfied: pyasn1<0.5.0,>=0.4.6 in /usr/local/lib/python3.7/dist-packages (from pyasn1-modules>=0.2.1->google-auth>=1.4.1->earthengine-api>=0.1.304->geemap) (0.4.8)\n",
            "Requirement already satisfied: certifi>=2017.4.17 in /usr/local/lib/python3.7/dist-packages (from requests->folium>=0.11.0->geemap) (2022.5.18.1)\n",
            "Requirement already satisfied: urllib3!=1.25.0,!=1.25.1,<1.26,>=1.21.1 in /usr/local/lib/python3.7/dist-packages (from requests->folium>=0.11.0->geemap) (1.24.3)\n",
            "Requirement already satisfied: chardet<4,>=3.0.2 in /usr/local/lib/python3.7/dist-packages (from requests->folium>=0.11.0->geemap) (3.0.4)\n",
            "Requirement already satisfied: ptyprocess in /usr/local/lib/python3.7/dist-packages (from terminado>=0.8.3->jupyter-server~=1.16->jupyterlab>=3->geemap) (0.7.0)\n",
            "Collecting whitebox\n",
            "  Downloading whitebox-2.1.2-py2.py3-none-any.whl (75 kB)\n",
            "\u001b[K     |████████████████████████████████| 75 kB 4.4 MB/s \n",
            "\u001b[?25hRequirement already satisfied: argon2-cffi-bindings in /usr/local/lib/python3.7/dist-packages (from argon2-cffi->jupyter-server~=1.16->jupyterlab>=3->geemap) (21.2.0)\n",
            "Requirement already satisfied: cffi>=1.0.1 in /usr/local/lib/python3.7/dist-packages (from argon2-cffi-bindings->argon2-cffi->jupyter-server~=1.16->jupyterlab>=3->geemap) (1.15.0)\n",
            "Requirement already satisfied: pycparser in /usr/local/lib/python3.7/dist-packages (from cffi>=1.0.1->argon2-cffi-bindings->argon2-cffi->jupyter-server~=1.16->jupyterlab>=3->geemap) (2.21)\n",
            "Requirement already satisfied: webencodings in /usr/local/lib/python3.7/dist-packages (from bleach->nbconvert>=6.4.4->jupyter-server~=1.16->jupyterlab>=3->geemap) (0.5.1)\n",
            "Requirement already satisfied: tqdm in /usr/local/lib/python3.7/dist-packages (from gdown->geemap) (4.64.0)\n",
            "Requirement already satisfied: filelock in /usr/local/lib/python3.7/dist-packages (from gdown->geemap) (3.7.0)\n",
            "Requirement already satisfied: click in /usr/local/lib/python3.7/dist-packages (from geocoder->geemap) (7.1.2)\n",
            "Collecting ratelim\n",
            "  Downloading ratelim-0.1.6-py2.py3-none-any.whl (4.0 kB)\n",
            "Requirement already satisfied: google-cloud-core<2.0dev,>=1.0.0 in /usr/local/lib/python3.7/dist-packages (from google-cloud-storage->earthengine-api>=0.1.304->geemap) (1.0.3)\n",
            "Requirement already satisfied: google-resumable-media<0.5.0dev,>=0.3.1 in /usr/local/lib/python3.7/dist-packages (from google-cloud-storage->earthengine-api>=0.1.304->geemap) (0.4.1)\n",
            "Requirement already satisfied: kiwisolver>=1.0.1 in /usr/local/lib/python3.7/dist-packages (from matplotlib->geemap) (1.4.2)\n",
            "Requirement already satisfied: cycler>=0.10 in /usr/local/lib/python3.7/dist-packages (from matplotlib->geemap) (0.11.0)\n",
            "Requirement already satisfied: PySocks!=1.5.7,>=1.5.6 in /usr/local/lib/python3.7/dist-packages (from requests->folium>=0.11.0->geemap) (1.7.1)\n",
            "Requirement already satisfied: plotly>=5.2.2 in /usr/local/lib/python3.7/dist-packages (from sankee->geemap) (5.5.0)\n",
            "Requirement already satisfied: tenacity>=6.2.0 in /usr/local/lib/python3.7/dist-packages (from plotly>=5.2.2->sankee->geemap) (8.0.1)\n",
            "Requirement already satisfied: threadpoolctl>=2.0.0 in /usr/local/lib/python3.7/dist-packages (from scikit-learn->mapclassify>=2.4.0->geemap) (3.1.0)\n",
            "Requirement already satisfied: joblib>=0.11 in /usr/local/lib/python3.7/dist-packages (from scikit-learn->mapclassify>=2.4.0->geemap) (1.1.0)\n",
            "Building wheels for collected packages: ee-extra, json5, pycrs, sankee\n",
            "  Building wheel for ee-extra (setup.py) ... \u001b[?25l\u001b[?25hdone\n",
            "  Created wheel for ee-extra: filename=ee_extra-0.0.13-py3-none-any.whl size=198407 sha256=8d6ab4bcb498cdc6d5881f5d86787af3589cb5f9ebbf36b7accd4f4a23071e8c\n",
            "  Stored in directory: /root/.cache/pip/wheels/54/f2/bc/51930fbbffdd2ef1b5aac2e332c068e4913e56634f90efdef8\n",
            "  Building wheel for json5 (setup.py) ... \u001b[?25l\u001b[?25hdone\n",
            "  Created wheel for json5: filename=json5-0.9.8-py2.py3-none-any.whl size=18604 sha256=4cd61c63287b228eff22dcd49d1856de6ee4546815457208b5b9b224f509035f\n",
            "  Stored in directory: /root/.cache/pip/wheels/ac/9b/de/6e4fd8f159d3dfa42c42ceddf2184fda29ea7fb1e8f5f8371c\n",
            "  Building wheel for pycrs (setup.py) ... \u001b[?25l\u001b[?25hdone\n",
            "  Created wheel for pycrs: filename=PyCRS-1.0.2-py3-none-any.whl size=32704 sha256=5530d93923a481b60e8dfe3ac4bdc7f7ea2ab2b06865bb838aaede2c7281d728\n",
            "  Stored in directory: /root/.cache/pip/wheels/3e/ce/32/1ec0aba6b9770681a423e82f0274c57d09ad2c20c2864901f9\n",
            "  Building wheel for sankee (setup.py) ... \u001b[?25l\u001b[?25hdone\n",
            "  Created wheel for sankee: filename=sankee-0.0.7-py3-none-any.whl size=27639 sha256=b59d5942fac0cc30c38c26e32e5b84148c03c693c339849ece38b6c66e87da21\n",
            "  Stored in directory: /root/.cache/pip/wheels/13/28/83/5726f82a8cb0baf76169d99ee0595c420afedb9020e22bbd4b\n",
            "Successfully built ee-extra json5 pycrs sankee\n",
            "Installing collected packages: tornado, jupyter-client, jinja2, beautifulsoup4, sniffio, nbconvert, websocket-client, anyio, jupyter-server, notebook-shim, json5, xyzservices, whitebox, traittypes, ratelim, nbclassic, logzero, jupyterlab-server, ipytree, ipyfilechooser, whiteboxgui, sankee, python-box, pyshp, pycrs, mapclassify, jupyterlab, ipyleaflet, ipyevents, geojson, geocoder, geeadd, folium, ffmpeg-python, ee-extra, colour, bqplot, geemap\n",
            "  Attempting uninstall: tornado\n",
            "    Found existing installation: tornado 5.1.1\n",
            "    Uninstalling tornado-5.1.1:\n",
            "      Successfully uninstalled tornado-5.1.1\n",
            "  Attempting uninstall: jupyter-client\n",
            "    Found existing installation: jupyter-client 5.3.5\n",
            "    Uninstalling jupyter-client-5.3.5:\n",
            "      Successfully uninstalled jupyter-client-5.3.5\n",
            "  Attempting uninstall: jinja2\n",
            "    Found existing installation: Jinja2 2.11.3\n",
            "    Uninstalling Jinja2-2.11.3:\n",
            "      Successfully uninstalled Jinja2-2.11.3\n",
            "  Attempting uninstall: beautifulsoup4\n",
            "    Found existing installation: beautifulsoup4 4.6.3\n",
            "    Uninstalling beautifulsoup4-4.6.3:\n",
            "      Successfully uninstalled beautifulsoup4-4.6.3\n",
            "  Attempting uninstall: nbconvert\n",
            "    Found existing installation: nbconvert 5.6.1\n",
            "    Uninstalling nbconvert-5.6.1:\n",
            "      Successfully uninstalled nbconvert-5.6.1\n",
            "  Attempting uninstall: folium\n",
            "    Found existing installation: folium 0.8.3\n",
            "    Uninstalling folium-0.8.3:\n",
            "      Successfully uninstalled folium-0.8.3\n",
            "\u001b[31mERROR: pip's dependency resolver does not currently take into account all the packages that are installed. This behaviour is the source of the following dependency conflicts.\n",
            "google-colab 1.0.0 requires tornado~=5.1.0; python_version >= \"3.0\", but you have tornado 6.1 which is incompatible.\n",
            "flask 1.1.4 requires Jinja2<3.0,>=2.10.1, but you have jinja2 3.1.2 which is incompatible.\n",
            "datascience 0.10.6 requires folium==0.2.1, but you have folium 0.12.1.post1 which is incompatible.\u001b[0m\n",
            "Successfully installed anyio-3.6.1 beautifulsoup4-4.11.1 bqplot-0.12.33 colour-0.1.5 ee-extra-0.0.13 ffmpeg-python-0.2.0 folium-0.12.1.post1 geeadd-0.5.5 geemap-0.13.7 geocoder-1.38.1 geojson-2.5.0 ipyevents-2.0.1 ipyfilechooser-0.6.0 ipyleaflet-0.16.0 ipytree-0.2.1 jinja2-3.1.2 json5-0.9.8 jupyter-client-7.3.1 jupyter-server-1.17.0 jupyterlab-3.4.2 jupyterlab-server-2.14.0 logzero-1.7.0 mapclassify-2.4.3 nbclassic-0.3.7 nbconvert-6.5.0 notebook-shim-0.1.0 pycrs-1.0.2 pyshp-2.3.0 python-box-6.0.2 ratelim-0.1.6 sankee-0.0.7 sniffio-1.2.0 tornado-6.1 traittypes-0.2.1 websocket-client-1.3.2 whitebox-2.1.2 whiteboxgui-0.7.0 xyzservices-2022.4.0\n"
          ]
        },
        {
          "output_type": "display_data",
          "data": {
            "application/vnd.colab-display-data+json": {
              "pip_warning": {
                "packages": [
                  "jupyter_client",
                  "tornado"
                ]
              }
            }
          },
          "metadata": {}
        },
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Looking in indexes: https://pypi.org/simple, https://us-python.pkg.dev/colab-wheels/public/simple/\n",
            "Collecting eemont\n",
            "  Downloading eemont-0.3.4.tar.gz (113 kB)\n",
            "\u001b[K     |████████████████████████████████| 113 kB 9.3 MB/s \n",
            "\u001b[?25hRequirement already satisfied: beautifulsoup4 in /usr/local/lib/python3.7/dist-packages (from eemont) (4.11.1)\n",
            "Requirement already satisfied: earthengine-api in /usr/local/lib/python3.7/dist-packages (from eemont) (0.1.311)\n",
            "Requirement already satisfied: ee_extra>=0.0.13 in /usr/local/lib/python3.7/dist-packages (from eemont) (0.0.13)\n",
            "Requirement already satisfied: numpy in /usr/local/lib/python3.7/dist-packages (from eemont) (1.21.6)\n",
            "Requirement already satisfied: pandas in /usr/local/lib/python3.7/dist-packages (from eemont) (1.3.5)\n",
            "Requirement already satisfied: python-box in /usr/local/lib/python3.7/dist-packages (from eemont) (6.0.2)\n",
            "Requirement already satisfied: geopy in /usr/local/lib/python3.7/dist-packages (from eemont) (1.17.0)\n",
            "Requirement already satisfied: requests in /usr/local/lib/python3.7/dist-packages (from eemont) (2.23.0)\n",
            "Requirement already satisfied: soupsieve>1.2 in /usr/local/lib/python3.7/dist-packages (from beautifulsoup4->eemont) (2.3.2.post1)\n",
            "Requirement already satisfied: httplib2<1dev,>=0.9.2 in /usr/local/lib/python3.7/dist-packages (from earthengine-api->eemont) (0.17.4)\n",
            "Requirement already satisfied: google-cloud-storage in /usr/local/lib/python3.7/dist-packages (from earthengine-api->eemont) (1.18.1)\n",
            "Requirement already satisfied: google-auth-httplib2>=0.0.3 in /usr/local/lib/python3.7/dist-packages (from earthengine-api->eemont) (0.0.4)\n",
            "Requirement already satisfied: future in /usr/local/lib/python3.7/dist-packages (from earthengine-api->eemont) (0.16.0)\n",
            "Requirement already satisfied: google-auth>=1.4.1 in /usr/local/lib/python3.7/dist-packages (from earthengine-api->eemont) (1.35.0)\n",
            "Requirement already satisfied: google-api-python-client<2,>=1.12.1 in /usr/local/lib/python3.7/dist-packages (from earthengine-api->eemont) (1.12.11)\n",
            "Requirement already satisfied: six in /usr/local/lib/python3.7/dist-packages (from earthengine-api->eemont) (1.15.0)\n",
            "Requirement already satisfied: httplib2shim in /usr/local/lib/python3.7/dist-packages (from earthengine-api->eemont) (0.0.3)\n",
            "Requirement already satisfied: uritemplate<4dev,>=3.0.0 in /usr/local/lib/python3.7/dist-packages (from google-api-python-client<2,>=1.12.1->earthengine-api->eemont) (3.0.1)\n",
            "Requirement already satisfied: google-api-core<3dev,>=1.21.0 in /usr/local/lib/python3.7/dist-packages (from google-api-python-client<2,>=1.12.1->earthengine-api->eemont) (1.31.6)\n",
            "Requirement already satisfied: protobuf<4.0.0dev,>=3.12.0 in /usr/local/lib/python3.7/dist-packages (from google-api-core<3dev,>=1.21.0->google-api-python-client<2,>=1.12.1->earthengine-api->eemont) (3.17.3)\n",
            "Requirement already satisfied: pytz in /usr/local/lib/python3.7/dist-packages (from google-api-core<3dev,>=1.21.0->google-api-python-client<2,>=1.12.1->earthengine-api->eemont) (2022.1)\n",
            "Requirement already satisfied: packaging>=14.3 in /usr/local/lib/python3.7/dist-packages (from google-api-core<3dev,>=1.21.0->google-api-python-client<2,>=1.12.1->earthengine-api->eemont) (21.3)\n",
            "Requirement already satisfied: setuptools>=40.3.0 in /usr/local/lib/python3.7/dist-packages (from google-api-core<3dev,>=1.21.0->google-api-python-client<2,>=1.12.1->earthengine-api->eemont) (57.4.0)\n",
            "Requirement already satisfied: googleapis-common-protos<2.0dev,>=1.6.0 in /usr/local/lib/python3.7/dist-packages (from google-api-core<3dev,>=1.21.0->google-api-python-client<2,>=1.12.1->earthengine-api->eemont) (1.56.2)\n",
            "Requirement already satisfied: rsa<5,>=3.1.4 in /usr/local/lib/python3.7/dist-packages (from google-auth>=1.4.1->earthengine-api->eemont) (4.8)\n",
            "Requirement already satisfied: cachetools<5.0,>=2.0.0 in /usr/local/lib/python3.7/dist-packages (from google-auth>=1.4.1->earthengine-api->eemont) (4.2.4)\n",
            "Requirement already satisfied: pyasn1-modules>=0.2.1 in /usr/local/lib/python3.7/dist-packages (from google-auth>=1.4.1->earthengine-api->eemont) (0.2.8)\n",
            "Requirement already satisfied: pyparsing!=3.0.5,>=2.0.2 in /usr/local/lib/python3.7/dist-packages (from packaging>=14.3->google-api-core<3dev,>=1.21.0->google-api-python-client<2,>=1.12.1->earthengine-api->eemont) (3.0.9)\n",
            "Requirement already satisfied: pyasn1<0.5.0,>=0.4.6 in /usr/local/lib/python3.7/dist-packages (from pyasn1-modules>=0.2.1->google-auth>=1.4.1->earthengine-api->eemont) (0.4.8)\n",
            "Requirement already satisfied: chardet<4,>=3.0.2 in /usr/local/lib/python3.7/dist-packages (from requests->eemont) (3.0.4)\n",
            "Requirement already satisfied: urllib3!=1.25.0,!=1.25.1,<1.26,>=1.21.1 in /usr/local/lib/python3.7/dist-packages (from requests->eemont) (1.24.3)\n",
            "Requirement already satisfied: certifi>=2017.4.17 in /usr/local/lib/python3.7/dist-packages (from requests->eemont) (2022.5.18.1)\n",
            "Requirement already satisfied: idna<3,>=2.5 in /usr/local/lib/python3.7/dist-packages (from requests->eemont) (2.10)\n",
            "Requirement already satisfied: geographiclib<2,>=1.49 in /usr/local/lib/python3.7/dist-packages (from geopy->eemont) (1.52)\n",
            "Requirement already satisfied: google-resumable-media<0.5.0dev,>=0.3.1 in /usr/local/lib/python3.7/dist-packages (from google-cloud-storage->earthengine-api->eemont) (0.4.1)\n",
            "Requirement already satisfied: google-cloud-core<2.0dev,>=1.0.0 in /usr/local/lib/python3.7/dist-packages (from google-cloud-storage->earthengine-api->eemont) (1.0.3)\n",
            "Requirement already satisfied: python-dateutil>=2.7.3 in /usr/local/lib/python3.7/dist-packages (from pandas->eemont) (2.8.2)\n",
            "Building wheels for collected packages: eemont\n",
            "  Building wheel for eemont (setup.py) ... \u001b[?25l\u001b[?25hdone\n",
            "  Created wheel for eemont: filename=eemont-0.3.4-py3-none-any.whl size=113770 sha256=a55cec80c934590bf4da4ec74109710c2c1dc76bee86a71cb2e8833250725624\n",
            "  Stored in directory: /root/.cache/pip/wheels/7e/ab/68/220a3a8855021fec164ef2fc80c50d90c31481f2526102f324\n",
            "Successfully built eemont\n",
            "Installing collected packages: eemont\n",
            "Successfully installed eemont-0.3.4\n"
          ]
        }
      ],
      "source": [
        "!pip install geopandas \n",
        "!pip install shapely\n",
        "!pip install geemap\n",
        "!pip install eemont"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": 1,
      "metadata": {
        "id": "HjBwlNgUi5Bx"
      },
      "outputs": [],
      "source": [
        "import pandas as pd\n",
        "import geopandas as gpd\n",
        "from geopandas import GeoDataFrame\n",
        "import numpy as np\n",
        "from shapely.geometry import Point\n",
        "from matplotlib import pyplot as plt\n",
        "\n",
        "import ee\n",
        "from google.colab import files\n",
        "\n",
        "import geemap #bless these people\n",
        "import eemont #bless these people\n",
        "\n",
        "import json\n",
        "\n",
        "import os"
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "5qEF1nkYL2ql"
      },
      "source": [
        "# Google Earth Engines Set Up"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": 4,
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "_-DXP1YEL7nO",
        "outputId": "88ee627c-3a19-47b4-a464-ded1bfccccb9"
      },
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "--2022-06-01 18:37:07--  https://github.com/jmdelvecchio/WISP_arctic_hydro/archive/refs/heads/main.zip\n",
            "Resolving github.com (github.com)... 192.30.255.112\n",
            "Connecting to github.com (github.com)|192.30.255.112|:443... connected.\n",
            "HTTP request sent, awaiting response... 302 Found\n",
            "Location: https://codeload.github.com/jmdelvecchio/WISP_arctic_hydro/zip/refs/heads/main [following]\n",
            "--2022-06-01 18:37:07--  https://codeload.github.com/jmdelvecchio/WISP_arctic_hydro/zip/refs/heads/main\n",
            "Resolving codeload.github.com (codeload.github.com)... 192.30.255.120\n",
            "Connecting to codeload.github.com (codeload.github.com)|192.30.255.120|:443... connected.\n",
            "HTTP request sent, awaiting response... 200 OK\n",
            "Length: unspecified [application/zip]\n",
            "Saving to: ‘main.zip’\n",
            "\n",
            "main.zip                [       <=>          ]  20.03M  7.02MB/s    in 2.9s    \n",
            "\n",
            "2022-06-01 18:37:10 (7.02 MB/s) - ‘main.zip’ saved [21008303]\n",
            "\n",
            "Archive:  /content/main.zip\n",
            "6498cefd03a8a67e0e2b07007881e8c77603392b\n",
            "   creating: WISP_arctic_hydro-main/\n",
            "  inflating: WISP_arctic_hydro-main/.gitattributes  \n",
            "   creating: WISP_arctic_hydro-main/.ipynb_checkpoints/\n",
            "  inflating: WISP_arctic_hydro-main/.ipynb_checkpoints/Working_with_watershed_shapefiles-checkpoint.ipynb  \n",
            "  inflating: WISP_arctic_hydro-main/LICENSE  \n",
            "  inflating: WISP_arctic_hydro-main/README.md  \n",
            "  inflating: WISP_arctic_hydro-main/Working_with_watershed_shapefiles.ipynb  \n",
            "   creating: WISP_arctic_hydro-main/data_tables/\n",
            "  inflating: WISP_arctic_hydro-main/data_tables/evans_hydro_supplement.csv  \n",
            "  inflating: WISP_arctic_hydro-main/data_tables/evans_hydro_supplement_new.csv  \n",
            "  inflating: WISP_arctic_hydro-main/data_tables/evans_hydro_table_1.csv  \n",
            "   creating: WISP_arctic_hydro-main/eda_tutorial/\n",
            "   creating: WISP_arctic_hydro-main/eda_tutorial/.ipynb_checkpoints/\n",
            "  inflating: WISP_arctic_hydro-main/eda_tutorial/.ipynb_checkpoints/Get_Started_With_Exploratory_Data_Analysis_11032021-checkpoint.ipynb  \n",
            "  inflating: WISP_arctic_hydro-main/eda_tutorial/Get_Started_With_Exploratory_Data_Analysis_11032021.ipynb  \n",
            "  inflating: WISP_arctic_hydro-main/eda_tutorial/auto-mpg-processed.csv  \n",
            "  inflating: WISP_arctic_hydro-main/eda_tutorial/auto-mpg.csv  \n",
            "  inflating: WISP_arctic_hydro-main/eda_tutorial/barchart.png  \n",
            "  inflating: WISP_arctic_hydro-main/eda_tutorial/boxplot.png  \n",
            "  inflating: WISP_arctic_hydro-main/eda_tutorial/heatmap.png  \n",
            "  inflating: WISP_arctic_hydro-main/eda_tutorial/pairplot.png  \n",
            "  inflating: WISP_arctic_hydro-main/eda_tutorial/pie.png  \n",
            "  inflating: WISP_arctic_hydro-main/environment.yml  \n",
            "   creating: WISP_arctic_hydro-main/final_products/\n",
            "  inflating: WISP_arctic_hydro-main/final_products/readme.md  \n",
            "   creating: WISP_arctic_hydro-main/gis_files/\n",
            "   creating: WISP_arctic_hydro-main/gis_files/.ipynb_checkpoints/\n",
            "  inflating: WISP_arctic_hydro-main/gis_files/.ipynb_checkpoints/Working_with_watershed_shapefiles-checkpoint.ipynb  \n",
            " extracting: WISP_arctic_hydro-main/gis_files/basins_attributes_merged.cpg  \n",
            "  inflating: WISP_arctic_hydro-main/gis_files/basins_attributes_merged.dbf  \n",
            "  inflating: WISP_arctic_hydro-main/gis_files/basins_attributes_merged.prj  \n",
            "  inflating: WISP_arctic_hydro-main/gis_files/basins_attributes_merged.shp  \n",
            "  inflating: WISP_arctic_hydro-main/gis_files/basins_attributes_merged.shx  \n",
            "  inflating: WISP_arctic_hydro-main/gis_files/permaice.avl  \n",
            "  inflating: WISP_arctic_hydro-main/gis_files/permaice.dbf  \n",
            "  inflating: WISP_arctic_hydro-main/gis_files/permaice.prj  \n",
            "  inflating: WISP_arctic_hydro-main/gis_files/permaice.shp  \n",
            "  inflating: WISP_arctic_hydro-main/gis_files/permaice.shx  \n"
          ]
        }
      ],
      "source": [
        "!wget https://github.com/jmdelvecchio/WISP_arctic_hydro/archive/refs/heads/main.zip\n",
        "\n",
        "!unzip /content/main.zip"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": 2,
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "gmWu7uF2i6jY",
        "outputId": "b125617b-e762-4112-a1d9-d4bb3151a35f"
      },
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "To authorize access needed by Earth Engine, open the following URL in a web browser and follow the instructions. If the web browser does not start automatically, please manually browse the URL below.\n",
            "\n",
            "    https://code.earthengine.google.com/client-auth?scopes=https%3A//www.googleapis.com/auth/earthengine%20https%3A//www.googleapis.com/auth/devstorage.full_control&request_id=0AjCxRn2rVjif9UITbFhFoM9xNI8lWQYdTnOVuVKTKc&tc=yH_uox3DtAUGYtYrcvfwRo4WsjwR1R4E7gNK331g_zM&cc=-NXwjw3UUWt1pvfX6fALBZGbMEp9sG0193byh0kZ6Rw\n",
            "\n",
            "The authorization workflow will generate a code, which you should paste in the box below. \n",
            "Enter verification code: 4/1AX4XfWhmBse9JbgI7cH5tAWogvrVYG-6oC90stodxKt-17jPS4CCssVTGjE\n",
            "\n",
            "Successfully saved authorization token.\n"
          ]
        }
      ],
      "source": [
        "ee.Authenticate()\n",
        "ee.Initialize()"
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "# Clean Up Original Data Frames"
      ],
      "metadata": {
        "id": "aFPQwoMgndcM"
      }
    },
    {
      "cell_type": "markdown",
      "source": [
        "## Df and Results2"
      ],
      "metadata": {
        "id": "LdWXUVK-ntxR"
      }
    },
    {
      "cell_type": "code",
      "execution_count": 5,
      "metadata": {
        "id": "4gdKbGh-MOiZ",
        "outputId": "1ea0e958-d2d9-4a9b-ee2a-1a75e5cd773b",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 340
        }
      },
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "  Station ID# Primary permafrost type Trend in recession intercept (%)  \\\n",
              "0       1,001                       C                              0.1   \n",
              "1       1,095                       C                            ?0.03   \n",
              "2       1,151                       C                             0.01   \n",
              "3       1,176                       C                             0.04   \n",
              "4       1,397                       C                             0.09   \n",
              "\n",
              "   Trend in recession intercept 1958–1989 (%) Minimum discharge ?% 1958–1989†  \\\n",
              "0                                         NaN                             NaN   \n",
              "1                                        0.09                            7.18   \n",
              "2                                        0.14                           15.65   \n",
              "3                                        0.10                           22.16   \n",
              "4                                         NaN                             NaN   \n",
              "\n",
              "  Station ID#.1 Primary permafrost type.1 Trend in recession intercept (%).1  \\\n",
              "0         3,518                         C                               0.02   \n",
              "1         7,015                         C                              ?0.03   \n",
              "2         7,024                         C                             ?0.03‡   \n",
              "3         7,036                         S                             ?0.05‡   \n",
              "4         7,072                         C                              ?0.01   \n",
              "\n",
              "  Trend in recession intercept 1958–1989 (%).1  \\\n",
              "0                                          NaN   \n",
              "1                                        ?0.06   \n",
              "2                                         0.02   \n",
              "3                                          NaN   \n",
              "4                                         0.07   \n",
              "\n",
              "  Minimum discharge ?% 1958–1989†.1 Station ID#.2 Primary permafrost type.2  \\\n",
              "0                               NaN        10,117                         S   \n",
              "1                              6.85        10,126                         N   \n",
              "2                                 3        10,176                         N   \n",
              "3                               NaN        10,219                         N   \n",
              "4                              4.76        10,259                         I   \n",
              "\n",
              "  Trend in recession intercept (%).2  \\\n",
              "0                              ?0.03   \n",
              "1                               0.01   \n",
              "2                             ?0.16*   \n",
              "3                            ?0.29**   \n",
              "4                              ?0.11   \n",
              "\n",
              "  Trend in recession intercept 1958–1989 (%).2  \\\n",
              "0                                          NaN   \n",
              "1                                         0.14   \n",
              "2                                        ?0.08   \n",
              "3                                       ?0.26‡   \n",
              "4                                          NaN   \n",
              "\n",
              "  Minimum discharge ?% 1958–1989†.2  \n",
              "0                               NaN  \n",
              "1                             ?6.17  \n",
              "2                             23.69  \n",
              "3                            ?28.93  \n",
              "4                               NaN  "
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-af80098e-d562-4cd1-a014-182a00af6c0e\">\n",
              "    <div class=\"colab-df-container\">\n",
              "      <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>Station ID#</th>\n",
              "      <th>Primary permafrost type</th>\n",
              "      <th>Trend in recession intercept (%)</th>\n",
              "      <th>Trend in recession intercept 1958–1989 (%)</th>\n",
              "      <th>Minimum discharge ?% 1958–1989†</th>\n",
              "      <th>Station ID#.1</th>\n",
              "      <th>Primary permafrost type.1</th>\n",
              "      <th>Trend in recession intercept (%).1</th>\n",
              "      <th>Trend in recession intercept 1958–1989 (%).1</th>\n",
              "      <th>Minimum discharge ?% 1958–1989†.1</th>\n",
              "      <th>Station ID#.2</th>\n",
              "      <th>Primary permafrost type.2</th>\n",
              "      <th>Trend in recession intercept (%).2</th>\n",
              "      <th>Trend in recession intercept 1958–1989 (%).2</th>\n",
              "      <th>Minimum discharge ?% 1958–1989†.2</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>1,001</td>\n",
              "      <td>C</td>\n",
              "      <td>0.1</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>3,518</td>\n",
              "      <td>C</td>\n",
              "      <td>0.02</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>10,117</td>\n",
              "      <td>S</td>\n",
              "      <td>?0.03</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>1,095</td>\n",
              "      <td>C</td>\n",
              "      <td>?0.03</td>\n",
              "      <td>0.09</td>\n",
              "      <td>7.18</td>\n",
              "      <td>7,015</td>\n",
              "      <td>C</td>\n",
              "      <td>?0.03</td>\n",
              "      <td>?0.06</td>\n",
              "      <td>6.85</td>\n",
              "      <td>10,126</td>\n",
              "      <td>N</td>\n",
              "      <td>0.01</td>\n",
              "      <td>0.14</td>\n",
              "      <td>?6.17</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>1,151</td>\n",
              "      <td>C</td>\n",
              "      <td>0.01</td>\n",
              "      <td>0.14</td>\n",
              "      <td>15.65</td>\n",
              "      <td>7,024</td>\n",
              "      <td>C</td>\n",
              "      <td>?0.03‡</td>\n",
              "      <td>0.02</td>\n",
              "      <td>3</td>\n",
              "      <td>10,176</td>\n",
              "      <td>N</td>\n",
              "      <td>?0.16*</td>\n",
              "      <td>?0.08</td>\n",
              "      <td>23.69</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>1,176</td>\n",
              "      <td>C</td>\n",
              "      <td>0.04</td>\n",
              "      <td>0.10</td>\n",
              "      <td>22.16</td>\n",
              "      <td>7,036</td>\n",
              "      <td>S</td>\n",
              "      <td>?0.05‡</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>10,219</td>\n",
              "      <td>N</td>\n",
              "      <td>?0.29**</td>\n",
              "      <td>?0.26‡</td>\n",
              "      <td>?28.93</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>1,397</td>\n",
              "      <td>C</td>\n",
              "      <td>0.09</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>7,072</td>\n",
              "      <td>C</td>\n",
              "      <td>?0.01</td>\n",
              "      <td>0.07</td>\n",
              "      <td>4.76</td>\n",
              "      <td>10,259</td>\n",
              "      <td>I</td>\n",
              "      <td>?0.11</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>\n",
              "      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-af80098e-d562-4cd1-a014-182a00af6c0e')\"\n",
              "              title=\"Convert this dataframe to an interactive table.\"\n",
              "              style=\"display:none;\">\n",
              "        \n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "       width=\"24px\">\n",
              "    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n",
              "    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n",
              "  </svg>\n",
              "      </button>\n",
              "      \n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      flex-wrap:wrap;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "      <script>\n",
              "        const buttonEl =\n",
              "          document.querySelector('#df-af80098e-d562-4cd1-a014-182a00af6c0e button.colab-df-convert');\n",
              "        buttonEl.style.display =\n",
              "          google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "        async function convertToInteractive(key) {\n",
              "          const element = document.querySelector('#df-af80098e-d562-4cd1-a014-182a00af6c0e');\n",
              "          const dataTable =\n",
              "            await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                     [key], {});\n",
              "          if (!dataTable) return;\n",
              "\n",
              "          const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "            + ' to learn more about interactive tables.';\n",
              "          element.innerHTML = '';\n",
              "          dataTable['output_type'] = 'display_data';\n",
              "          await google.colab.output.renderOutput(dataTable, element);\n",
              "          const docLink = document.createElement('div');\n",
              "          docLink.innerHTML = docLinkHtml;\n",
              "          element.appendChild(docLink);\n",
              "        }\n",
              "      </script>\n",
              "    </div>\n",
              "  </div>\n",
              "  "
            ]
          },
          "metadata": {},
          "execution_count": 5
        }
      ],
      "source": [
        "df = pd.read_csv('WISP_arctic_hydro-main/data_tables/evans_hydro_supplement_new.csv', encoding='windows-1254')\n",
        "df['Catchment area (km2)'] = df['Catchment area (km2)'].astype(float)\n",
        "df.columns.values[-1] = \"Prior primary permafrost type\"\n",
        "df = df.reindex(columns=df.columns)\n",
        "sheds_shp = gpd.read_file(\"WISP_arctic_hydro-main/gis_files/basins_attributes_merged.shp\")\n",
        "results = pd.read_csv('https://raw.githubusercontent.com/jmdelvecchio/WISP_arctic_hydro/main/data_tables/evans_hydro_table_1.csv', encoding = \"windows-1254\")\n",
        "results.head()"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": 7,
      "metadata": {
        "id": "DPpFCvSocNv6",
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "outputId": "0b1f5a2d-cc06-4e4b-835c-f436a0c753be"
      },
      "outputs": [
        {
          "output_type": "stream",
          "name": "stderr",
          "text": [
            "/usr/local/lib/python3.7/dist-packages/ipykernel_launcher.py:10: FutureWarning: The default value of regex will change from True to False in a future version. In addition, single character regular expressions will *not* be treated as literal strings when regex=True.\n",
            "  # Remove the CWD from sys.path while we load stuff.\n",
            "/usr/local/lib/python3.7/dist-packages/ipykernel_launcher.py:12: FutureWarning: The default value of regex will change from True to False in a future version. In addition, single character regular expressions will *not* be treated as literal strings when regex=True.\n",
            "  if sys.path[0] == '':\n"
          ]
        }
      ],
      "source": [
        "stationIDs = np.concatenate([results.iloc[:,0].values,results.iloc[:,5].values,results.iloc[:,10].values])\n",
        "PPT = np.concatenate([results.iloc[:,1].values,results.iloc[:,6].values,results.iloc[:,11].values])\n",
        "trend_all = np.concatenate([results.iloc[:,2].values,results.iloc[:,7].values,results.iloc[:,12].values])\n",
        "trend_dates = np.concatenate([results.iloc[:,3].values,results.iloc[:,8].values,results.iloc[:,13].values])\n",
        "discharge = np.concatenate([results.iloc[:,4].values,results.iloc[:,9].values,results.iloc[:,14].values])\n",
        "results2 = pd.DataFrame(dict(stationIDs=stationIDs, PPT=PPT, trend_all=trend_all, trend_dates=trend_dates, discharge=discharge)).dropna(how='all')\n",
        "results2['trend_all']=results2.trend_all.str.replace('\\**','',regex=True)\n",
        "results2['trend_all']=results2.trend_all.str.replace('‡', '',regex=True)\n",
        "results2['stationIDs']=results2.stationIDs.str.replace(',', '',regex=True)\n",
        "results2['trend_all']=results2.trend_all.str.replace('?', '-').astype(float)\n",
        "results2['discharge']=results2.discharge.str.replace('‡', '',regex=True)\n",
        "results2['discharge']=results2.discharge.str.replace('?', '-').astype(float)\n",
        "results2['stationIDs']=results2['stationIDs']\n",
        "results2['stationIDs']=results2.stationIDs.astype(int)\n",
        "df['Station ID#']=df['Station ID#'].astype(int)\n",
        "df3_merged=df.merge(results2,left_on='Station ID#',right_on='stationIDs', how='left')"
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "from google.colab import drive\n",
        "\n",
        "drive.mount('/content/drive')\n",
        "path = '/content/drive/Shared drives/WISP Files/df3_merged.csv'\n",
        "\n",
        "with open(path, 'w', encoding = 'utf-8-sig') as f:\n",
        "  df3_merged.to_csv(f)"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "vjXCU3sbFazR",
        "outputId": "c08294cd-e54f-4eed-eb38-6d160d43e414"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Mounted at /content/drive\n"
          ]
        }
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "## Filter Inaccurate Watershed Data"
      ],
      "metadata": {
        "id": "WqDrDpSXoEzI"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "dfshed_merged=df3_merged.merge(sheds_shp,left_on='Station ID#',right_on='Station ID', how='left')\n",
        "dfshed_merged['area ratio'] = (dfshed_merged['Catchment area (km2)']/dfshed_merged['da_km2'])\n",
        "dffiltered=dfshed_merged[dfshed_merged['area ratio'] > 0.8]\n",
        "dffiltered1=dffiltered[dffiltered['area ratio'] < 1.2]\n",
        "dffiltered1=gpd.GeoDataFrame(dffiltered1)\n",
        "dffiltered1.to_file(\"dffiltered1.shp\")\n",
        "sheds = geemap.shp_to_ee(\n",
        "    \"dffiltered1.shp\",\n",
        "     encoding = \"windows-1254\")"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "B8RTfN0AkcRx",
        "outputId": "d977f95b-121c-426f-f0c0-f9376fc18832"
      },
      "execution_count": 8,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stderr",
          "text": [
            "/usr/local/lib/python3.7/dist-packages/ipykernel_launcher.py:6: UserWarning: Column names longer than 10 characters will be truncated when saved to ESRI Shapefile.\n",
            "  \n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "from google.colab import drive\n",
        "\n",
        "drive.mount('/content/drive')\n",
        "path = '/content/drive/Shared drives/WISP Files/dffiltered1.csv'\n",
        "\n",
        "with open(path, 'w', encoding = 'utf-8-sig') as f:\n",
        "  dffiltered1.to_csv(f)"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "DBOO6fEsF-QL",
        "outputId": "40c9d0e0-edab-49c2-e379-3bb639d8d5de"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Drive already mounted at /content/drive; to attempt to forcibly remount, call drive.mount(\"/content/drive\", force_remount=True).\n"
          ]
        }
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "zjkcOFyejUDd"
      },
      "source": [
        "#Define key functions"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": 9,
      "metadata": {
        "id": "zZQmlzcYgweG"
      },
      "outputs": [],
      "source": [
        "def annual_images(y):\n",
        "    range_year = ee.Filter.calendarRange(y, y, 'year')\n",
        "    range_month = ee.Filter.calendarRange(start_month, end_month, 'month')\n",
        "    filtered_dataset = (index_collection\n",
        "                        .filter(range_year)\n",
        "                        .filter(range_month)\n",
        "                        .map(createTimeBand)) # Needed for linear regression \n",
        "    # Combine the mean and standard deviation reducers.\n",
        "    if analysis == 'mean':\n",
        "      reducers = ee.Reducer.mean().combine(\n",
        "        reducer2=ee.Reducer.stdDev(),\n",
        "        sharedInputs=True\n",
        "      )\n",
        "    elif analysis == 'min' or analysis == 'max':\n",
        "      reducers = ee.Reducer.mean().combine(\n",
        "        reducer2=ee.Reducer.minMax(),\n",
        "        sharedInputs=True\n",
        "      )\n",
        "    elif analysis == 'median':\n",
        "      reducers = ee.Reducer.mean().combine(\n",
        "        reducer2=ee.Reducer.median(),\n",
        "        sharedInputs=True\n",
        "      )\n",
        "\n",
        "# Use the combined reducer to get the mean and SD of the image.\n",
        "    stats0 = filtered_dataset.reduce(\n",
        "      reducer=reducers,\n",
        "    )\n",
        "\n",
        "    return stats0.set('year',y)\n",
        "\n",
        "# adapted from https://gis.stackexchange.com/questions/392834/transform-google-earth-engine-script-to-python-with-landsat-8-temporal-data"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": 10,
      "metadata": {
        "id": "ZVYX-7z7PFvI"
      },
      "outputs": [],
      "source": [
        "def createTimeBand(image):\n",
        "  return image.addBands(image.metadata('system:time_start').divide(3.154e10));\n",
        "  # // Scale is now in years\n",
        "  # // in the linear regression output."
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "sg-qRh-ujO1m"
      },
      "source": [
        "# Upload and load in watershed shapefiles"
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "dffiltered1=gpd.GeoDataFrame(dffiltered1)\n",
        "dffiltered1.to_file(\"dffiltered1.shp\")\n",
        "sheds = geemap.shp_to_ee(\n",
        "    \"WISP_arctic_hydro-main/gis_files/basins_attributes_merged.shp\",\n",
        "     encoding = \"windows-1254\")\n",
        "sheds = geemap.shp_to_ee(\n",
        "    \"dffiltered1.shp\",\n",
        "     encoding = \"windows-1254\")\n",
        "Map = geemap.Map()\n",
        "Map.addLayer(sheds, {}, 'Delineated watersheds')\n",
        "Map"
      ],
      "metadata": {
        "id": "jWFLj5ld4WLX",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 712,
          "referenced_widgets": [
            "48dcb232784b423abca6be8c21f7cfd2",
            "f8cf0db932a046ef82d487a6af880756",
            "c9cd7132e2684ea2bd6092262d0b7c11",
            "69a95016965544a790ceb312ef5e17c2",
            "a69ffcd4507649b98cf1726708ca0c65",
            "525f095b59c94fb295315dbbc531a407",
            "7e4021d94b5a42bbba6d909dac3ad596",
            "e08ce9e385bb4d748d33bb435c34d82e",
            "51f9f81a7803428b80ff03e7e839b768",
            "7fdbf698da20408a976e689fe55afb32",
            "d35275775a0b4afaab66b208ccb24a04",
            "219a0c1ae48c4bdc94103c6c63f11024",
            "b038488e19c6478dbcc55bbcc5c78139",
            "5a1171de330e47d995effaf1a776483a",
            "6837f2a6454245a98a26410829943306",
            "5f7155c98d614068a718abae9bf5f1d1",
            "0c9a740840f4401aa46332dfb989cf40",
            "e15b3247917243e2aa2ba7db05c4f1fb",
            "61d51598be9e4f16b8284b91dfe7dee5",
            "e2e75a8124f4417a8f6e579a40212688",
            "e11f590fd37045fb9855dd7bacd5f28b",
            "03c5e82ce28c49b18e5ec9298fee79ce",
            "4e7f46a158174b08b93564940b6cc0bd",
            "6f59f62a977e46cb881ad85cc901bed1",
            "284aa7164e274891a53bfba0e088c90f",
            "651283433a4641199e8bc30db0898125",
            "640fcc24e50847a686f202a42caa0802",
            "9ff55874b3334f268846e4c29cf88c79",
            "66fad3b05740400fbf004721fedb7986"
          ]
        },
        "outputId": "819e261b-5040-48bb-f5e6-2272a22cc6c9"
      },
      "execution_count": 11,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stderr",
          "text": [
            "/usr/local/lib/python3.7/dist-packages/ipykernel_launcher.py:2: UserWarning: Column names longer than 10 characters will be truncated when saved to ESRI Shapefile.\n",
            "  \n",
            "/usr/local/lib/python3.7/dist-packages/geemap/common.py:7348: UserWarning: The projection file /content/dffiltered1.prj could not be found. Assuming the dataset is in a geographic coordinate system (GCS).\n",
            "  f\"The projection file {in_prj} could not be found. Assuming the dataset is in a geographic coordinate system (GCS).\"\n"
          ]
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "Map(center=[20, 0], controls=(WidgetControl(options=['position', 'transparent_bg'], widget=HBox(children=(Togg…"
            ],
            "application/vnd.jupyter.widget-view+json": {
              "version_major": 2,
              "version_minor": 0,
              "model_id": "48dcb232784b423abca6be8c21f7cfd2"
            }
          },
          "metadata": {
            "application/vnd.jupyter.widget-view+json": {
              "colab": {
                "custom_widget_manager": {
                  "url": "https://ssl.gstatic.com/colaboratory-static/widgets/colab-cdn-widget-manager/a8874ba6619b6106/manager.min.js"
                }
              }
            }
          }
        }
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "XJoTS3vTjPww"
      },
      "source": [
        "#Do data analysis for MODIS NDVI"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": 12,
      "metadata": {
        "id": "O-cXHfliyomG"
      },
      "outputs": [],
      "source": [
        "# MODIS-specific functions\n",
        "\n",
        "# Mask out water\n",
        "def maskWater(image):\n",
        "    return image.updateMask(waterMask.select('water_mask').lt(1));\n",
        "\n",
        "def scale_factor(image):\n",
        "# scale factor for the MODIS MOD13Q1 product\n",
        "    return image.multiply(0.0001).copyProperties(image, ['system:time_start'])\n",
        "\n",
        "\n"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": 13,
      "metadata": {
        "id": "CdTcPreNkfkZ"
      },
      "outputs": [],
      "source": [
        "# MODIS water mask is probably universally good to apply to all imagery (if you want to mask water!)\n",
        "waterMask = ee.ImageCollection('MODIS/006/MOD44W').filter(ee.Filter.date('2015-01-01', '2015-01-02')).select('water_mask').first();\n",
        "\n",
        "# This dataset is a composite that chooses the best-quality pixels\n",
        "# per 16-day period, so no cloud masking is required.\n",
        "ndvi_raw = ee.ImageCollection('MODIS/006/MOD13Q1').select('NDVI')\n",
        "ndvi = ndvi_raw.map(maskWater).map(scale_factor).map(createTimeBand);\n"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": 14,
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 621,
          "referenced_widgets": [
            "48dcb232784b423abca6be8c21f7cfd2",
            "f8cf0db932a046ef82d487a6af880756",
            "c9cd7132e2684ea2bd6092262d0b7c11",
            "69a95016965544a790ceb312ef5e17c2",
            "a69ffcd4507649b98cf1726708ca0c65",
            "525f095b59c94fb295315dbbc531a407",
            "7e4021d94b5a42bbba6d909dac3ad596",
            "e08ce9e385bb4d748d33bb435c34d82e",
            "51f9f81a7803428b80ff03e7e839b768",
            "7fdbf698da20408a976e689fe55afb32",
            "d35275775a0b4afaab66b208ccb24a04",
            "219a0c1ae48c4bdc94103c6c63f11024",
            "b038488e19c6478dbcc55bbcc5c78139",
            "5a1171de330e47d995effaf1a776483a",
            "640fcc24e50847a686f202a42caa0802",
            "6837f2a6454245a98a26410829943306",
            "5f7155c98d614068a718abae9bf5f1d1",
            "0c9a740840f4401aa46332dfb989cf40",
            "e15b3247917243e2aa2ba7db05c4f1fb",
            "61d51598be9e4f16b8284b91dfe7dee5",
            "e2e75a8124f4417a8f6e579a40212688",
            "e11f590fd37045fb9855dd7bacd5f28b",
            "03c5e82ce28c49b18e5ec9298fee79ce",
            "4e7f46a158174b08b93564940b6cc0bd",
            "6f59f62a977e46cb881ad85cc901bed1",
            "284aa7164e274891a53bfba0e088c90f",
            "651283433a4641199e8bc30db0898125",
            "9ff55874b3334f268846e4c29cf88c79",
            "66fad3b05740400fbf004721fedb7986"
          ]
        },
        "id": "mXDmjBv-r74r",
        "outputId": "8482d16d-7620-4249-d92c-297013bb85d8"
      },
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "Map(bottom=754.0, center=[20, 0], controls=(WidgetControl(options=['position', 'transparent_bg'], widget=HBox(…"
            ],
            "application/vnd.jupyter.widget-view+json": {
              "version_major": 2,
              "version_minor": 0,
              "model_id": "48dcb232784b423abca6be8c21f7cfd2"
            }
          },
          "metadata": {
            "application/vnd.jupyter.widget-view+json": {
              "colab": {
                "custom_widget_manager": {
                  "url": "https://ssl.gstatic.com/colaboratory-static/widgets/colab-cdn-widget-manager/a8874ba6619b6106/manager.min.js"
                }
              }
            }
          }
        }
      ],
      "source": [
        "clip_ex = ndvi.first().clip(sheds)\n",
        "Map.addLayer(clip_ex, {}, 'NDVI')\n",
        "Map"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": 15,
      "metadata": {
        "id": "I5E8N4Orh0wX"
      },
      "outputs": [],
      "source": [
        "# Want to write something that makes it so that your chosen analysis is baked \n",
        "# into resulting column name(s) for least friction\n",
        "\n",
        "# Options are 'mean', 'median', 'min' 'max'\n",
        "analysis = 'mean'\n",
        "\n",
        "start_year=2000\n",
        "end_year=2022\n",
        "start_month=9\n",
        "end_month=9\n",
        "index_collection = ndvi\n",
        "\n",
        "# Options are 'mean_std', 'mean_min_max', and 'median'\n",
        "# I want to replace this with the \"analysis\" variable \n",
        "#reducer='mean_min_max'\n",
        "\n",
        "years = ee.List.sequence(start_year,end_year)\n",
        "\n",
        "yearwise_ndvi_test = years.map(annual_images)\n",
        "\n",
        "yearwise_ndvi = yearwise_ndvi_test"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": 16,
      "metadata": {
        "id": "vSDS0n24lI6u"
      },
      "outputs": [],
      "source": [
        "# Make an ImageCollection from the list of images you just composited,\n",
        "# since you need an ImageCollection for the linear fit reduction\n",
        "yearCompCol = ee.ImageCollection.fromImages(yearwise_ndvi)"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": 17,
      "metadata": {
        "id": "ITVBmjx3lsfn"
      },
      "outputs": [],
      "source": [
        "# Get a pixelwise linear regression across the composited ImageCollection\n",
        "# \"select\" is time and the band you are interested in\n",
        "# The output is the slope of the line fit to each pixel's data over time\n",
        "# and the timestep is \"per year\"\n",
        "trend = yearCompCol.select(['system:time_start_mean', 'NDVI_' + analysis]).reduce(ee.Reducer.linearFit())\n",
        "\n",
        "# 'system:time_start_mean' is my hacky way of doing time per scene\n",
        "# The value is \"the mean number of years since 1970 across the scene\"\n",
        "# which will just be the middle of the month(s) you chose in the year you chose\n",
        "\n",
        "# The result is two outputs: \"scale\" is the slope and \"offset\" is the intercept"
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "gDsDuNjNLd9H"
      },
      "source": [
        "You can also call [normal Matplotlib colormaps](https://matplotlib.org/stable/tutorials/colors/colormaps.html) with `get_palette()` as seen [here](https://geemap.org/colormaps/#geemap.colormaps.get_palette) and exmaple [here](https://geemap.org/notebooks/60_colormaps/)"
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "from google.colab import drive\n",
        "drive.mount('/content/drive')"
      ],
      "metadata": {
        "id": "hYB5WBdcb9JM",
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "outputId": "5dc39843-35a7-423e-e6fc-623bbcbc81dd"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Drive already mounted at /content/drive; to attempt to forcibly remount, call drive.mount(\"/content/drive\", force_remount=True).\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "execution_count": 18,
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 621,
          "referenced_widgets": [
            "48dcb232784b423abca6be8c21f7cfd2",
            "f8cf0db932a046ef82d487a6af880756",
            "c9cd7132e2684ea2bd6092262d0b7c11",
            "69a95016965544a790ceb312ef5e17c2",
            "a69ffcd4507649b98cf1726708ca0c65",
            "525f095b59c94fb295315dbbc531a407",
            "7e4021d94b5a42bbba6d909dac3ad596",
            "e08ce9e385bb4d748d33bb435c34d82e",
            "51f9f81a7803428b80ff03e7e839b768",
            "7fdbf698da20408a976e689fe55afb32",
            "d35275775a0b4afaab66b208ccb24a04",
            "219a0c1ae48c4bdc94103c6c63f11024",
            "b038488e19c6478dbcc55bbcc5c78139",
            "5a1171de330e47d995effaf1a776483a",
            "640fcc24e50847a686f202a42caa0802",
            "9ff55874b3334f268846e4c29cf88c79",
            "6837f2a6454245a98a26410829943306",
            "5f7155c98d614068a718abae9bf5f1d1",
            "0c9a740840f4401aa46332dfb989cf40",
            "e15b3247917243e2aa2ba7db05c4f1fb",
            "61d51598be9e4f16b8284b91dfe7dee5",
            "e2e75a8124f4417a8f6e579a40212688",
            "e11f590fd37045fb9855dd7bacd5f28b",
            "03c5e82ce28c49b18e5ec9298fee79ce",
            "4e7f46a158174b08b93564940b6cc0bd",
            "6f59f62a977e46cb881ad85cc901bed1",
            "284aa7164e274891a53bfba0e088c90f",
            "651283433a4641199e8bc30db0898125",
            "66fad3b05740400fbf004721fedb7986"
          ]
        },
        "id": "g5XbE_htqTUI",
        "outputId": "3bc7ea45-d548-433f-9192-ec9f68b8aa4c"
      },
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "Map(bottom=754.0, center=[20, 0], controls=(WidgetControl(options=['position', 'transparent_bg'], widget=HBox(…"
            ],
            "application/vnd.jupyter.widget-view+json": {
              "version_major": 2,
              "version_minor": 0,
              "model_id": "48dcb232784b423abca6be8c21f7cfd2"
            }
          },
          "metadata": {
            "application/vnd.jupyter.widget-view+json": {
              "colab": {
                "custom_widget_manager": {
                  "url": "https://ssl.gstatic.com/colaboratory-static/widgets/colab-cdn-widget-manager/a8874ba6619b6106/manager.min.js"
                }
              }
            }
          }
        }
      ],
      "source": [
        "import geemap.colormaps as cm\n",
        "palette = cm.palettes.summer\n",
        "\n",
        "trend_clip = trend.clip(sheds)\n",
        "Map.addLayer(trend_clip.select('scale'), {'min': -0.001, 'max':0.005, 'palette': palette}, 'NDVI trend')\n",
        "Map"
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "#Df4_merged"
      ],
      "metadata": {
        "id": "3z4ubqbiSz7_"
      }
    },
    {
      "cell_type": "code",
      "execution_count": 19,
      "metadata": {
        "id": "2qRDBlEIlulw"
      },
      "outputs": [],
      "source": [
        "# Get the mean pixelwise trend for each watershed\n",
        "basinData = trend.reduceRegions(collection=sheds,reducer=ee.Reducer.mean(), scale=250)"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": 20,
      "metadata": {
        "id": "gn5Jv7-Clz_U"
      },
      "outputs": [],
      "source": [
        "# Turn it into a pandas dataframe\n",
        "# Rename columns so you know what you did \n",
        "# Yes this can be to_geopandas\n",
        "# Yes this can take a little while\n",
        "output = geemap.ee_to_pandas(basinData).rename(columns={\"scale\": analysis+'_trend_slope', \"offset\": analysis+\"_trend_intercept\"})"
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "from google.colab import drive\n",
        "\n",
        "drive.mount('/content/drive')\n",
        "path = '/content/drive/Shared drives/WISP Files/ndvimodis.csv'\n",
        "\n",
        "with open(path, 'w', encoding = 'utf-8-sig') as f:\n",
        "  output.to_csv(f)"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "wl94QKZTG_wc",
        "outputId": "7825ebd7-8e12-4732-fff1-610f416484d7"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Drive already mounted at /content/drive; to attempt to forcibly remount, call drive.mount(\"/content/drive\", force_remount=True).\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "execution_count": 21,
      "metadata": {
        "id": "rIlhjQiFgy8c",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 696
        },
        "outputId": "4256d989-a8ef-4f38-9fb0-22afc81fe2fb"
      },
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "     stationIDs_x PPT_x  trend_all_x trend_dates  discharge_x  \\\n",
              "0            1001     C         0.10         NaN          NaN   \n",
              "1            1095     C        -0.03        0.09         7.18   \n",
              "2            1151     C         0.01        0.14        15.65   \n",
              "3            1176     C         0.04         0.1        22.16   \n",
              "4            1397     C         0.09         NaN          NaN   \n",
              "..            ...   ...          ...         ...          ...   \n",
              "134         71193     N         0.01         NaN          NaN   \n",
              "135         71199     N        -0.03         NaN          NaN   \n",
              "136         71222     N        -0.01       ?0.03        17.40   \n",
              "137         71241     N        -0.02        0.08        12.59   \n",
              "138         71258     N         0.03         NaN          NaN   \n",
              "\n",
              "     mean_trend_slope  mean_trend_intercept  Latitude_x  No permafr  \\\n",
              "0            0.001253              0.215335       62.12         0.0   \n",
              "1            0.002064              0.147826       61.90         0.0   \n",
              "2           -0.000863              0.339840       61.13         0.0   \n",
              "3           -0.000642              0.274947       62.10         0.0   \n",
              "4            0.001758              0.143094       68.10         0.0   \n",
              "..                ...                   ...         ...         ...   \n",
              "134          0.002345              0.400448       67.53        87.5   \n",
              "135               NaN                   NaN         NaN         NaN   \n",
              "136               NaN                   NaN         NaN         NaN   \n",
              "137         -0.000169              0.565107       67.56       100.0   \n",
              "138          0.004851              0.297015       67.96        98.1   \n",
              "\n",
              "     Station el  ...     Primary _1  stationIDs_y        da_km2  Continuo_1  \\\n",
              "0         478.2  ...     Continuous        1001.0  42554.279935       100.0   \n",
              "1         617.1  ...     Continuous        1095.0  10816.833219       100.0   \n",
              "2         556.5  ...     Continuous        1151.0   3947.644573       100.0   \n",
              "3         334.0  ...     Continuous        1176.0  13489.216398       100.0   \n",
              "4           3.0  ...     Continuous        1397.0  30159.400372       100.0   \n",
              "..          ...  ...            ...           ...           ...         ...   \n",
              "134       148.5  ...  No permafrost       71193.0   2235.008393         0.0   \n",
              "135         NaN  ...            NaN           NaN           NaN         NaN   \n",
              "136         NaN  ...            NaN           NaN           NaN         NaN   \n",
              "137       151.3  ...  No permafrost       71241.0   1627.085752         0.0   \n",
              "138       128.0  ...  No permafrost       71258.0   1809.503905         0.0   \n",
              "\n",
              "    Longitud_1 Sporadic_1     Prior pr_1             Basin_y  \\\n",
              "0       148.47        0.0                      Anadyr Kolyma   \n",
              "1       147.42        0.0     Continuous       Anadyr Kolyma   \n",
              "2       149.67        0.0     Continuous       Anadyr Kolyma   \n",
              "3       150.67        0.0     Continuous       Anadyr Kolyma   \n",
              "4       164.17        0.0     Continuous       Anadyr Kolyma   \n",
              "..         ...        ...            ...                 ...   \n",
              "134      34.28       12.5  No permafrost  N. European Russia   \n",
              "135        NaN        NaN            NaN                 NaN   \n",
              "136        NaN        NaN            NaN                 NaN   \n",
              "137      31.01        0.0  No permafrost  N. European Russia   \n",
              "138      32.86        0.0  No permafrost  N. European Russia   \n",
              "\n",
              "                Basin_x  trend_all_y  \n",
              "0         Anadyr Kolyma         0.10  \n",
              "1         Anadyr Kolyma        -0.03  \n",
              "2         Anadyr Kolyma         0.01  \n",
              "3         Anadyr Kolyma         0.04  \n",
              "4         Anadyr Kolyma         0.09  \n",
              "..                  ...          ...  \n",
              "134  N. European Russia         0.01  \n",
              "135                 NaN          NaN  \n",
              "136                 NaN          NaN  \n",
              "137  N. European Russia        -0.02  \n",
              "138  N. European Russia         0.03  \n",
              "\n",
              "[139 rows x 46 columns]"
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-36abba7a-f72d-4d0a-8514-ba069dbcd57a\">\n",
              "    <div class=\"colab-df-container\">\n",
              "      <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>stationIDs_x</th>\n",
              "      <th>PPT_x</th>\n",
              "      <th>trend_all_x</th>\n",
              "      <th>trend_dates</th>\n",
              "      <th>discharge_x</th>\n",
              "      <th>mean_trend_slope</th>\n",
              "      <th>mean_trend_intercept</th>\n",
              "      <th>Latitude_x</th>\n",
              "      <th>No permafr</th>\n",
              "      <th>Station el</th>\n",
              "      <th>...</th>\n",
              "      <th>Primary _1</th>\n",
              "      <th>stationIDs_y</th>\n",
              "      <th>da_km2</th>\n",
              "      <th>Continuo_1</th>\n",
              "      <th>Longitud_1</th>\n",
              "      <th>Sporadic_1</th>\n",
              "      <th>Prior pr_1</th>\n",
              "      <th>Basin_y</th>\n",
              "      <th>Basin_x</th>\n",
              "      <th>trend_all_y</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>1001</td>\n",
              "      <td>C</td>\n",
              "      <td>0.10</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>0.001253</td>\n",
              "      <td>0.215335</td>\n",
              "      <td>62.12</td>\n",
              "      <td>0.0</td>\n",
              "      <td>478.2</td>\n",
              "      <td>...</td>\n",
              "      <td>Continuous</td>\n",
              "      <td>1001.0</td>\n",
              "      <td>42554.279935</td>\n",
              "      <td>100.0</td>\n",
              "      <td>148.47</td>\n",
              "      <td>0.0</td>\n",
              "      <td></td>\n",
              "      <td>Anadyr Kolyma</td>\n",
              "      <td>Anadyr Kolyma</td>\n",
              "      <td>0.10</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>1095</td>\n",
              "      <td>C</td>\n",
              "      <td>-0.03</td>\n",
              "      <td>0.09</td>\n",
              "      <td>7.18</td>\n",
              "      <td>0.002064</td>\n",
              "      <td>0.147826</td>\n",
              "      <td>61.90</td>\n",
              "      <td>0.0</td>\n",
              "      <td>617.1</td>\n",
              "      <td>...</td>\n",
              "      <td>Continuous</td>\n",
              "      <td>1095.0</td>\n",
              "      <td>10816.833219</td>\n",
              "      <td>100.0</td>\n",
              "      <td>147.42</td>\n",
              "      <td>0.0</td>\n",
              "      <td>Continuous</td>\n",
              "      <td>Anadyr Kolyma</td>\n",
              "      <td>Anadyr Kolyma</td>\n",
              "      <td>-0.03</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>1151</td>\n",
              "      <td>C</td>\n",
              "      <td>0.01</td>\n",
              "      <td>0.14</td>\n",
              "      <td>15.65</td>\n",
              "      <td>-0.000863</td>\n",
              "      <td>0.339840</td>\n",
              "      <td>61.13</td>\n",
              "      <td>0.0</td>\n",
              "      <td>556.5</td>\n",
              "      <td>...</td>\n",
              "      <td>Continuous</td>\n",
              "      <td>1151.0</td>\n",
              "      <td>3947.644573</td>\n",
              "      <td>100.0</td>\n",
              "      <td>149.67</td>\n",
              "      <td>0.0</td>\n",
              "      <td>Continuous</td>\n",
              "      <td>Anadyr Kolyma</td>\n",
              "      <td>Anadyr Kolyma</td>\n",
              "      <td>0.01</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>1176</td>\n",
              "      <td>C</td>\n",
              "      <td>0.04</td>\n",
              "      <td>0.1</td>\n",
              "      <td>22.16</td>\n",
              "      <td>-0.000642</td>\n",
              "      <td>0.274947</td>\n",
              "      <td>62.10</td>\n",
              "      <td>0.0</td>\n",
              "      <td>334.0</td>\n",
              "      <td>...</td>\n",
              "      <td>Continuous</td>\n",
              "      <td>1176.0</td>\n",
              "      <td>13489.216398</td>\n",
              "      <td>100.0</td>\n",
              "      <td>150.67</td>\n",
              "      <td>0.0</td>\n",
              "      <td>Continuous</td>\n",
              "      <td>Anadyr Kolyma</td>\n",
              "      <td>Anadyr Kolyma</td>\n",
              "      <td>0.04</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>1397</td>\n",
              "      <td>C</td>\n",
              "      <td>0.09</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>0.001758</td>\n",
              "      <td>0.143094</td>\n",
              "      <td>68.10</td>\n",
              "      <td>0.0</td>\n",
              "      <td>3.0</td>\n",
              "      <td>...</td>\n",
              "      <td>Continuous</td>\n",
              "      <td>1397.0</td>\n",
              "      <td>30159.400372</td>\n",
              "      <td>100.0</td>\n",
              "      <td>164.17</td>\n",
              "      <td>0.0</td>\n",
              "      <td>Continuous</td>\n",
              "      <td>Anadyr Kolyma</td>\n",
              "      <td>Anadyr Kolyma</td>\n",
              "      <td>0.09</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>...</th>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>134</th>\n",
              "      <td>71193</td>\n",
              "      <td>N</td>\n",
              "      <td>0.01</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>0.002345</td>\n",
              "      <td>0.400448</td>\n",
              "      <td>67.53</td>\n",
              "      <td>87.5</td>\n",
              "      <td>148.5</td>\n",
              "      <td>...</td>\n",
              "      <td>No permafrost</td>\n",
              "      <td>71193.0</td>\n",
              "      <td>2235.008393</td>\n",
              "      <td>0.0</td>\n",
              "      <td>34.28</td>\n",
              "      <td>12.5</td>\n",
              "      <td>No permafrost</td>\n",
              "      <td>N. European Russia</td>\n",
              "      <td>N. European Russia</td>\n",
              "      <td>0.01</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>135</th>\n",
              "      <td>71199</td>\n",
              "      <td>N</td>\n",
              "      <td>-0.03</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>...</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>136</th>\n",
              "      <td>71222</td>\n",
              "      <td>N</td>\n",
              "      <td>-0.01</td>\n",
              "      <td>?0.03</td>\n",
              "      <td>17.40</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>...</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>137</th>\n",
              "      <td>71241</td>\n",
              "      <td>N</td>\n",
              "      <td>-0.02</td>\n",
              "      <td>0.08</td>\n",
              "      <td>12.59</td>\n",
              "      <td>-0.000169</td>\n",
              "      <td>0.565107</td>\n",
              "      <td>67.56</td>\n",
              "      <td>100.0</td>\n",
              "      <td>151.3</td>\n",
              "      <td>...</td>\n",
              "      <td>No permafrost</td>\n",
              "      <td>71241.0</td>\n",
              "      <td>1627.085752</td>\n",
              "      <td>0.0</td>\n",
              "      <td>31.01</td>\n",
              "      <td>0.0</td>\n",
              "      <td>No permafrost</td>\n",
              "      <td>N. European Russia</td>\n",
              "      <td>N. European Russia</td>\n",
              "      <td>-0.02</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>138</th>\n",
              "      <td>71258</td>\n",
              "      <td>N</td>\n",
              "      <td>0.03</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>0.004851</td>\n",
              "      <td>0.297015</td>\n",
              "      <td>67.96</td>\n",
              "      <td>98.1</td>\n",
              "      <td>128.0</td>\n",
              "      <td>...</td>\n",
              "      <td>No permafrost</td>\n",
              "      <td>71258.0</td>\n",
              "      <td>1809.503905</td>\n",
              "      <td>0.0</td>\n",
              "      <td>32.86</td>\n",
              "      <td>0.0</td>\n",
              "      <td>No permafrost</td>\n",
              "      <td>N. European Russia</td>\n",
              "      <td>N. European Russia</td>\n",
              "      <td>0.03</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "<p>139 rows × 46 columns</p>\n",
              "</div>\n",
              "      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-36abba7a-f72d-4d0a-8514-ba069dbcd57a')\"\n",
              "              title=\"Convert this dataframe to an interactive table.\"\n",
              "              style=\"display:none;\">\n",
              "        \n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "       width=\"24px\">\n",
              "    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n",
              "    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n",
              "  </svg>\n",
              "      </button>\n",
              "      \n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      flex-wrap:wrap;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "      <script>\n",
              "        const buttonEl =\n",
              "          document.querySelector('#df-36abba7a-f72d-4d0a-8514-ba069dbcd57a button.colab-df-convert');\n",
              "        buttonEl.style.display =\n",
              "          google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "        async function convertToInteractive(key) {\n",
              "          const element = document.querySelector('#df-36abba7a-f72d-4d0a-8514-ba069dbcd57a');\n",
              "          const dataTable =\n",
              "            await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                     [key], {});\n",
              "          if (!dataTable) return;\n",
              "\n",
              "          const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "            + ' to learn more about interactive tables.';\n",
              "          element.innerHTML = '';\n",
              "          dataTable['output_type'] = 'display_data';\n",
              "          await google.colab.output.renderOutput(dataTable, element);\n",
              "          const docLink = document.createElement('div');\n",
              "          docLink.innerHTML = docLinkHtml;\n",
              "          element.appendChild(docLink);\n",
              "        }\n",
              "      </script>\n",
              "    </div>\n",
              "  </div>\n",
              "  "
            ]
          },
          "metadata": {},
          "execution_count": 21
        }
      ],
      "source": [
        "df4_merged=results2.merge(output,left_on='stationIDs',right_on='Station ID', how='left')\n",
        "df4_merged"
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "from google.colab import drive\n",
        "\n",
        "drive.mount('/content/drive')\n",
        "path = '/content/drive/Shared drives/WISP Files/df4_merged.csv'\n",
        "\n",
        "with open(path, 'w', encoding = 'utf-8-sig') as f:\n",
        "  df4_merged.to_csv(f)"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "k590-K4GHQwT",
        "outputId": "f74ec0af-f65f-4cc4-d318-2a1a64589b23"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Drive already mounted at /content/drive; to attempt to forcibly remount, call drive.mount(\"/content/drive\", force_remount=True).\n"
          ]
        }
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "#Plots"
      ],
      "metadata": {
        "id": "g51sD8lJSsHJ"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "df4_merged['qaratio']=df4_merged['discharge_x'].astype(float)/df4_merged['Catchment']"
      ],
      "metadata": {
        "id": "2FVhyNG09w6K"
      },
      "execution_count": 22,
      "outputs": []
    },
    {
      "cell_type": "code",
      "execution_count": 23,
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 371
        },
        "id": "YJ25ZzpPmonV",
        "outputId": "58be6acb-21de-42b4-b21e-cc1bbb0c9dae"
      },
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "Text(0.5, 1.0, 'Effect of Latitude on Permafrost Discharge and Catchment Area')"
            ]
          },
          "metadata": {},
          "execution_count": 23
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 648x360 with 1 Axes>"
            ],
            "image/png": "\n"
          },
          "metadata": {
            "needs_background": "light"
          }
        }
      ],
      "source": [
        "color_dict={'Continuous':'r','Sporadic':'b','Discontinuousâ?':'m','Discontinuous':'m','No permafrost':'g','Isolated':'c'}\n",
        "grouped = df4_merged.groupby('Primary pe')\n",
        "fig, ax = plt.subplots(figsize=(9,5))\n",
        "for key, group in grouped:\n",
        "    group.plot(ax=ax, kind='scatter', x='qaratio', y='Latitude_x', label=key, color=color_dict[key])\n",
        "ax.set_xscale(\"log\")\n",
        "plt.xlabel(\"Ratio of Permafrost Discharge to Catchment Area\")\n",
        "plt.ylabel(\"Latitude of Watershed\")\n",
        "plt.title(\"Effect of Latitude on Permafrost Discharge and Catchment Area\")"
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "geometry = [Point(xy) for xy in zip(df4_merged.Longitud_1, df4_merged.Latitude_x)]\n",
        "df4_merged_drop = df4_merged.drop(['Longitud_1', 'Latitude_x'], axis=1)\n",
        "stations = GeoDataFrame(df4_merged_drop, crs=\"EPSG:4326\", geometry=geometry)\n",
        "fig, ax = plt.subplots(figsize=(9,5))\n",
        "world = gpd.read_file(gpd.datasets.get_path('naturalearth_lowres'))\n",
        "world.plot(ax=ax)\n",
        "stations.plot(column=\"trend_all_x\", legend=True,vmin=-.1,vmax=.1,cmap='cool',edgecolor='black',linewidth=.5, ax=ax)\n",
        "\n",
        "xlim = ([stations.total_bounds[0]-10,  stations.total_bounds[2]+10])\n",
        "ylim = ([stations.total_bounds[1]-10,  stations.total_bounds[3]+10])\n",
        "\n",
        "ax.set_xlim(xlim)\n",
        "ax.set_ylim(ylim)\n",
        "plt.xlabel(\"Longitude\")\n",
        "plt.ylabel(\"Latitude\")\n",
        "plt.title(\"Plotting Recession Trends at Various Stations\")"
      ],
      "metadata": {
        "id": "G7wPL41B8vm-",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 331
        },
        "outputId": "0dc0f54f-91b6-43ed-9982-755227c3f3f0"
      },
      "execution_count": 26,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "Text(0.5, 1.0, 'Plotting Recession Trends at Various Stations')"
            ]
          },
          "metadata": {},
          "execution_count": 26
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 648x360 with 2 Axes>"
            ],
            "image/png": "\n"
          },
          "metadata": {
            "needs_background": "light"
          }
        }
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "oG8qKQwb16Vu"
      },
      "source": [
        "#NDWI Index\n"
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "def NDWI_func(i):\n",
        "  index = i.normalizedDifference(['SR_B2', 'SR_B4']).rename('NDWI')\n",
        "  return i.addBands(index)\n",
        "landsat5 = ee.ImageCollection(\"LANDSAT/LT05/C02/T1_L2\")\n",
        "NDWI = landsat5.map(NDWI_func)"
      ],
      "metadata": {
        "id": "P0KZT7p5S0n8"
      },
      "execution_count": 28,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "analysis = 'mean'\n",
        "\n",
        "start_year=1984\n",
        "end_year=2011\n",
        "start_month=9\n",
        "end_month=9\n",
        "index_collection = NDWI\n",
        "\n",
        "\n",
        "years = ee.List.sequence(start_year,end_year)\n",
        "\n",
        "yearwise_ndwi = years.map(annual_images)\n",
        "\n",
        "yearCompCol = ee.ImageCollection.fromImages(yearwise_ndwi)\n",
        "\n",
        "ndwitrend = yearCompCol.select(['system:time_start_mean', 'NDWI_' + analysis]).reduce(ee.Reducer.linearFit())"
      ],
      "metadata": {
        "id": "w0oFw5XYTheh"
      },
      "execution_count": 29,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "NDWIData = ndwitrend.reduceRegions(collection=sheds,reducer=ee.Reducer.mean(), scale=250)\n",
        "dfNDWI = geemap.ee_to_pandas(NDWIData).rename(columns={\"scale\": analysis+'_trend_slope', \"offset\": analysis+\"_trend_intercept\"})"
      ],
      "metadata": {
        "id": "Pg2-525xThkg"
      },
      "execution_count": 30,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "from google.colab import drive\n",
        "\n",
        "drive.mount('/content/drive')\n",
        "path = '/content/drive/Shared drives/WISP Files/landsatndwi.csv'\n",
        "\n",
        "with open(path, 'w', encoding = 'utf-8-sig') as f:\n",
        "  dfNDWI.to_csv(f)"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "8TFMkiaSWehu",
        "outputId": "d7828a65-bfdc-444e-c159-209ecee21506"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Drive already mounted at /content/drive; to attempt to forcibly remount, call drive.mount(\"/content/drive\", force_remount=True).\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "Map1 = geemap.Map()\n",
        "import geemap.colormaps as cm\n",
        "palette = cm.palettes.cool\n",
        "\n",
        "trend_clip = trend.clip(sheds)\n",
        "\n",
        "vis_params = {\n",
        "    'min': -0.01,\n",
        "    'max': 0.01,\n",
        "    'palette': palette,\n",
        "}\n",
        "\n",
        "Map1.addLayer(trend_clip.select('scale'), vis_params, 'NDWI')\n",
        "\n",
        "colors = vis_params['palette']\n",
        "vmin = vis_params['min']\n",
        "vmax = vis_params['max']\n",
        "\n",
        "Map1.add_colorbar(vis_params, label='NDWI trend (value/year)')\n",
        "\n",
        "Map1.addLayerControl()\n",
        "Map1"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 621,
          "referenced_widgets": [
            "38e279f7840f4a4a9c89687148c427e8",
            "df9364adb79145278e582e5caaf3c145",
            "1c079f1ec4384ce1bd365f7881f67d33",
            "f18e46354fba40f181d31c369c782078",
            "df42b090529943a7800b31693f5fb84c",
            "e57f2140426b44c7b311cb0bc259ad4b",
            "4b409f985b2d4f8fb7cde92de820e959",
            "624fca625f4543f284eeb5c6002261f2",
            "727a368975064f45bb6ec50e462f557a",
            "09cb085b3ae94f86a384171cd380071e",
            "032990a30fff4d7586397da764e332c8",
            "b3a494618a114723894a88f5c04504a0",
            "4a3c86bc90844a078f33069322c7f990",
            "81f268b52d2845f3b73daabe7eada91d",
            "b038488e19c6478dbcc55bbcc5c78139",
            "1c74e674aac04f15bd0c9433dd8440fc",
            "025b054d343c467b92e4ed27e8b1db40",
            "82c59711284c47fcbae7d3ffb9c6d26a",
            "b9a5d104670d42fea3e44f414d40526d",
            "78e8acd282ec4138bb4d3dbfdb2a15be",
            "a4ac2c5344a74379ade0cc8038959c85",
            "f7b3b77e23d54567b0c71a54866be475",
            "946f078617884a139cc36ea92248a498",
            "bd9c855abf864cce984a452e5cef9fdc",
            "bb356518a16e4a35a0af32e55677bfb7",
            "ca05c45b373343df83a91310742ee151",
            "e37b057cf059413ba3f328dd8eec43bd",
            "f34a43befc8f43f79a1946cb75b4ca9f",
            "5e73314357d44e20a146627363017999",
            "7c5f0936b4b14509b5a81a17f27eea9c"
          ]
        },
        "id": "88m_cBW-hIxI",
        "outputId": "14ba1bb8-58df-4d75-cd88-efe03a20aa72"
      },
      "execution_count": 32,
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "Map(center=[20, 0], controls=(WidgetControl(options=['position', 'transparent_bg'], widget=HBox(children=(Togg…"
            ],
            "application/vnd.jupyter.widget-view+json": {
              "version_major": 2,
              "version_minor": 0,
              "model_id": "38e279f7840f4a4a9c89687148c427e8"
            }
          },
          "metadata": {
            "application/vnd.jupyter.widget-view+json": {
              "colab": {
                "custom_widget_manager": {
                  "url": "https://ssl.gstatic.com/colaboratory-static/widgets/colab-cdn-widget-manager/a8874ba6619b6106/manager.min.js"
                }
              }
            }
          }
        }
      ]
    },
    {
      "cell_type": "code",
      "execution_count": 33,
      "metadata": {
        "id": "sLJNf9eHMOoR"
      },
      "outputs": [],
      "source": [
        "# Make sure to adjust the scale - Landsat is 30m, MODIS is 250 m. \n",
        "basinData = trend.reduceRegions(collection=sheds,reducer=ee.Reducer.mean(), scale=250)\n",
        "\n",
        "output = geemap.ee_to_pandas(basinData).rename(columns={\"scale\": \"NWDI_\"+analysis+'_trend_slope', \"offset\": \"NWDI_\"+analysis+\"_trend_intercept\"})"
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "#NBR Index"
      ],
      "metadata": {
        "id": "nWI3L3ya7DFV"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "def NBR_func(i):\n",
        "  index = i.normalizedDifference(['SR_B4', 'SR_B7']).rename('NBR')\n",
        "  return i.addBands(index)\n",
        "landsat5 = ee.ImageCollection(\"LANDSAT/LT05/C02/T1_L2\")\n",
        "NBR = landsat5.map(NBR_func)"
      ],
      "metadata": {
        "id": "rx7jFJv06xxz"
      },
      "execution_count": 34,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "analysis = 'mean'\n",
        "\n",
        "start_year=1984\n",
        "end_year=2011\n",
        "start_month=9\n",
        "end_month=9\n",
        "index_collection = NBR\n",
        "\n",
        "\n",
        "years = ee.List.sequence(start_year,end_year)\n",
        "\n",
        "yearwise_nbr = years.map(annual_images)\n",
        "\n",
        "yearCompCol = ee.ImageCollection.fromImages(yearwise_nbr)\n",
        "\n",
        "nbrtrend = yearCompCol.select(['system:time_start_mean', 'NBR_' + analysis]).reduce(ee.Reducer.linearFit())\n"
      ],
      "metadata": {
        "id": "sP-eE7k2EBEK"
      },
      "execution_count": 35,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "NBRData = nbrtrend.reduceRegions(collection=sheds,reducer=ee.Reducer.mean(), scale=250)\n",
        "dfNBR = geemap.ee_to_pandas(NBRData).rename(columns={\"scale\": analysis+'_trend_slope', \"offset\": analysis+\"_trend_intercept\"})"
      ],
      "metadata": {
        "id": "c9SywBGB7M0d"
      },
      "execution_count": 36,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "from google.colab import drive\n",
        "\n",
        "drive.mount('/content/drive')\n",
        "path = '/content/drive/Shared drives/WISP Files/landsatnbr.csv'\n",
        "\n",
        "with open(path, 'w', encoding = 'utf-8-sig') as f:\n",
        "  dfNBR.to_csv(f)"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "aBHjcnugRzUl",
        "outputId": "488c7e38-ff9e-45e7-8772-05abe93d4563"
      },
      "execution_count": 43,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Mounted at /content/drive\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "Map2 = geemap.Map()\n",
        "import geemap.colormaps as cm\n",
        "palette = cm.palettes.spring\n",
        "\n",
        "trend_clip = trend.clip(sheds)\n",
        "\n",
        "vis_params = {\n",
        "    'min': -0.01,\n",
        "    'max': 0.01,\n",
        "    'palette': palette,\n",
        "}\n",
        "\n",
        "Map2.addLayer(trend_clip.select('scale'), vis_params, 'NBR')\n",
        "\n",
        "colors = vis_params['palette']\n",
        "vmin = vis_params['min']\n",
        "vmax = vis_params['max']\n",
        "\n",
        "Map2.add_colorbar(vis_params, label='NBR trend (value/year)')\n",
        "\n",
        "Map2.addLayerControl()\n",
        "Map2"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 621,
          "referenced_widgets": [
            "1a3adc7ccad6447f8fb816ee5106e6b4",
            "5b31790dcb514e15a1128796ef835d57",
            "3ab9f1db96974b4dac8f4dc0562ed5ce",
            "5920546670ef4d19a6bd39779669826c",
            "2eb420c7bdad43779aa7046635d02eed",
            "76fe005c690d432081784273b2921c3c",
            "892cdf9efe974091b785253bd46d714e",
            "a330857a40224474a5a07efe809dcdc9",
            "136a88bf787f423db12575fb6aa775b6",
            "b13ce4c3442245b1b0cc73dd07052848",
            "d8896b2d19054d8ea3d79fc9e31bd1a7",
            "8ce84a9116e14ab48af2e43e94e1bb6d",
            "2145d96eecb74998af0be51baf138222",
            "1c741c53e3564381b91341067d6fad66",
            "b038488e19c6478dbcc55bbcc5c78139",
            "08391c19f7dd4e9c8438c11fe087bf61",
            "f1e148da0d9548c988749f982242c14c",
            "86b3976f7cc3407885ad685b08f8a537",
            "da7ecef549ea45ad9a69444d9ffd1817",
            "00d6feb27683497f8936bfdf55bae6d6",
            "6abac71f149d4f508e123501340172b9",
            "a2ae468ae4d2480f80067f878d107b22",
            "1b33ea42a82e45d8b0b432f3c9050ddd",
            "7e87bd9d5f42468f8fe24d574115478e",
            "dc8b0877d76940e9862872d6346812d4",
            "d05c9d14846348c7a8116ca12deb31c5",
            "7c58f40bc16e45aaaea7d5c5e45c679d",
            "2c9a4bb72ac4489eb01fea9bbe153fae",
            "25552fc09e2e437ebd432f5956f777d4",
            "acbaa504713c4564b60bf1540f81f4aa"
          ]
        },
        "id": "dVY7v7ZqVB9L",
        "outputId": "2879cfd1-5ed8-4e33-a3eb-6804abc78520"
      },
      "execution_count": 37,
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "Map(center=[20, 0], controls=(WidgetControl(options=['position', 'transparent_bg'], widget=HBox(children=(Togg…"
            ],
            "application/vnd.jupyter.widget-view+json": {
              "version_major": 2,
              "version_minor": 0,
              "model_id": "1a3adc7ccad6447f8fb816ee5106e6b4"
            }
          },
          "metadata": {
            "application/vnd.jupyter.widget-view+json": {
              "colab": {
                "custom_widget_manager": {
                  "url": "https://ssl.gstatic.com/colaboratory-static/widgets/colab-cdn-widget-manager/a8874ba6619b6106/manager.min.js"
                }
              }
            }
          }
        }
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "#NDMI Index"
      ],
      "metadata": {
        "id": "EfI8dfxW-lvC"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "def NDMI_func(i):\n",
        "  index = i.normalizedDifference(['SR_B4', 'SR_B5']).rename('NDMI')\n",
        "  return i.addBands(index)\n",
        "NDMI = landsat5.map(NDMI_func)"
      ],
      "metadata": {
        "id": "elgY9X-4Fd6S"
      },
      "execution_count": 38,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "analysis = 'mean'\n",
        "\n",
        "start_year=1984\n",
        "end_year=2011\n",
        "start_month=9\n",
        "end_month=9\n",
        "index_collection = NDMI\n",
        "\n",
        "\n",
        "years = ee.List.sequence(start_year,end_year)\n",
        "\n",
        "yearwise_ndmi = years.map(annual_images)\n",
        "\n",
        "yearCompCol = ee.ImageCollection.fromImages(yearwise_ndmi)\n",
        "\n",
        "ndmitrend = yearCompCol.select(['system:time_start_mean', 'NDMI_' + analysis]).reduce(ee.Reducer.linearFit())\n"
      ],
      "metadata": {
        "id": "rQfFEIV2GHAT"
      },
      "execution_count": 39,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "NDMIData = ndmitrend.reduceRegions(collection=sheds,reducer=ee.Reducer.mean(), scale=250)\n",
        "dfNDMI = geemap.ee_to_pandas(NDMIData).rename(columns={\"scale\": analysis+'_trend_slope', \"offset\": analysis+\"_trend_intercept\"})"
      ],
      "metadata": {
        "id": "Feb593im-hZb"
      },
      "execution_count": 40,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "from google.colab import drive\n",
        "\n",
        "drive.mount('/content/drive')\n",
        "path = '/content/drive/Shared drives/WISP Files/landsatndmi.csv'\n",
        "\n",
        "with open(path, 'w', encoding = 'utf-8-sig') as f:\n",
        "  dfNDMI.to_csv(f)"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "g2GZyU_EMB8d",
        "outputId": "9a5a5b6e-ed64-4e49-e541-5983b20464ae"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Drive already mounted at /content/drive; to attempt to forcibly remount, call drive.mount(\"/content/drive\", force_remount=True).\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "Map3 = geemap.Map()\n",
        "import geemap.colormaps as cm\n",
        "palette = cm.palettes.winter\n",
        "\n",
        "trend_clip = trend.clip(sheds)\n",
        "\n",
        "vis_params = {\n",
        "    'min': -0.01,\n",
        "    'max': 0.01,\n",
        "    'palette': palette,\n",
        "}\n",
        "\n",
        "Map3.addLayer(trend_clip.select('scale'), vis_params, 'NDMI')\n",
        "\n",
        "colors = vis_params['palette']\n",
        "vmin = vis_params['min']\n",
        "vmax = vis_params['max']\n",
        "\n",
        "Map3.add_colorbar(vis_params, label='NDMI trend (value/year)')\n",
        "\n",
        "Map3.addLayerControl()\n",
        "Map3"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 621,
          "referenced_widgets": [
            "e6d667e574ab4414914868e6ea132217",
            "66dc14da82434e83b0f609b3cf5221ea",
            "86d800192d3b48fc8122e5047c0dd977",
            "94a41859cf444b109069f66e94f55cec",
            "b0f2a16cd9564a23b50e05bdafdf1b88",
            "23a7ad02f5de49bc82c3e8a1b20d99e5",
            "35af344e70cf47bda70a4ca62d976693",
            "1eebec2d5a384b9cb83e0e6b4d33526c",
            "fb3b15a863074b64bf47a57a588cdd89",
            "05783fdea9e1465ab66465c534aff7fe",
            "6e97c2381e1240e187391a96959ae748",
            "32a7f636fe01490bb0d42fd70d25a170",
            "bcdec957c4204a74a7d39b2309a0fc37",
            "6a0845c96a8f490e897c601c2e989f8f",
            "b038488e19c6478dbcc55bbcc5c78139",
            "c9698e70d3714d978dcdd9bfd826bfaa",
            "a81c733bb3ed4781ac7319042edad82d",
            "cf380d35e0d540629e7d1f8f6e3834bb",
            "4d1fbcc2d8634f00bb5a5e4dd375f593",
            "b4827147cde14d7ea8d34bf2fb1bd4c3",
            "fdafd723d3c94a129dd31185c4820b17",
            "ac4985aec3894b28874fd467967ba2bc",
            "268136591a7d4fbd97c0e4dc9764424a",
            "0b2d1c08023740239cfa65f26fe5baeb",
            "763a3f41fcc948c29c1177950b0f6255",
            "7aa47ce1aa494544ad8867eeba5162b5",
            "3e1235830038476c819850656b8d5062",
            "b3ebc800e4e24d23b7c140401edcd666",
            "8c8c9b1957864507b09beb4ccdeea7aa",
            "2b5407c0ceb942ed8d98fb2ac468040d"
          ]
        },
        "id": "rIY1zoLFZrY9",
        "outputId": "1a48c8fd-8c25-43a5-ea83-c3665a504c0e"
      },
      "execution_count": 42,
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "Map(center=[20, 0], controls=(WidgetControl(options=['position', 'transparent_bg'], widget=HBox(children=(Togg…"
            ],
            "application/vnd.jupyter.widget-view+json": {
              "version_major": 2,
              "version_minor": 0,
              "model_id": "e6d667e574ab4414914868e6ea132217"
            }
          },
          "metadata": {
            "application/vnd.jupyter.widget-view+json": {
              "colab": {
                "custom_widget_manager": {
                  "url": "https://ssl.gstatic.com/colaboratory-static/widgets/colab-cdn-widget-manager/a8874ba6619b6106/manager.min.js"
                }
              }
            }
          }
        }
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "#NDVI Index\n"
      ],
      "metadata": {
        "id": "6OjSdzkyNQYQ"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "def NDVI_func(i):\n",
        "  index = i.normalizedDifference(['SR_B4', 'SR_B3']).rename('NDVI')\n",
        "  return i.addBands(index)\n",
        "NDVI = landsat5.map(NDVI_func)"
      ],
      "metadata": {
        "id": "IhVqHK5GNPfx"
      },
      "execution_count": 44,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "analysis = 'mean'\n",
        "\n",
        "start_year=1984\n",
        "end_year=2011\n",
        "start_month=9\n",
        "end_month=9\n",
        "index_collection = NDVI\n",
        "\n",
        "\n",
        "years = ee.List.sequence(start_year,end_year)\n",
        "\n",
        "yearwise_ndvi = years.map(annual_images)\n",
        "\n",
        "yearCompCol = ee.ImageCollection.fromImages(yearwise_ndvi)\n",
        "\n",
        "ndvitrend = yearCompCol.select(['system:time_start_mean', 'NDVI_' + analysis]).reduce(ee.Reducer.linearFit())"
      ],
      "metadata": {
        "id": "Ws6ElEKhOSSZ"
      },
      "execution_count": 45,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "NDVIData = ndvitrend.reduceRegions(collection=sheds,reducer=ee.Reducer.mean(), scale=250)\n",
        "dfNDVI = geemap.ee_to_pandas(NDVIData).rename(columns={\"scale\": analysis+'_trend_slope', \"offset\": analysis+\"_trend_intercept\"})"
      ],
      "metadata": {
        "id": "dE2qFpyBOrm9"
      },
      "execution_count": 46,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "Map4 = geemap.Map()\n",
        "import geemap.colormaps as cm\n",
        "palette = cm.palettes.summer\n",
        "\n",
        "trend_clip = trend.clip(sheds)\n",
        "\n",
        "vis_params = {\n",
        "    'min': -0.01,\n",
        "    'max': 0.01,\n",
        "    'palette': palette,\n",
        "}\n",
        "\n",
        "Map4.addLayer(trend_clip.select('scale'), vis_params, 'NDVI')\n",
        "\n",
        "colors = vis_params['palette']\n",
        "vmin = vis_params['min']\n",
        "vmax = vis_params['max']\n",
        "\n",
        "Map4.add_colorbar(vis_params, label='NDVI trend (value/year)')\n",
        "\n",
        "Map4.addLayerControl()\n",
        "Map4"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 621,
          "referenced_widgets": [
            "2c2cf1dabe304c7ab01f48fe86f9c778",
            "e108524d49224e76a83105542b1d3349",
            "b2939422f02d413aa651b8cd4bb24142",
            "3f8d468840b04dcc98562ff1451911cf",
            "3059ae9b0f6f4fe3982aaf794ddf9cc5",
            "e32dacbeed074462b2d966b3fbf76020",
            "29b9560738484f2fbe34d837abd78ce0",
            "b048249668c4417a8534557de90782d4",
            "a765c84deafc4425acc1cd76bb88966b",
            "982f9e1dc95447d087187019036e13e5",
            "94c891d119064b47a027efbdd7e48ff7",
            "f3326cb42f084d849960bc33ba6b4371",
            "1cf0cfc6f4754ccaa116e6f8d830f6be",
            "0a02ca7df11b47cbb9d592dfc807fbe4",
            "b038488e19c6478dbcc55bbcc5c78139",
            "b66a30379e3242ff947122d865749a65",
            "4e2933150d6246d19ee4419cc46d378c",
            "39b5900a6b244824869bf50385b20eea",
            "54e206c8309742cb806807c081d04e18",
            "1cfabec135004889a8d844d37835336b",
            "78c732ebb7b943c19a83c7f3d7cb1489",
            "7ee87961b7234d718dc87cf5d9b74e9b",
            "f19d424c7af04c209095b36b29879287",
            "4cf91a4521db41d58c24ce2ede325506",
            "15ade50836894c78afb7f86803d0901a",
            "c4fa65bd0855474eaaf58870ddd0f488",
            "9c61fbb4bba146bda5137b065715c38a",
            "73930396a4094288a63c5172688ce2e7",
            "f9fb3b6ce66c421e924e8e52f542dfe1",
            "4187f02af8b449d59d40f079c61ffd0a"
          ]
        },
        "id": "kRCo8lwsbxhl",
        "outputId": "3a320ff8-e06a-493d-d564-57f02f381056"
      },
      "execution_count": 47,
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "Map(center=[20, 0], controls=(WidgetControl(options=['position', 'transparent_bg'], widget=HBox(children=(Togg…"
            ],
            "application/vnd.jupyter.widget-view+json": {
              "version_major": 2,
              "version_minor": 0,
              "model_id": "2c2cf1dabe304c7ab01f48fe86f9c778"
            }
          },
          "metadata": {
            "application/vnd.jupyter.widget-view+json": {
              "colab": {
                "custom_widget_manager": {
                  "url": "https://ssl.gstatic.com/colaboratory-static/widgets/colab-cdn-widget-manager/a8874ba6619b6106/manager.min.js"
                }
              }
            }
          }
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "from google.colab import drive\n",
        "\n",
        "drive.mount('/content/drive')\n",
        "path = '/content/drive/Shared drives/WISP Files/landsatndvi.csv'\n",
        "\n",
        "with open(path, 'w', encoding = 'utf-8-sig') as f:\n",
        "  dfNDVI.to_csv(f)"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "FPLCTDx6XOuf",
        "outputId": "f149a4a0-b672-4386-b16c-ed9e56361a5a"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Drive already mounted at /content/drive; to attempt to forcibly remount, call drive.mount(\"/content/drive\", force_remount=True).\n"
          ]
        }
      ]
    }
  ],
  "metadata": {
    "colab": {
      "collapsed_sections": [
        "qd7wWJl9NneU"
      ],
      "name": "Copy of NEW Supriya Ganti - Russsian_rivers_clean",
      "provenance": [],
      "toc_visible": true,
      "include_colab_link": true
    },
    "kernelspec": {
      "display_name": "Python 3",
      "name": "python3"
    },
    "language_info": {
      "name": "python"
    },
    "widgets": {
      "application/vnd.jupyter.widget-state+json": {
        "48dcb232784b423abca6be8c21f7cfd2": {
          "model_module": "jupyter-leaflet",
          "model_name": "LeafletMapModel",
          "model_module_version": "^0.16.0",
          "state": {
            "_dom_classes": [],
            "_model_module": "jupyter-leaflet",
            "_model_module_version": "^0.16.0",
            "_model_name": "LeafletMapModel",
            "_view_count": null,
            "_view_module": "jupyter-leaflet",
            "_view_module_version": "^0.16.0",
            "_view_name": "LeafletMapView",
            "bottom": 1451,
            "bounce_at_zoom_limits": true,
            "box_zoom": true,
            "center": [
              -21.779905342529634,
              -79.36523437500001
            ],
            "close_popup_on_click": true,
            "controls": [
              "IPY_MODEL_f8cf0db932a046ef82d487a6af880756",
              "IPY_MODEL_c9cd7132e2684ea2bd6092262d0b7c11",
              "IPY_MODEL_69a95016965544a790ceb312ef5e17c2",
              "IPY_MODEL_a69ffcd4507649b98cf1726708ca0c65",
              "IPY_MODEL_525f095b59c94fb295315dbbc531a407",
              "IPY_MODEL_7e4021d94b5a42bbba6d909dac3ad596",
              "IPY_MODEL_e08ce9e385bb4d748d33bb435c34d82e",
              "IPY_MODEL_51f9f81a7803428b80ff03e7e839b768"
            ],
            "crs": {
              "name": "EPSG3857",
              "custom": false
            },
            "default_style": "IPY_MODEL_7fdbf698da20408a976e689fe55afb32",
            "double_click_zoom": true,
            "dragging": true,
            "dragging_style": "IPY_MODEL_d35275775a0b4afaab66b208ccb24a04",
            "east": 9.667968750000002,
            "fullscreen": false,
            "inertia": true,
            "inertia_deceleration": 3000,
            "inertia_max_speed": 1500,
            "interpolation": "bilinear",
            "keyboard": true,
            "keyboard_pan_offset": 80,
            "keyboard_zoom_offset": 1,
            "layers": [
              "IPY_MODEL_219a0c1ae48c4bdc94103c6c63f11024",
              "IPY_MODEL_b038488e19c6478dbcc55bbcc5c78139",
              "IPY_MODEL_5a1171de330e47d995effaf1a776483a",
              "IPY_MODEL_640fcc24e50847a686f202a42caa0802",
              "IPY_MODEL_9ff55874b3334f268846e4c29cf88c79",
              "IPY_MODEL_66fad3b05740400fbf004721fedb7986"
            ],
            "layout": "IPY_MODEL_6837f2a6454245a98a26410829943306",
            "left": 66,
            "max_zoom": 24,
            "min_zoom": 1,
            "modisdate": "2022-05-31",
            "north": 29.075375179558346,
            "options": [
              "bounce_at_zoom_limits",
              "box_zoom",
              "center",
              "close_popup_on_click",
              "double_click_zoom",
              "dragging",
              "fullscreen",
              "inertia",
              "inertia_deceleration",
              "inertia_max_speed",
              "interpolation",
              "keyboard",
              "keyboard_pan_offset",
              "keyboard_zoom_offset",
              "max_zoom",
              "min_zoom",
              "prefer_canvas",
              "scroll_wheel_zoom",
              "tap",
              "tap_tolerance",
              "touch_zoom",
              "world_copy_jump",
              "zoom",
              "zoom_animation_threshold",
              "zoom_delta",
              "zoom_snap",
              "zoom_start"
            ],
            "prefer_canvas": false,
            "right": 1079,
            "scroll_wheel_zoom": true,
            "south": -59.80063426102869,
            "style": "IPY_MODEL_7fdbf698da20408a976e689fe55afb32",
            "tap": true,
            "tap_tolerance": 15,
            "top": 851,
            "touch_zoom": true,
            "west": -168.39843750000003,
            "window_url": "https://yltn1k17ltc-496ff2e9c6d22116-0-colab.googleusercontent.com/outputframe.html?vrz=colab-20220531-060047-RC00_451971023",
            "world_copy_jump": false,
            "zoom": 3,
            "zoom_animation_threshold": 4,
            "zoom_delta": 1,
            "zoom_snap": 1,
            "zoom_start": 12,
            "_dragging": false
          }
        },
        "f8cf0db932a046ef82d487a6af880756": {
          "model_module": "jupyter-leaflet",
          "model_name": "LeafletWidgetControlModel",
          "model_module_version": "^0.16.0",
          "state": {
            "_model_module": "jupyter-leaflet",
            "_model_module_version": "^0.16.0",
            "_model_name": "LeafletWidgetControlModel",
            "_view_count": null,
            "_view_module": "jupyter-leaflet",
            "_view_module_version": "^0.16.0",
            "_view_name": "LeafletWidgetControlView",
            "max_height": null,
            "max_width": null,
            "min_height": null,
            "min_width": null,
            "options": [
              "position",
              "transparent_bg"
            ],
            "position": "topleft",
            "transparent_bg": false,
            "widget": "IPY_MODEL_0c9a740840f4401aa46332dfb989cf40"
          }
        },
        "c9cd7132e2684ea2bd6092262d0b7c11": {
          "model_module": "jupyter-leaflet",
          "model_name": "LeafletZoomControlModel",
          "model_module_version": "^0.16.0",
          "state": {
            "_model_module": "jupyter-leaflet",
            "_model_module_version": "^0.16.0",
            "_model_name": "LeafletZoomControlModel",
            "_view_count": null,
            "_view_module": "jupyter-leaflet",
            "_view_module_version": "^0.16.0",
            "_view_name": "LeafletZoomControlView",
            "options": [
              "position",
              "zoom_in_text",
              "zoom_in_title",
              "zoom_out_text",
              "zoom_out_title"
            ],
            "position": "topleft",
            "zoom_in_text": "+",
            "zoom_in_title": "Zoom in",
            "zoom_out_text": "-",
            "zoom_out_title": "Zoom out"
          }
        },
        "69a95016965544a790ceb312ef5e17c2": {
          "model_module": "jupyter-leaflet",
          "model_name": "LeafletScaleControlModel",
          "model_module_version": "^0.16.0",
          "state": {
            "_model_module": "jupyter-leaflet",
            "_model_module_version": "^0.16.0",
            "_model_name": "LeafletScaleControlModel",
            "_view_count": null,
            "_view_module": "jupyter-leaflet",
            "_view_module_version": "^0.16.0",
            "_view_name": "LeafletScaleControlView",
            "imperial": true,
            "max_width": 100,
            "metric": true,
            "options": [
              "imperial",
              "max_width",
              "metric",
              "position",
              "update_when_idle"
            ],
            "position": "bottomleft",
            "update_when_idle": false
          }
        },
        "a69ffcd4507649b98cf1726708ca0c65": {
          "model_module": "jupyter-leaflet",
          "model_name": "LeafletFullScreenControlModel",
          "model_module_version": "^0.16.0",
          "state": {
            "_model_module": "jupyter-leaflet",
            "_model_module_version": "^0.16.0",
            "_model_name": "LeafletFullScreenControlModel",
            "_view_count": null,
            "_view_module": "jupyter-leaflet",
            "_view_module_version": "^0.16.0",
            "_view_name": "LeafletFullScreenControlView",
            "options": [
              "position"
            ],
            "position": "topleft"
          }
        },
        "525f095b59c94fb295315dbbc531a407": {
          "model_module": "jupyter-leaflet",
          "model_name": "LeafletMeasureControlModel",
          "model_module_version": "^0.16.0",
          "state": {
            "_custom_units": {},
            "_model_module": "jupyter-leaflet",
            "_model_module_version": "^0.16.0",
            "_model_name": "LeafletMeasureControlModel",
            "_view_count": null,
            "_view_module": "jupyter-leaflet",
            "_view_module_version": "^0.16.0",
            "_view_name": "LeafletMeasureControlView",
            "active_color": "orange",
            "capture_z_index": 10000,
            "completed_color": "#C8F2BE",
            "options": [
              "active_color",
              "capture_z_index",
              "completed_color",
              "popup_options",
              "position",
              "primary_area_unit",
              "primary_length_unit",
              "secondary_area_unit",
              "secondary_length_unit"
            ],
            "popup_options": {
              "className": "leaflet-measure-resultpopup",
              "autoPanPadding": [
                10,
                10
              ]
            },
            "position": "bottomleft",
            "primary_area_unit": "acres",
            "primary_length_unit": "kilometers",
            "secondary_area_unit": null,
            "secondary_length_unit": null
          }
        },
        "7e4021d94b5a42bbba6d909dac3ad596": {
          "model_module": "jupyter-leaflet",
          "model_name": "LeafletAttributionControlModel",
          "model_module_version": "^0.16.0",
          "state": {
            "_model_module": "jupyter-leaflet",
            "_model_module_version": "^0.16.0",
            "_model_name": "LeafletAttributionControlModel",
            "_view_count": null,
            "_view_module": "jupyter-leaflet",
            "_view_module_version": "^0.16.0",
            "_view_name": "LeafletAttributionControlView",
            "options": [
              "position",
              "prefix"
            ],
            "position": "bottomright",
            "prefix": "ipyleaflet"
          }
        },
        "e08ce9e385bb4d748d33bb435c34d82e": {
          "model_module": "jupyter-leaflet",
          "model_name": "LeafletDrawControlModel",
          "model_module_version": "^0.16.0",
          "state": {
            "_model_module": "jupyter-leaflet",
            "_model_module_version": "^0.16.0",
            "_model_name": "LeafletDrawControlModel",
            "_view_count": null,
            "_view_module": "jupyter-leaflet",
            "_view_module_version": "^0.16.0",
            "_view_name": "LeafletDrawControlView",
            "circle": {
              "shapeOptions": {
                "color": "#3388ff"
              }
            },
            "circlemarker": {},
            "data": [],
            "edit": true,
            "marker": {
              "shapeOptions": {
                "color": "#3388ff"
              }
            },
            "options": [
              "position"
            ],
            "polygon": {
              "shapeOptions": {}
            },
            "polyline": {
              "shapeOptions": {}
            },
            "position": "topleft",
            "rectangle": {
              "shapeOptions": {
                "color": "#3388ff"
              }
            },
            "remove": true
          }
        },
        "51f9f81a7803428b80ff03e7e839b768": {
          "model_module": "jupyter-leaflet",
          "model_name": "LeafletWidgetControlModel",
          "model_module_version": "^0.16.0",
          "state": {
            "_model_module": "jupyter-leaflet",
            "_model_module_version": "^0.16.0",
            "_model_name": "LeafletWidgetControlModel",
            "_view_count": null,
            "_view_module": "jupyter-leaflet",
            "_view_module_version": "^0.16.0",
            "_view_name": "LeafletWidgetControlView",
            "max_height": null,
            "max_width": null,
            "min_height": null,
            "min_width": null,
            "options": [
              "position",
              "transparent_bg"
            ],
            "position": "topright",
            "transparent_bg": false,
            "widget": "IPY_MODEL_e15b3247917243e2aa2ba7db05c4f1fb"
          }
        },
        "7fdbf698da20408a976e689fe55afb32": {
          "model_module": "jupyter-leaflet",
          "model_name": "LeafletMapStyleModel",
          "model_module_version": "^0.16.0",
          "state": {
            "_model_module": "jupyter-leaflet",
            "_model_module_version": "^0.16.0",
            "_model_name": "LeafletMapStyleModel",
            "_view_count": null,
            "_view_module": "@jupyter-widgets/base",
            "_view_module_version": "1.2.0",
            "_view_name": "StyleView",
            "cursor": "grab"
          }
        },
        "d35275775a0b4afaab66b208ccb24a04": {
          "model_module": "jupyter-leaflet",
          "model_name": "LeafletMapStyleModel",
          "model_module_version": "^0.16.0",
          "state": {
            "_model_module": "jupyter-leaflet",
            "_model_module_version": "^0.16.0",
            "_model_name": "LeafletMapStyleModel",
            "_view_count": null,
            "_view_module": "@jupyter-widgets/base",
            "_view_module_version": "1.2.0",
            "_view_name": "StyleView",
            "cursor": "move"
          }
        },
        "219a0c1ae48c4bdc94103c6c63f11024": {
          "model_module": "jupyter-leaflet",
          "model_name": "LeafletTileLayerModel",
          "model_module_version": "^0.16.0",
          "state": {
            "_model_module": "jupyter-leaflet",
            "_model_module_version": "^0.16.0",
            "_model_name": "LeafletTileLayerModel",
            "_view_count": null,
            "_view_module": "jupyter-leaflet",
            "_view_module_version": "^0.16.0",
            "_view_name": "LeafletTileLayerView",
            "attribution": "&copy; <a href=\"https://www.openstreetmap.org/copyright\">OpenStreetMap</a> contributors",
            "base": true,
            "bottom": true,
            "bounds": null,
            "detect_retina": false,
            "loading": false,
            "max_native_zoom": 18,
            "max_zoom": 19,
            "min_native_zoom": 0,
            "min_zoom": 1,
            "name": "OpenStreetMap.Mapnik",
            "no_wrap": false,
            "opacity": 1,
            "options": [
              "attribution",
              "bounds",
              "detect_retina",
              "max_native_zoom",
              "max_zoom",
              "min_native_zoom",
              "min_zoom",
              "no_wrap",
              "tile_size",
              "tms"
            ],
            "popup": null,
            "popup_max_height": null,
            "popup_max_width": 300,
            "popup_min_width": 50,
            "show_loading": false,
            "tile_size": 256,
            "tms": false,
            "url": "https://a.tile.openstreetmap.org/{z}/{x}/{y}.png",
            "visible": true
          }
        },
        "b038488e19c6478dbcc55bbcc5c78139": {
          "model_module": "jupyter-leaflet",
          "model_name": "LeafletTileLayerModel",
          "model_module_version": "^0.16.0",
          "state": {
            "_model_module": "jupyter-leaflet",
            "_model_module_version": "^0.16.0",
            "_model_name": "LeafletTileLayerModel",
            "_view_count": null,
            "_view_module": "jupyter-leaflet",
            "_view_module_version": "^0.16.0",
            "_view_name": "LeafletTileLayerView",
            "attribution": "Google",
            "base": false,
            "bottom": true,
            "bounds": null,
            "detect_retina": false,
            "loading": false,
            "max_native_zoom": 18,
            "max_zoom": 22,
            "min_native_zoom": 0,
            "min_zoom": 0,
            "name": "Google Maps",
            "no_wrap": false,
            "opacity": 1,
            "options": [
              "attribution",
              "bounds",
              "detect_retina",
              "max_native_zoom",
              "max_zoom",
              "min_native_zoom",
              "min_zoom",
              "no_wrap",
              "tile_size",
              "tms"
            ],
            "popup": null,
            "popup_max_height": null,
            "popup_max_width": 300,
            "popup_min_width": 50,
            "show_loading": false,
            "tile_size": 256,
            "tms": false,
            "url": "https://mt1.google.com/vt/lyrs=m&x={x}&y={y}&z={z}",
            "visible": true
          }
        },
        "5a1171de330e47d995effaf1a776483a": {
          "model_module": "jupyter-leaflet",
          "model_name": "LeafletTileLayerModel",
          "model_module_version": "^0.16.0",
          "state": {
            "_model_module": "jupyter-leaflet",
            "_model_module_version": "^0.16.0",
            "_model_name": "LeafletTileLayerModel",
            "_view_count": null,
            "_view_module": "jupyter-leaflet",
            "_view_module_version": "^0.16.0",
            "_view_name": "LeafletTileLayerView",
            "attribution": "Google Earth Engine",
            "base": false,
            "bottom": true,
            "bounds": null,
            "detect_retina": false,
            "loading": false,
            "max_native_zoom": 18,
            "max_zoom": 24,
            "min_native_zoom": 0,
            "min_zoom": 0,
            "name": "Delineated watersheds",
            "no_wrap": false,
            "opacity": 1,
            "options": [
              "attribution",
              "bounds",
              "detect_retina",
              "max_native_zoom",
              "max_zoom",
              "min_native_zoom",
              "min_zoom",
              "no_wrap",
              "tile_size",
              "tms"
            ],
            "popup": null,
            "popup_max_height": null,
            "popup_max_width": 300,
            "popup_min_width": 50,
            "show_loading": false,
            "tile_size": 256,
            "tms": false,
            "url": "https://earthengine.googleapis.com/v1alpha/projects/earthengine-legacy/maps/f541d5cbd62781f830800a26cfdd4ffe-7d918faa3072c7278dbf31003e12f5fc/tiles/{z}/{x}/{y}",
            "visible": true
          }
        },
        "6837f2a6454245a98a26410829943306": {
          "model_module": "@jupyter-widgets/base",
          "model_name": "LayoutModel",
          "model_module_version": "1.2.0",
          "state": {
            "_model_module": "@jupyter-widgets/base",
            "_model_module_version": "1.2.0",
            "_model_name": "LayoutModel",
            "_view_count": null,
            "_view_module": "@jupyter-widgets/base",
            "_view_module_version": "1.2.0",
            "_view_name": "LayoutView",
            "align_content": null,
            "align_items": null,
            "align_self": null,
            "border": null,
            "bottom": null,
            "display": null,
            "flex": null,
            "flex_flow": null,
            "grid_area": null,
            "grid_auto_columns": null,
            "grid_auto_flow": null,
            "grid_auto_rows": null,
            "grid_column": null,
            "grid_gap": null,
            "grid_row": null,
            "grid_template_areas": null,
            "grid_template_columns": null,
            "grid_template_rows": null,
            "height": "600px",
            "justify_content": null,
            "justify_items": null,
            "left": null,
            "margin": null,
            "max_height": null,
            "max_width": null,
            "min_height": null,
            "min_width": null,
            "object_fit": null,
            "object_position": null,
            "order": null,
            "overflow": null,
            "overflow_x": null,
            "overflow_y": null,
            "padding": null,
            "right": null,
            "top": null,
            "visibility": null,
            "width": null
          }
        },
        "5f7155c98d614068a718abae9bf5f1d1": {
          "model_module": "jupyter-leaflet",
          "model_name": "LeafletMapStyleModel",
          "model_module_version": "^0.16.0",
          "state": {
            "_model_module": "jupyter-leaflet",
            "_model_module_version": "^0.16.0",
            "_model_name": "LeafletMapStyleModel",
            "_view_count": null,
            "_view_module": "@jupyter-widgets/base",
            "_view_module_version": "1.2.0",
            "_view_name": "StyleView",
            "cursor": "grab"
          }
        },
        "0c9a740840f4401aa46332dfb989cf40": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "HBoxModel",
          "model_module_version": "1.5.0",
          "state": {
            "_dom_classes": [],
            "_model_module": "@jupyter-widgets/controls",
            "_model_module_version": "1.5.0",
            "_model_name": "HBoxModel",
            "_view_count": null,
            "_view_module": "@jupyter-widgets/controls",
            "_view_module_version": "1.5.0",
            "_view_name": "HBoxView",
            "box_style": "",
            "children": [
              "IPY_MODEL_61d51598be9e4f16b8284b91dfe7dee5"
            ],
            "layout": "IPY_MODEL_e2e75a8124f4417a8f6e579a40212688"
          }
        },
        "e15b3247917243e2aa2ba7db05c4f1fb": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "VBoxModel",
          "model_module_version": "1.5.0",
          "state": {
            "_dom_classes": [],
            "_model_module": "@jupyter-widgets/controls",
            "_model_module_version": "1.5.0",
            "_model_name": "VBoxModel",
            "_view_count": null,
            "_view_module": "@jupyter-widgets/controls",
            "_view_module_version": "1.5.0",
            "_view_name": "VBoxView",
            "box_style": "",
            "children": [
              "IPY_MODEL_e11f590fd37045fb9855dd7bacd5f28b"
            ],
            "layout": "IPY_MODEL_03c5e82ce28c49b18e5ec9298fee79ce"
          }
        },
        "61d51598be9e4f16b8284b91dfe7dee5": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "ToggleButtonModel",
          "model_module_version": "1.5.0",
          "state": {
            "_dom_classes": [],
            "_model_module": "@jupyter-widgets/controls",
            "_model_module_version": "1.5.0",
            "_model_name": "ToggleButtonModel",
            "_view_count": null,
            "_view_module": "@jupyter-widgets/controls",
            "_view_module_version": "1.5.0",
            "_view_name": "ToggleButtonView",
            "button_style": "",
            "description": "",
            "description_tooltip": null,
            "disabled": false,
            "icon": "globe",
            "layout": "IPY_MODEL_4e7f46a158174b08b93564940b6cc0bd",
            "style": "IPY_MODEL_6f59f62a977e46cb881ad85cc901bed1",
            "tooltip": "Search location/data",
            "value": false
          }
        },
        "e2e75a8124f4417a8f6e579a40212688": {
          "model_module": "@jupyter-widgets/base",
          "model_name": "LayoutModel",
          "model_module_version": "1.2.0",
          "state": {
            "_model_module": "@jupyter-widgets/base",
            "_model_module_version": "1.2.0",
            "_model_name": "LayoutModel",
            "_view_count": null,
            "_view_module": "@jupyter-widgets/base",
            "_view_module_version": "1.2.0",
            "_view_name": "LayoutView",
            "align_content": null,
            "align_items": null,
            "align_self": null,
            "border": null,
            "bottom": null,
            "display": null,
            "flex": null,
            "flex_flow": null,
            "grid_area": null,
            "grid_auto_columns": null,
            "grid_auto_flow": null,
            "grid_auto_rows": null,
            "grid_column": null,
            "grid_gap": null,
            "grid_row": null,
            "grid_template_areas": null,
            "grid_template_columns": null,
            "grid_template_rows": null,
            "height": null,
            "justify_content": null,
            "justify_items": null,
            "left": null,
            "margin": null,
            "max_height": null,
            "max_width": null,
            "min_height": null,
            "min_width": null,
            "object_fit": null,
            "object_position": null,
            "order": null,
            "overflow": null,
            "overflow_x": null,
            "overflow_y": null,
            "padding": null,
            "right": null,
            "top": null,
            "visibility": null,
            "width": null
          }
        },
        "e11f590fd37045fb9855dd7bacd5f28b": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "ToggleButtonModel",
          "model_module_version": "1.5.0",
          "state": {
            "_dom_classes": [],
            "_model_module": "@jupyter-widgets/controls",
            "_model_module_version": "1.5.0",
            "_model_name": "ToggleButtonModel",
            "_view_count": null,
            "_view_module": "@jupyter-widgets/controls",
            "_view_module_version": "1.5.0",
            "_view_name": "ToggleButtonView",
            "button_style": "",
            "description": "",
            "description_tooltip": null,
            "disabled": false,
            "icon": "wrench",
            "layout": "IPY_MODEL_284aa7164e274891a53bfba0e088c90f",
            "style": "IPY_MODEL_651283433a4641199e8bc30db0898125",
            "tooltip": "Toolbar",
            "value": false
          }
        },
        "03c5e82ce28c49b18e5ec9298fee79ce": {
          "model_module": "@jupyter-widgets/base",
          "model_name": "LayoutModel",
          "model_module_version": "1.2.0",
          "state": {
            "_model_module": "@jupyter-widgets/base",
            "_model_module_version": "1.2.0",
            "_model_name": "LayoutModel",
            "_view_count": null,
            "_view_module": "@jupyter-widgets/base",
            "_view_module_version": "1.2.0",
            "_view_name": "LayoutView",
            "align_content": null,
            "align_items": null,
            "align_self": null,
            "border": null,
            "bottom": null,
            "display": null,
            "flex": null,
            "flex_flow": null,
            "grid_area": null,
            "grid_auto_columns": null,
            "grid_auto_flow": null,
            "grid_auto_rows": null,
            "grid_column": null,
            "grid_gap": null,
            "grid_row": null,
            "grid_template_areas": null,
            "grid_template_columns": null,
            "grid_template_rows": null,
            "height": null,
            "justify_content": null,
            "justify_items": null,
            "left": null,
            "margin": null,
            "max_height": null,
            "max_width": null,
            "min_height": null,
            "min_width": null,
            "object_fit": null,
            "object_position": null,
            "order": null,
            "overflow": null,
            "overflow_x": null,
            "overflow_y": null,
            "padding": null,
            "right": null,
            "top": null,
            "visibility": null,
            "width": null
          }
        },
        "4e7f46a158174b08b93564940b6cc0bd": {
          "model_module": "@jupyter-widgets/base",
          "model_name": "LayoutModel",
          "model_module_version": "1.2.0",
          "state": {
            "_model_module": "@jupyter-widgets/base",
            "_model_module_version": "1.2.0",
            "_model_name": "LayoutModel",
            "_view_count": null,
            "_view_module": "@jupyter-widgets/base",
            "_view_module_version": "1.2.0",
            "_view_name": "LayoutView",
            "align_content": null,
            "align_items": null,
            "align_self": null,
            "border": null,
            "bottom": null,
            "display": null,
            "flex": null,
            "flex_flow": null,
            "grid_area": null,
            "grid_auto_columns": null,
            "grid_auto_flow": null,
            "grid_auto_rows": null,
            "grid_column": null,
            "grid_gap": null,
            "grid_row": null,
            "grid_template_areas": null,
            "grid_template_columns": null,
            "grid_template_rows": null,
            "height": "28px",
            "justify_content": null,
            "justify_items": null,
            "left": null,
            "margin": null,
            "max_height": null,
            "max_width": null,
            "min_height": null,
            "min_width": null,
            "object_fit": null,
            "object_position": null,
            "order": null,
            "overflow": null,
            "overflow_x": null,
            "overflow_y": null,
            "padding": "0px 0px 0px 4px",
            "right": null,
            "top": null,
            "visibility": null,
            "width": "28px"
          }
        },
        "6f59f62a977e46cb881ad85cc901bed1": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "DescriptionStyleModel",
          "model_module_version": "1.5.0",
          "state": {
            "_model_module": "@jupyter-widgets/controls",
            "_model_module_version": "1.5.0",
            "_model_name": "DescriptionStyleModel",
            "_view_count": null,
            "_view_module": "@jupyter-widgets/base",
            "_view_module_version": "1.2.0",
            "_view_name": "StyleView",
            "description_width": ""
          }
        },
        "284aa7164e274891a53bfba0e088c90f": {
          "model_module": "@jupyter-widgets/base",
          "model_name": "LayoutModel",
          "model_module_version": "1.2.0",
          "state": {
            "_model_module": "@jupyter-widgets/base",
            "_model_module_version": "1.2.0",
            "_model_name": "LayoutModel",
            "_view_count": null,
            "_view_module": "@jupyter-widgets/base",
            "_view_module_version": "1.2.0",
            "_view_name": "LayoutView",
            "align_content": null,
            "align_items": null,
            "align_self": null,
            "border": null,
            "bottom": null,
            "display": null,
            "flex": null,
            "flex_flow": null,
            "grid_area": null,
            "grid_auto_columns": null,
            "grid_auto_flow": null,
            "grid_auto_rows": null,
            "grid_column": null,
            "grid_gap": null,
            "grid_row": null,
            "grid_template_areas": null,
            "grid_template_columns": null,
            "grid_template_rows": null,
            "height": "28px",
            "justify_content": null,
            "justify_items": null,
            "left": null,
            "margin": null,
            "max_height": null,
            "max_width": null,
            "min_height": null,
            "min_width": null,
            "object_fit": null,
            "object_position": null,
            "order": null,
            "overflow": null,
            "overflow_x": null,
            "overflow_y": null,
            "padding": "0px 0px 0px 4px",
            "right": null,
            "top": null,
            "visibility": null,
            "width": "28px"
          }
        },
        "651283433a4641199e8bc30db0898125": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "DescriptionStyleModel",
          "model_module_version": "1.5.0",
          "state": {
            "_model_module": "@jupyter-widgets/controls",
            "_model_module_version": "1.5.0",
            "_model_name": "DescriptionStyleModel",
            "_view_count": null,
            "_view_module": "@jupyter-widgets/base",
            "_view_module_version": "1.2.0",
            "_view_name": "StyleView",
            "description_width": ""
          }
        },
        "640fcc24e50847a686f202a42caa0802": {
          "model_module": "jupyter-leaflet",
          "model_name": "LeafletTileLayerModel",
          "model_module_version": "^0.16.0",
          "state": {
            "_model_module": "jupyter-leaflet",
            "_model_module_version": "^0.16.0",
            "_model_name": "LeafletTileLayerModel",
            "_view_count": null,
            "_view_module": "jupyter-leaflet",
            "_view_module_version": "^0.16.0",
            "_view_name": "LeafletTileLayerView",
            "attribution": "Google Earth Engine",
            "base": false,
            "bottom": true,
            "bounds": null,
            "detect_retina": false,
            "loading": false,
            "max_native_zoom": 18,
            "max_zoom": 24,
            "min_native_zoom": 0,
            "min_zoom": 0,
            "name": "NDVI",
            "no_wrap": false,
            "opacity": 1,
            "options": [
              "attribution",
              "bounds",
              "detect_retina",
              "max_native_zoom",
              "max_zoom",
              "min_native_zoom",
              "min_zoom",
              "no_wrap",
              "tile_size",
              "tms"
            ],
            "popup": null,
            "popup_max_height": null,
            "popup_max_width": 300,
            "popup_min_width": 50,
            "show_loading": false,
            "tile_size": 256,
            "tms": false,
            "url": "https://earthengine.googleapis.com/v1alpha/projects/earthengine-legacy/maps/9891d4d38065e10c7497298b5b48c11f-59dd4083f99208057a26ae200cf30149/tiles/{z}/{x}/{y}",
            "visible": true
          }
        },
        "9ff55874b3334f268846e4c29cf88c79": {
          "model_module": "jupyter-leaflet",
          "model_name": "LeafletTileLayerModel",
          "model_module_version": "^0.16.0",
          "state": {
            "_model_module": "jupyter-leaflet",
            "_model_module_version": "^0.16.0",
            "_model_name": "LeafletTileLayerModel",
            "_view_count": null,
            "_view_module": "jupyter-leaflet",
            "_view_module_version": "^0.16.0",
            "_view_name": "LeafletTileLayerView",
            "attribution": "Google Earth Engine",
            "base": false,
            "bottom": true,
            "bounds": null,
            "detect_retina": false,
            "loading": false,
            "max_native_zoom": 18,
            "max_zoom": 24,
            "min_native_zoom": 0,
            "min_zoom": 0,
            "name": "NDVI trend",
            "no_wrap": false,
            "opacity": 1,
            "options": [
              "attribution",
              "bounds",
              "detect_retina",
              "max_native_zoom",
              "max_zoom",
              "min_native_zoom",
              "min_zoom",
              "no_wrap",
              "tile_size",
              "tms"
            ],
            "popup": null,
            "popup_max_height": null,
            "popup_max_width": 300,
            "popup_min_width": 50,
            "show_loading": false,
            "tile_size": 256,
            "tms": false,
            "url": "https://earthengine.googleapis.com/v1alpha/projects/earthengine-legacy/maps/f0673881f7d9077a29140efff0930fca-a0e73cef022e7c74b24a3e67f4c7ebfb/tiles/{z}/{x}/{y}",
            "visible": true
          }
        },
        "66fad3b05740400fbf004721fedb7986": {
          "model_module": "jupyter-leaflet",
          "model_name": "LeafletTileLayerModel",
          "model_module_version": "^0.16.0",
          "state": {
            "_model_module": "jupyter-leaflet",
            "_model_module_version": "^0.16.0",
            "_model_name": "LeafletTileLayerModel",
            "_view_count": null,
            "_view_module": "jupyter-leaflet",
            "_view_module_version": "^0.16.0",
            "_view_name": "LeafletTileLayerView",
            "attribution": "Google Earth Engine",
            "base": false,
            "bottom": true,
            "bounds": null,
            "detect_retina": false,
            "loading": false,
            "max_native_zoom": 18,
            "max_zoom": 24,
            "min_native_zoom": 0,
            "min_zoom": 0,
            "name": "NDWI",
            "no_wrap": false,
            "opacity": 1,
            "options": [
              "attribution",
              "bounds",
              "detect_retina",
              "max_native_zoom",
              "max_zoom",
              "min_native_zoom",
              "min_zoom",
              "no_wrap",
              "tile_size",
              "tms"
            ],
            "popup": null,
            "popup_max_height": null,
            "popup_max_width": 300,
            "popup_min_width": 50,
            "show_loading": false,
            "tile_size": 256,
            "tms": false,
            "url": "https://earthengine.googleapis.com/v1alpha/projects/earthengine-legacy/maps/978350d2f45ef778cf6a8967b1a6e370-52c626a7f693c8de3b960f27e94e8880/tiles/{z}/{x}/{y}",
            "visible": true
          }
        },
        "38e279f7840f4a4a9c89687148c427e8": {
          "model_module": "jupyter-leaflet",
          "model_name": "LeafletMapModel",
          "model_module_version": "^0.16.0",
          "state": {
            "_dom_classes": [],
            "_model_module": "jupyter-leaflet",
            "_model_module_version": "^0.16.0",
            "_model_name": "LeafletMapModel",
            "_view_count": null,
            "_view_module": "jupyter-leaflet",
            "_view_module_version": "^0.16.0",
            "_view_name": "LeafletMapView",
            "bottom": 1171,
            "bounce_at_zoom_limits": true,
            "box_zoom": true,
            "center": [
              25.958044673317843,
              32.08007812500001
            ],
            "close_popup_on_click": true,
            "controls": [
              "IPY_MODEL_df9364adb79145278e582e5caaf3c145",
              "IPY_MODEL_1c079f1ec4384ce1bd365f7881f67d33",
              "IPY_MODEL_f18e46354fba40f181d31c369c782078",
              "IPY_MODEL_df42b090529943a7800b31693f5fb84c",
              "IPY_MODEL_e57f2140426b44c7b311cb0bc259ad4b",
              "IPY_MODEL_4b409f985b2d4f8fb7cde92de820e959",
              "IPY_MODEL_624fca625f4543f284eeb5c6002261f2",
              "IPY_MODEL_727a368975064f45bb6ec50e462f557a",
              "IPY_MODEL_09cb085b3ae94f86a384171cd380071e",
              "IPY_MODEL_032990a30fff4d7586397da764e332c8"
            ],
            "crs": {
              "name": "EPSG3857",
              "custom": false
            },
            "default_style": "IPY_MODEL_b3a494618a114723894a88f5c04504a0",
            "double_click_zoom": true,
            "dragging": true,
            "dragging_style": "IPY_MODEL_4a3c86bc90844a078f33069322c7f990",
            "east": 121.11328125000001,
            "fullscreen": false,
            "inertia": true,
            "inertia_deceleration": 3000,
            "inertia_max_speed": 1500,
            "interpolation": "bilinear",
            "keyboard": true,
            "keyboard_pan_offset": 80,
            "keyboard_zoom_offset": 1,
            "layers": [
              "IPY_MODEL_81f268b52d2845f3b73daabe7eada91d",
              "IPY_MODEL_b038488e19c6478dbcc55bbcc5c78139",
              "IPY_MODEL_1c74e674aac04f15bd0c9433dd8440fc"
            ],
            "layout": "IPY_MODEL_025b054d343c467b92e4ed27e8b1db40",
            "left": 700,
            "max_zoom": 24,
            "min_zoom": 1,
            "modisdate": "2022-05-31",
            "north": 62.02152819100765,
            "options": [
              "bounce_at_zoom_limits",
              "box_zoom",
              "center",
              "close_popup_on_click",
              "double_click_zoom",
              "dragging",
              "fullscreen",
              "inertia",
              "inertia_deceleration",
              "inertia_max_speed",
              "interpolation",
              "keyboard",
              "keyboard_pan_offset",
              "keyboard_zoom_offset",
              "max_zoom",
              "min_zoom",
              "prefer_canvas",
              "scroll_wheel_zoom",
              "tap",
              "tap_tolerance",
              "touch_zoom",
              "world_copy_jump",
              "zoom",
              "zoom_animation_threshold",
              "zoom_delta",
              "zoom_snap",
              "zoom_start"
            ],
            "prefer_canvas": false,
            "right": 1713,
            "scroll_wheel_zoom": true,
            "south": -25.005972656239177,
            "style": "IPY_MODEL_b3a494618a114723894a88f5c04504a0",
            "tap": true,
            "tap_tolerance": 15,
            "top": 571,
            "touch_zoom": true,
            "west": -56.953125,
            "window_url": "https://yltn1k17ltc-496ff2e9c6d22116-0-colab.googleusercontent.com/outputframe.html?vrz=colab-20220531-060047-RC00_451971023",
            "world_copy_jump": false,
            "zoom": 3,
            "zoom_animation_threshold": 4,
            "zoom_delta": 1,
            "zoom_snap": 1,
            "zoom_start": 12,
            "_dragging": false
          }
        },
        "df9364adb79145278e582e5caaf3c145": {
          "model_module": "jupyter-leaflet",
          "model_name": "LeafletWidgetControlModel",
          "model_module_version": "^0.16.0",
          "state": {
            "_model_module": "jupyter-leaflet",
            "_model_module_version": "^0.16.0",
            "_model_name": "LeafletWidgetControlModel",
            "_view_count": null,
            "_view_module": "jupyter-leaflet",
            "_view_module_version": "^0.16.0",
            "_view_name": "LeafletWidgetControlView",
            "max_height": null,
            "max_width": null,
            "min_height": null,
            "min_width": null,
            "options": [
              "position",
              "transparent_bg"
            ],
            "position": "topleft",
            "transparent_bg": false,
            "widget": "IPY_MODEL_b9a5d104670d42fea3e44f414d40526d"
          }
        },
        "1c079f1ec4384ce1bd365f7881f67d33": {
          "model_module": "jupyter-leaflet",
          "model_name": "LeafletZoomControlModel",
          "model_module_version": "^0.16.0",
          "state": {
            "_model_module": "jupyter-leaflet",
            "_model_module_version": "^0.16.0",
            "_model_name": "LeafletZoomControlModel",
            "_view_count": null,
            "_view_module": "jupyter-leaflet",
            "_view_module_version": "^0.16.0",
            "_view_name": "LeafletZoomControlView",
            "options": [
              "position",
              "zoom_in_text",
              "zoom_in_title",
              "zoom_out_text",
              "zoom_out_title"
            ],
            "position": "topleft",
            "zoom_in_text": "+",
            "zoom_in_title": "Zoom in",
            "zoom_out_text": "-",
            "zoom_out_title": "Zoom out"
          }
        },
        "f18e46354fba40f181d31c369c782078": {
          "model_module": "jupyter-leaflet",
          "model_name": "LeafletScaleControlModel",
          "model_module_version": "^0.16.0",
          "state": {
            "_model_module": "jupyter-leaflet",
            "_model_module_version": "^0.16.0",
            "_model_name": "LeafletScaleControlModel",
            "_view_count": null,
            "_view_module": "jupyter-leaflet",
            "_view_module_version": "^0.16.0",
            "_view_name": "LeafletScaleControlView",
            "imperial": true,
            "max_width": 100,
            "metric": true,
            "options": [
              "imperial",
              "max_width",
              "metric",
              "position",
              "update_when_idle"
            ],
            "position": "bottomleft",
            "update_when_idle": false
          }
        },
        "df42b090529943a7800b31693f5fb84c": {
          "model_module": "jupyter-leaflet",
          "model_name": "LeafletFullScreenControlModel",
          "model_module_version": "^0.16.0",
          "state": {
            "_model_module": "jupyter-leaflet",
            "_model_module_version": "^0.16.0",
            "_model_name": "LeafletFullScreenControlModel",
            "_view_count": null,
            "_view_module": "jupyter-leaflet",
            "_view_module_version": "^0.16.0",
            "_view_name": "LeafletFullScreenControlView",
            "options": [
              "position"
            ],
            "position": "topleft"
          }
        },
        "e57f2140426b44c7b311cb0bc259ad4b": {
          "model_module": "jupyter-leaflet",
          "model_name": "LeafletMeasureControlModel",
          "model_module_version": "^0.16.0",
          "state": {
            "_custom_units": {},
            "_model_module": "jupyter-leaflet",
            "_model_module_version": "^0.16.0",
            "_model_name": "LeafletMeasureControlModel",
            "_view_count": null,
            "_view_module": "jupyter-leaflet",
            "_view_module_version": "^0.16.0",
            "_view_name": "LeafletMeasureControlView",
            "active_color": "orange",
            "capture_z_index": 10000,
            "completed_color": "#C8F2BE",
            "options": [
              "active_color",
              "capture_z_index",
              "completed_color",
              "popup_options",
              "position",
              "primary_area_unit",
              "primary_length_unit",
              "secondary_area_unit",
              "secondary_length_unit"
            ],
            "popup_options": {
              "className": "leaflet-measure-resultpopup",
              "autoPanPadding": [
                10,
                10
              ]
            },
            "position": "bottomleft",
            "primary_area_unit": "acres",
            "primary_length_unit": "kilometers",
            "secondary_area_unit": null,
            "secondary_length_unit": null
          }
        },
        "4b409f985b2d4f8fb7cde92de820e959": {
          "model_module": "jupyter-leaflet",
          "model_name": "LeafletAttributionControlModel",
          "model_module_version": "^0.16.0",
          "state": {
            "_model_module": "jupyter-leaflet",
            "_model_module_version": "^0.16.0",
            "_model_name": "LeafletAttributionControlModel",
            "_view_count": null,
            "_view_module": "jupyter-leaflet",
            "_view_module_version": "^0.16.0",
            "_view_name": "LeafletAttributionControlView",
            "options": [
              "position",
              "prefix"
            ],
            "position": "bottomright",
            "prefix": "ipyleaflet"
          }
        },
        "624fca625f4543f284eeb5c6002261f2": {
          "model_module": "jupyter-leaflet",
          "model_name": "LeafletDrawControlModel",
          "model_module_version": "^0.16.0",
          "state": {
            "_model_module": "jupyter-leaflet",
            "_model_module_version": "^0.16.0",
            "_model_name": "LeafletDrawControlModel",
            "_view_count": null,
            "_view_module": "jupyter-leaflet",
            "_view_module_version": "^0.16.0",
            "_view_name": "LeafletDrawControlView",
            "circle": {
              "shapeOptions": {
                "color": "#3388ff"
              }
            },
            "circlemarker": {},
            "data": [],
            "edit": true,
            "marker": {
              "shapeOptions": {
                "color": "#3388ff"
              }
            },
            "options": [
              "position"
            ],
            "polygon": {
              "shapeOptions": {}
            },
            "polyline": {
              "shapeOptions": {}
            },
            "position": "topleft",
            "rectangle": {
              "shapeOptions": {
                "color": "#3388ff"
              }
            },
            "remove": true
          }
        },
        "727a368975064f45bb6ec50e462f557a": {
          "model_module": "jupyter-leaflet",
          "model_name": "LeafletWidgetControlModel",
          "model_module_version": "^0.16.0",
          "state": {
            "_model_module": "jupyter-leaflet",
            "_model_module_version": "^0.16.0",
            "_model_name": "LeafletWidgetControlModel",
            "_view_count": null,
            "_view_module": "jupyter-leaflet",
            "_view_module_version": "^0.16.0",
            "_view_name": "LeafletWidgetControlView",
            "max_height": null,
            "max_width": null,
            "min_height": null,
            "min_width": null,
            "options": [
              "position",
              "transparent_bg"
            ],
            "position": "topright",
            "transparent_bg": false,
            "widget": "IPY_MODEL_78e8acd282ec4138bb4d3dbfdb2a15be"
          }
        },
        "09cb085b3ae94f86a384171cd380071e": {
          "model_module": "jupyter-leaflet",
          "model_name": "LeafletWidgetControlModel",
          "model_module_version": "^0.16.0",
          "state": {
            "_model_module": "jupyter-leaflet",
            "_model_module_version": "^0.16.0",
            "_model_name": "LeafletWidgetControlModel",
            "_view_count": null,
            "_view_module": "jupyter-leaflet",
            "_view_module_version": "^0.16.0",
            "_view_name": "LeafletWidgetControlView",
            "max_height": null,
            "max_width": null,
            "min_height": null,
            "min_width": null,
            "options": [
              "position",
              "transparent_bg"
            ],
            "position": "bottomright",
            "transparent_bg": false,
            "widget": "IPY_MODEL_a4ac2c5344a74379ade0cc8038959c85"
          }
        },
        "032990a30fff4d7586397da764e332c8": {
          "model_module": "jupyter-leaflet",
          "model_name": "LeafletLayersControlModel",
          "model_module_version": "^0.16.0",
          "state": {
            "_model_module": "jupyter-leaflet",
            "_model_module_version": "^0.16.0",
            "_model_name": "LeafletLayersControlModel",
            "_view_count": null,
            "_view_module": "jupyter-leaflet",
            "_view_module_version": "^0.16.0",
            "_view_name": "LeafletLayersControlView",
            "options": [
              "position"
            ],
            "position": "topright"
          }
        },
        "b3a494618a114723894a88f5c04504a0": {
          "model_module": "jupyter-leaflet",
          "model_name": "LeafletMapStyleModel",
          "model_module_version": "^0.16.0",
          "state": {
            "_model_module": "jupyter-leaflet",
            "_model_module_version": "^0.16.0",
            "_model_name": "LeafletMapStyleModel",
            "_view_count": null,
            "_view_module": "@jupyter-widgets/base",
            "_view_module_version": "1.2.0",
            "_view_name": "StyleView",
            "cursor": "grab"
          }
        },
        "4a3c86bc90844a078f33069322c7f990": {
          "model_module": "jupyter-leaflet",
          "model_name": "LeafletMapStyleModel",
          "model_module_version": "^0.16.0",
          "state": {
            "_model_module": "jupyter-leaflet",
            "_model_module_version": "^0.16.0",
            "_model_name": "LeafletMapStyleModel",
            "_view_count": null,
            "_view_module": "@jupyter-widgets/base",
            "_view_module_version": "1.2.0",
            "_view_name": "StyleView",
            "cursor": "move"
          }
        },
        "81f268b52d2845f3b73daabe7eada91d": {
          "model_module": "jupyter-leaflet",
          "model_name": "LeafletTileLayerModel",
          "model_module_version": "^0.16.0",
          "state": {
            "_model_module": "jupyter-leaflet",
            "_model_module_version": "^0.16.0",
            "_model_name": "LeafletTileLayerModel",
            "_view_count": null,
            "_view_module": "jupyter-leaflet",
            "_view_module_version": "^0.16.0",
            "_view_name": "LeafletTileLayerView",
            "attribution": "&copy; <a href=\"https://www.openstreetmap.org/copyright\">OpenStreetMap</a> contributors",
            "base": true,
            "bottom": true,
            "bounds": null,
            "detect_retina": false,
            "loading": false,
            "max_native_zoom": 18,
            "max_zoom": 19,
            "min_native_zoom": 0,
            "min_zoom": 1,
            "name": "OpenStreetMap.Mapnik",
            "no_wrap": false,
            "opacity": 1,
            "options": [
              "attribution",
              "bounds",
              "detect_retina",
              "max_native_zoom",
              "max_zoom",
              "min_native_zoom",
              "min_zoom",
              "no_wrap",
              "tile_size",
              "tms"
            ],
            "popup": null,
            "popup_max_height": null,
            "popup_max_width": 300,
            "popup_min_width": 50,
            "show_loading": false,
            "tile_size": 256,
            "tms": false,
            "url": "https://a.tile.openstreetmap.org/{z}/{x}/{y}.png",
            "visible": true
          }
        },
        "1c74e674aac04f15bd0c9433dd8440fc": {
          "model_module": "jupyter-leaflet",
          "model_name": "LeafletTileLayerModel",
          "model_module_version": "^0.16.0",
          "state": {
            "_model_module": "jupyter-leaflet",
            "_model_module_version": "^0.16.0",
            "_model_name": "LeafletTileLayerModel",
            "_view_count": null,
            "_view_module": "jupyter-leaflet",
            "_view_module_version": "^0.16.0",
            "_view_name": "LeafletTileLayerView",
            "attribution": "Google Earth Engine",
            "base": false,
            "bottom": true,
            "bounds": null,
            "detect_retina": false,
            "loading": false,
            "max_native_zoom": 18,
            "max_zoom": 24,
            "min_native_zoom": 0,
            "min_zoom": 0,
            "name": "NDWI",
            "no_wrap": false,
            "opacity": 1,
            "options": [
              "attribution",
              "bounds",
              "detect_retina",
              "max_native_zoom",
              "max_zoom",
              "min_native_zoom",
              "min_zoom",
              "no_wrap",
              "tile_size",
              "tms"
            ],
            "popup": null,
            "popup_max_height": null,
            "popup_max_width": 300,
            "popup_min_width": 50,
            "show_loading": false,
            "tile_size": 256,
            "tms": false,
            "url": "https://earthengine.googleapis.com/v1alpha/projects/earthengine-legacy/maps/c57ca8929a4f5cf040d02cc0a3848263-d84875217e353c0f8028227e154fc92a/tiles/{z}/{x}/{y}",
            "visible": true
          }
        },
        "025b054d343c467b92e4ed27e8b1db40": {
          "model_module": "@jupyter-widgets/base",
          "model_name": "LayoutModel",
          "model_module_version": "1.2.0",
          "state": {
            "_model_module": "@jupyter-widgets/base",
            "_model_module_version": "1.2.0",
            "_model_name": "LayoutModel",
            "_view_count": null,
            "_view_module": "@jupyter-widgets/base",
            "_view_module_version": "1.2.0",
            "_view_name": "LayoutView",
            "align_content": null,
            "align_items": null,
            "align_self": null,
            "border": null,
            "bottom": null,
            "display": null,
            "flex": null,
            "flex_flow": null,
            "grid_area": null,
            "grid_auto_columns": null,
            "grid_auto_flow": null,
            "grid_auto_rows": null,
            "grid_column": null,
            "grid_gap": null,
            "grid_row": null,
            "grid_template_areas": null,
            "grid_template_columns": null,
            "grid_template_rows": null,
            "height": "600px",
            "justify_content": null,
            "justify_items": null,
            "left": null,
            "margin": null,
            "max_height": null,
            "max_width": null,
            "min_height": null,
            "min_width": null,
            "object_fit": null,
            "object_position": null,
            "order": null,
            "overflow": null,
            "overflow_x": null,
            "overflow_y": null,
            "padding": null,
            "right": null,
            "top": null,
            "visibility": null,
            "width": null
          }
        },
        "82c59711284c47fcbae7d3ffb9c6d26a": {
          "model_module": "jupyter-leaflet",
          "model_name": "LeafletMapStyleModel",
          "model_module_version": "^0.16.0",
          "state": {
            "_model_module": "jupyter-leaflet",
            "_model_module_version": "^0.16.0",
            "_model_name": "LeafletMapStyleModel",
            "_view_count": null,
            "_view_module": "@jupyter-widgets/base",
            "_view_module_version": "1.2.0",
            "_view_name": "StyleView",
            "cursor": "grab"
          }
        },
        "b9a5d104670d42fea3e44f414d40526d": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "HBoxModel",
          "model_module_version": "1.5.0",
          "state": {
            "_dom_classes": [],
            "_model_module": "@jupyter-widgets/controls",
            "_model_module_version": "1.5.0",
            "_model_name": "HBoxModel",
            "_view_count": null,
            "_view_module": "@jupyter-widgets/controls",
            "_view_module_version": "1.5.0",
            "_view_name": "HBoxView",
            "box_style": "",
            "children": [
              "IPY_MODEL_f7b3b77e23d54567b0c71a54866be475"
            ],
            "layout": "IPY_MODEL_946f078617884a139cc36ea92248a498"
          }
        },
        "78e8acd282ec4138bb4d3dbfdb2a15be": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "VBoxModel",
          "model_module_version": "1.5.0",
          "state": {
            "_dom_classes": [],
            "_model_module": "@jupyter-widgets/controls",
            "_model_module_version": "1.5.0",
            "_model_name": "VBoxModel",
            "_view_count": null,
            "_view_module": "@jupyter-widgets/controls",
            "_view_module_version": "1.5.0",
            "_view_name": "VBoxView",
            "box_style": "",
            "children": [
              "IPY_MODEL_bd9c855abf864cce984a452e5cef9fdc"
            ],
            "layout": "IPY_MODEL_bb356518a16e4a35a0af32e55677bfb7"
          }
        },
        "a4ac2c5344a74379ade0cc8038959c85": {
          "model_module": "@jupyter-widgets/output",
          "model_name": "OutputModel",
          "model_module_version": "1.0.0",
          "state": {
            "_dom_classes": [],
            "_model_module": "@jupyter-widgets/output",
            "_model_module_version": "1.0.0",
            "_model_name": "OutputModel",
            "_view_count": null,
            "_view_module": "@jupyter-widgets/output",
            "_view_module_version": "1.0.0",
            "_view_name": "OutputView",
            "layout": "IPY_MODEL_ca05c45b373343df83a91310742ee151",
            "msg_id": "",
            "outputs": [
              {
                "output_type": "display_data",
                "data": {
                  "text/plain": "<Figure size 432x28.8 with 1 Axes>",
                  "image/png": "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\n"
                },
                "metadata": {
                  "needs_background": "light"
                }
              }
            ]
          }
        },
        "f7b3b77e23d54567b0c71a54866be475": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "ToggleButtonModel",
          "model_module_version": "1.5.0",
          "state": {
            "_dom_classes": [],
            "_model_module": "@jupyter-widgets/controls",
            "_model_module_version": "1.5.0",
            "_model_name": "ToggleButtonModel",
            "_view_count": null,
            "_view_module": "@jupyter-widgets/controls",
            "_view_module_version": "1.5.0",
            "_view_name": "ToggleButtonView",
            "button_style": "",
            "description": "",
            "description_tooltip": null,
            "disabled": false,
            "icon": "globe",
            "layout": "IPY_MODEL_e37b057cf059413ba3f328dd8eec43bd",
            "style": "IPY_MODEL_f34a43befc8f43f79a1946cb75b4ca9f",
            "tooltip": "Search location/data",
            "value": false
          }
        },
        "946f078617884a139cc36ea92248a498": {
          "model_module": "@jupyter-widgets/base",
          "model_name": "LayoutModel",
          "model_module_version": "1.2.0",
          "state": {
            "_model_module": "@jupyter-widgets/base",
            "_model_module_version": "1.2.0",
            "_model_name": "LayoutModel",
            "_view_count": null,
            "_view_module": "@jupyter-widgets/base",
            "_view_module_version": "1.2.0",
            "_view_name": "LayoutView",
            "align_content": null,
            "align_items": null,
            "align_self": null,
            "border": null,
            "bottom": null,
            "display": null,
            "flex": null,
            "flex_flow": null,
            "grid_area": null,
            "grid_auto_columns": null,
            "grid_auto_flow": null,
            "grid_auto_rows": null,
            "grid_column": null,
            "grid_gap": null,
            "grid_row": null,
            "grid_template_areas": null,
            "grid_template_columns": null,
            "grid_template_rows": null,
            "height": null,
            "justify_content": null,
            "justify_items": null,
            "left": null,
            "margin": null,
            "max_height": null,
            "max_width": null,
            "min_height": null,
            "min_width": null,
            "object_fit": null,
            "object_position": null,
            "order": null,
            "overflow": null,
            "overflow_x": null,
            "overflow_y": null,
            "padding": null,
            "right": null,
            "top": null,
            "visibility": null,
            "width": null
          }
        },
        "bd9c855abf864cce984a452e5cef9fdc": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "ToggleButtonModel",
          "model_module_version": "1.5.0",
          "state": {
            "_dom_classes": [],
            "_model_module": "@jupyter-widgets/controls",
            "_model_module_version": "1.5.0",
            "_model_name": "ToggleButtonModel",
            "_view_count": null,
            "_view_module": "@jupyter-widgets/controls",
            "_view_module_version": "1.5.0",
            "_view_name": "ToggleButtonView",
            "button_style": "",
            "description": "",
            "description_tooltip": null,
            "disabled": false,
            "icon": "wrench",
            "layout": "IPY_MODEL_5e73314357d44e20a146627363017999",
            "style": "IPY_MODEL_7c5f0936b4b14509b5a81a17f27eea9c",
            "tooltip": "Toolbar",
            "value": false
          }
        },
        "bb356518a16e4a35a0af32e55677bfb7": {
          "model_module": "@jupyter-widgets/base",
          "model_name": "LayoutModel",
          "model_module_version": "1.2.0",
          "state": {
            "_model_module": "@jupyter-widgets/base",
            "_model_module_version": "1.2.0",
            "_model_name": "LayoutModel",
            "_view_count": null,
            "_view_module": "@jupyter-widgets/base",
            "_view_module_version": "1.2.0",
            "_view_name": "LayoutView",
            "align_content": null,
            "align_items": null,
            "align_self": null,
            "border": null,
            "bottom": null,
            "display": null,
            "flex": null,
            "flex_flow": null,
            "grid_area": null,
            "grid_auto_columns": null,
            "grid_auto_flow": null,
            "grid_auto_rows": null,
            "grid_column": null,
            "grid_gap": null,
            "grid_row": null,
            "grid_template_areas": null,
            "grid_template_columns": null,
            "grid_template_rows": null,
            "height": null,
            "justify_content": null,
            "justify_items": null,
            "left": null,
            "margin": null,
            "max_height": null,
            "max_width": null,
            "min_height": null,
            "min_width": null,
            "object_fit": null,
            "object_position": null,
            "order": null,
            "overflow": null,
            "overflow_x": null,
            "overflow_y": null,
            "padding": null,
            "right": null,
            "top": null,
            "visibility": null,
            "width": null
          }
        },
        "ca05c45b373343df83a91310742ee151": {
          "model_module": "@jupyter-widgets/base",
          "model_name": "LayoutModel",
          "model_module_version": "1.2.0",
          "state": {
            "_model_module": "@jupyter-widgets/base",
            "_model_module_version": "1.2.0",
            "_model_name": "LayoutModel",
            "_view_count": null,
            "_view_module": "@jupyter-widgets/base",
            "_view_module_version": "1.2.0",
            "_view_name": "LayoutView",
            "align_content": null,
            "align_items": null,
            "align_self": null,
            "border": null,
            "bottom": null,
            "display": null,
            "flex": null,
            "flex_flow": null,
            "grid_area": null,
            "grid_auto_columns": null,
            "grid_auto_flow": null,
            "grid_auto_rows": null,
            "grid_column": null,
            "grid_gap": null,
            "grid_row": null,
            "grid_template_areas": null,
            "grid_template_columns": null,
            "grid_template_rows": null,
            "height": null,
            "justify_content": null,
            "justify_items": null,
            "left": null,
            "margin": null,
            "max_height": null,
            "max_width": null,
            "min_height": null,
            "min_width": null,
            "object_fit": null,
            "object_position": null,
            "order": null,
            "overflow": null,
            "overflow_x": null,
            "overflow_y": null,
            "padding": null,
            "right": null,
            "top": null,
            "visibility": null,
            "width": null
          }
        },
        "e37b057cf059413ba3f328dd8eec43bd": {
          "model_module": "@jupyter-widgets/base",
          "model_name": "LayoutModel",
          "model_module_version": "1.2.0",
          "state": {
            "_model_module": "@jupyter-widgets/base",
            "_model_module_version": "1.2.0",
            "_model_name": "LayoutModel",
            "_view_count": null,
            "_view_module": "@jupyter-widgets/base",
            "_view_module_version": "1.2.0",
            "_view_name": "LayoutView",
            "align_content": null,
            "align_items": null,
            "align_self": null,
            "border": null,
            "bottom": null,
            "display": null,
            "flex": null,
            "flex_flow": null,
            "grid_area": null,
            "grid_auto_columns": null,
            "grid_auto_flow": null,
            "grid_auto_rows": null,
            "grid_column": null,
            "grid_gap": null,
            "grid_row": null,
            "grid_template_areas": null,
            "grid_template_columns": null,
            "grid_template_rows": null,
            "height": "28px",
            "justify_content": null,
            "justify_items": null,
            "left": null,
            "margin": null,
            "max_height": null,
            "max_width": null,
            "min_height": null,
            "min_width": null,
            "object_fit": null,
            "object_position": null,
            "order": null,
            "overflow": null,
            "overflow_x": null,
            "overflow_y": null,
            "padding": "0px 0px 0px 4px",
            "right": null,
            "top": null,
            "visibility": null,
            "width": "28px"
          }
        },
        "f34a43befc8f43f79a1946cb75b4ca9f": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "DescriptionStyleModel",
          "model_module_version": "1.5.0",
          "state": {
            "_model_module": "@jupyter-widgets/controls",
            "_model_module_version": "1.5.0",
            "_model_name": "DescriptionStyleModel",
            "_view_count": null,
            "_view_module": "@jupyter-widgets/base",
            "_view_module_version": "1.2.0",
            "_view_name": "StyleView",
            "description_width": ""
          }
        },
        "5e73314357d44e20a146627363017999": {
          "model_module": "@jupyter-widgets/base",
          "model_name": "LayoutModel",
          "model_module_version": "1.2.0",
          "state": {
            "_model_module": "@jupyter-widgets/base",
            "_model_module_version": "1.2.0",
            "_model_name": "LayoutModel",
            "_view_count": null,
            "_view_module": "@jupyter-widgets/base",
            "_view_module_version": "1.2.0",
            "_view_name": "LayoutView",
            "align_content": null,
            "align_items": null,
            "align_self": null,
            "border": null,
            "bottom": null,
            "display": null,
            "flex": null,
            "flex_flow": null,
            "grid_area": null,
            "grid_auto_columns": null,
            "grid_auto_flow": null,
            "grid_auto_rows": null,
            "grid_column": null,
            "grid_gap": null,
            "grid_row": null,
            "grid_template_areas": null,
            "grid_template_columns": null,
            "grid_template_rows": null,
            "height": "28px",
            "justify_content": null,
            "justify_items": null,
            "left": null,
            "margin": null,
            "max_height": null,
            "max_width": null,
            "min_height": null,
            "min_width": null,
            "object_fit": null,
            "object_position": null,
            "order": null,
            "overflow": null,
            "overflow_x": null,
            "overflow_y": null,
            "padding": "0px 0px 0px 4px",
            "right": null,
            "top": null,
            "visibility": null,
            "width": "28px"
          }
        },
        "7c5f0936b4b14509b5a81a17f27eea9c": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "DescriptionStyleModel",
          "model_module_version": "1.5.0",
          "state": {
            "_model_module": "@jupyter-widgets/controls",
            "_model_module_version": "1.5.0",
            "_model_name": "DescriptionStyleModel",
            "_view_count": null,
            "_view_module": "@jupyter-widgets/base",
            "_view_module_version": "1.2.0",
            "_view_name": "StyleView",
            "description_width": ""
          }
        },
        "1a3adc7ccad6447f8fb816ee5106e6b4": {
          "model_module": "jupyter-leaflet",
          "model_name": "LeafletMapModel",
          "model_module_version": "^0.16.0",
          "state": {
            "_dom_classes": [],
            "_model_module": "jupyter-leaflet",
            "_model_module_version": "^0.16.0",
            "_model_name": "LeafletMapModel",
            "_view_count": null,
            "_view_module": "jupyter-leaflet",
            "_view_module_version": "^0.16.0",
            "_view_name": "LeafletMapView",
            "bottom": 10074,
            "bounce_at_zoom_limits": true,
            "box_zoom": true,
            "center": [
              -32.805744732906874,
              -66.74194335937501
            ],
            "close_popup_on_click": true,
            "controls": [
              "IPY_MODEL_5b31790dcb514e15a1128796ef835d57",
              "IPY_MODEL_3ab9f1db96974b4dac8f4dc0562ed5ce",
              "IPY_MODEL_5920546670ef4d19a6bd39779669826c",
              "IPY_MODEL_2eb420c7bdad43779aa7046635d02eed",
              "IPY_MODEL_76fe005c690d432081784273b2921c3c",
              "IPY_MODEL_892cdf9efe974091b785253bd46d714e",
              "IPY_MODEL_a330857a40224474a5a07efe809dcdc9",
              "IPY_MODEL_136a88bf787f423db12575fb6aa775b6",
              "IPY_MODEL_b13ce4c3442245b1b0cc73dd07052848",
              "IPY_MODEL_d8896b2d19054d8ea3d79fc9e31bd1a7"
            ],
            "crs": {
              "name": "EPSG3857",
              "custom": false
            },
            "default_style": "IPY_MODEL_8ce84a9116e14ab48af2e43e94e1bb6d",
            "double_click_zoom": true,
            "dragging": true,
            "dragging_style": "IPY_MODEL_2145d96eecb74998af0be51baf138222",
            "east": -55.61279296875001,
            "fullscreen": false,
            "inertia": true,
            "inertia_deceleration": 3000,
            "inertia_max_speed": 1500,
            "interpolation": "bilinear",
            "keyboard": true,
            "keyboard_pan_offset": 80,
            "keyboard_zoom_offset": 1,
            "layers": [
              "IPY_MODEL_1c741c53e3564381b91341067d6fad66",
              "IPY_MODEL_b038488e19c6478dbcc55bbcc5c78139",
              "IPY_MODEL_08391c19f7dd4e9c8438c11fe087bf61"
            ],
            "layout": "IPY_MODEL_f1e148da0d9548c988749f982242c14c",
            "left": 4648,
            "max_zoom": 24,
            "min_zoom": 1,
            "modisdate": "2022-05-31",
            "north": -27.098253906137884,
            "options": [
              "bounce_at_zoom_limits",
              "box_zoom",
              "center",
              "close_popup_on_click",
              "double_click_zoom",
              "dragging",
              "fullscreen",
              "inertia",
              "inertia_deceleration",
              "inertia_max_speed",
              "interpolation",
              "keyboard",
              "keyboard_pan_offset",
              "keyboard_zoom_offset",
              "max_zoom",
              "min_zoom",
              "prefer_canvas",
              "scroll_wheel_zoom",
              "tap",
              "tap_tolerance",
              "touch_zoom",
              "world_copy_jump",
              "zoom",
              "zoom_animation_threshold",
              "zoom_delta",
              "zoom_snap",
              "zoom_start"
            ],
            "prefer_canvas": false,
            "right": 5661,
            "scroll_wheel_zoom": true,
            "south": -38.169114135560854,
            "style": "IPY_MODEL_8ce84a9116e14ab48af2e43e94e1bb6d",
            "tap": true,
            "tap_tolerance": 15,
            "top": 9474,
            "touch_zoom": true,
            "west": -77.87109375,
            "window_url": "https://yltn1k17ltc-496ff2e9c6d22116-0-colab.googleusercontent.com/outputframe.html?vrz=colab-20220531-060047-RC00_451971023",
            "world_copy_jump": false,
            "zoom": 6,
            "zoom_animation_threshold": 4,
            "zoom_delta": 1,
            "zoom_snap": 1,
            "zoom_start": 12,
            "_dragging": false
          }
        },
        "5b31790dcb514e15a1128796ef835d57": {
          "model_module": "jupyter-leaflet",
          "model_name": "LeafletWidgetControlModel",
          "model_module_version": "^0.16.0",
          "state": {
            "_model_module": "jupyter-leaflet",
            "_model_module_version": "^0.16.0",
            "_model_name": "LeafletWidgetControlModel",
            "_view_count": null,
            "_view_module": "jupyter-leaflet",
            "_view_module_version": "^0.16.0",
            "_view_name": "LeafletWidgetControlView",
            "max_height": null,
            "max_width": null,
            "min_height": null,
            "min_width": null,
            "options": [
              "position",
              "transparent_bg"
            ],
            "position": "topleft",
            "transparent_bg": false,
            "widget": "IPY_MODEL_da7ecef549ea45ad9a69444d9ffd1817"
          }
        },
        "3ab9f1db96974b4dac8f4dc0562ed5ce": {
          "model_module": "jupyter-leaflet",
          "model_name": "LeafletZoomControlModel",
          "model_module_version": "^0.16.0",
          "state": {
            "_model_module": "jupyter-leaflet",
            "_model_module_version": "^0.16.0",
            "_model_name": "LeafletZoomControlModel",
            "_view_count": null,
            "_view_module": "jupyter-leaflet",
            "_view_module_version": "^0.16.0",
            "_view_name": "LeafletZoomControlView",
            "options": [
              "position",
              "zoom_in_text",
              "zoom_in_title",
              "zoom_out_text",
              "zoom_out_title"
            ],
            "position": "topleft",
            "zoom_in_text": "+",
            "zoom_in_title": "Zoom in",
            "zoom_out_text": "-",
            "zoom_out_title": "Zoom out"
          }
        },
        "5920546670ef4d19a6bd39779669826c": {
          "model_module": "jupyter-leaflet",
          "model_name": "LeafletScaleControlModel",
          "model_module_version": "^0.16.0",
          "state": {
            "_model_module": "jupyter-leaflet",
            "_model_module_version": "^0.16.0",
            "_model_name": "LeafletScaleControlModel",
            "_view_count": null,
            "_view_module": "jupyter-leaflet",
            "_view_module_version": "^0.16.0",
            "_view_name": "LeafletScaleControlView",
            "imperial": true,
            "max_width": 100,
            "metric": true,
            "options": [
              "imperial",
              "max_width",
              "metric",
              "position",
              "update_when_idle"
            ],
            "position": "bottomleft",
            "update_when_idle": false
          }
        },
        "2eb420c7bdad43779aa7046635d02eed": {
          "model_module": "jupyter-leaflet",
          "model_name": "LeafletFullScreenControlModel",
          "model_module_version": "^0.16.0",
          "state": {
            "_model_module": "jupyter-leaflet",
            "_model_module_version": "^0.16.0",
            "_model_name": "LeafletFullScreenControlModel",
            "_view_count": null,
            "_view_module": "jupyter-leaflet",
            "_view_module_version": "^0.16.0",
            "_view_name": "LeafletFullScreenControlView",
            "options": [
              "position"
            ],
            "position": "topleft"
          }
        },
        "76fe005c690d432081784273b2921c3c": {
          "model_module": "jupyter-leaflet",
          "model_name": "LeafletMeasureControlModel",
          "model_module_version": "^0.16.0",
          "state": {
            "_custom_units": {},
            "_model_module": "jupyter-leaflet",
            "_model_module_version": "^0.16.0",
            "_model_name": "LeafletMeasureControlModel",
            "_view_count": null,
            "_view_module": "jupyter-leaflet",
            "_view_module_version": "^0.16.0",
            "_view_name": "LeafletMeasureControlView",
            "active_color": "orange",
            "capture_z_index": 10000,
            "completed_color": "#C8F2BE",
            "options": [
              "active_color",
              "capture_z_index",
              "completed_color",
              "popup_options",
              "position",
              "primary_area_unit",
              "primary_length_unit",
              "secondary_area_unit",
              "secondary_length_unit"
            ],
            "popup_options": {
              "className": "leaflet-measure-resultpopup",
              "autoPanPadding": [
                10,
                10
              ]
            },
            "position": "bottomleft",
            "primary_area_unit": "acres",
            "primary_length_unit": "kilometers",
            "secondary_area_unit": null,
            "secondary_length_unit": null
          }
        },
        "892cdf9efe974091b785253bd46d714e": {
          "model_module": "jupyter-leaflet",
          "model_name": "LeafletAttributionControlModel",
          "model_module_version": "^0.16.0",
          "state": {
            "_model_module": "jupyter-leaflet",
            "_model_module_version": "^0.16.0",
            "_model_name": "LeafletAttributionControlModel",
            "_view_count": null,
            "_view_module": "jupyter-leaflet",
            "_view_module_version": "^0.16.0",
            "_view_name": "LeafletAttributionControlView",
            "options": [
              "position",
              "prefix"
            ],
            "position": "bottomright",
            "prefix": "ipyleaflet"
          }
        },
        "a330857a40224474a5a07efe809dcdc9": {
          "model_module": "jupyter-leaflet",
          "model_name": "LeafletDrawControlModel",
          "model_module_version": "^0.16.0",
          "state": {
            "_model_module": "jupyter-leaflet",
            "_model_module_version": "^0.16.0",
            "_model_name": "LeafletDrawControlModel",
            "_view_count": null,
            "_view_module": "jupyter-leaflet",
            "_view_module_version": "^0.16.0",
            "_view_name": "LeafletDrawControlView",
            "circle": {
              "shapeOptions": {
                "color": "#3388ff"
              }
            },
            "circlemarker": {},
            "data": [],
            "edit": true,
            "marker": {
              "shapeOptions": {
                "color": "#3388ff"
              }
            },
            "options": [
              "position"
            ],
            "polygon": {
              "shapeOptions": {}
            },
            "polyline": {
              "shapeOptions": {}
            },
            "position": "topleft",
            "rectangle": {
              "shapeOptions": {
                "color": "#3388ff"
              }
            },
            "remove": true
          }
        },
        "136a88bf787f423db12575fb6aa775b6": {
          "model_module": "jupyter-leaflet",
          "model_name": "LeafletWidgetControlModel",
          "model_module_version": "^0.16.0",
          "state": {
            "_model_module": "jupyter-leaflet",
            "_model_module_version": "^0.16.0",
            "_model_name": "LeafletWidgetControlModel",
            "_view_count": null,
            "_view_module": "jupyter-leaflet",
            "_view_module_version": "^0.16.0",
            "_view_name": "LeafletWidgetControlView",
            "max_height": null,
            "max_width": null,
            "min_height": null,
            "min_width": null,
            "options": [
              "position",
              "transparent_bg"
            ],
            "position": "topright",
            "transparent_bg": false,
            "widget": "IPY_MODEL_00d6feb27683497f8936bfdf55bae6d6"
          }
        },
        "b13ce4c3442245b1b0cc73dd07052848": {
          "model_module": "jupyter-leaflet",
          "model_name": "LeafletWidgetControlModel",
          "model_module_version": "^0.16.0",
          "state": {
            "_model_module": "jupyter-leaflet",
            "_model_module_version": "^0.16.0",
            "_model_name": "LeafletWidgetControlModel",
            "_view_count": null,
            "_view_module": "jupyter-leaflet",
            "_view_module_version": "^0.16.0",
            "_view_name": "LeafletWidgetControlView",
            "max_height": null,
            "max_width": null,
            "min_height": null,
            "min_width": null,
            "options": [
              "position",
              "transparent_bg"
            ],
            "position": "bottomright",
            "transparent_bg": false,
            "widget": "IPY_MODEL_6abac71f149d4f508e123501340172b9"
          }
        },
        "d8896b2d19054d8ea3d79fc9e31bd1a7": {
          "model_module": "jupyter-leaflet",
          "model_name": "LeafletLayersControlModel",
          "model_module_version": "^0.16.0",
          "state": {
            "_model_module": "jupyter-leaflet",
            "_model_module_version": "^0.16.0",
            "_model_name": "LeafletLayersControlModel",
            "_view_count": null,
            "_view_module": "jupyter-leaflet",
            "_view_module_version": "^0.16.0",
            "_view_name": "LeafletLayersControlView",
            "options": [
              "position"
            ],
            "position": "topright"
          }
        },
        "8ce84a9116e14ab48af2e43e94e1bb6d": {
          "model_module": "jupyter-leaflet",
          "model_name": "LeafletMapStyleModel",
          "model_module_version": "^0.16.0",
          "state": {
            "_model_module": "jupyter-leaflet",
            "_model_module_version": "^0.16.0",
            "_model_name": "LeafletMapStyleModel",
            "_view_count": null,
            "_view_module": "@jupyter-widgets/base",
            "_view_module_version": "1.2.0",
            "_view_name": "StyleView",
            "cursor": "grab"
          }
        },
        "2145d96eecb74998af0be51baf138222": {
          "model_module": "jupyter-leaflet",
          "model_name": "LeafletMapStyleModel",
          "model_module_version": "^0.16.0",
          "state": {
            "_model_module": "jupyter-leaflet",
            "_model_module_version": "^0.16.0",
            "_model_name": "LeafletMapStyleModel",
            "_view_count": null,
            "_view_module": "@jupyter-widgets/base",
            "_view_module_version": "1.2.0",
            "_view_name": "StyleView",
            "cursor": "move"
          }
        },
        "1c741c53e3564381b91341067d6fad66": {
          "model_module": "jupyter-leaflet",
          "model_name": "LeafletTileLayerModel",
          "model_module_version": "^0.16.0",
          "state": {
            "_model_module": "jupyter-leaflet",
            "_model_module_version": "^0.16.0",
            "_model_name": "LeafletTileLayerModel",
            "_view_count": null,
            "_view_module": "jupyter-leaflet",
            "_view_module_version": "^0.16.0",
            "_view_name": "LeafletTileLayerView",
            "attribution": "&copy; <a href=\"https://www.openstreetmap.org/copyright\">OpenStreetMap</a> contributors",
            "base": true,
            "bottom": true,
            "bounds": null,
            "detect_retina": false,
            "loading": false,
            "max_native_zoom": 18,
            "max_zoom": 19,
            "min_native_zoom": 0,
            "min_zoom": 1,
            "name": "OpenStreetMap.Mapnik",
            "no_wrap": false,
            "opacity": 1,
            "options": [
              "attribution",
              "bounds",
              "detect_retina",
              "max_native_zoom",
              "max_zoom",
              "min_native_zoom",
              "min_zoom",
              "no_wrap",
              "tile_size",
              "tms"
            ],
            "popup": null,
            "popup_max_height": null,
            "popup_max_width": 300,
            "popup_min_width": 50,
            "show_loading": false,
            "tile_size": 256,
            "tms": false,
            "url": "https://a.tile.openstreetmap.org/{z}/{x}/{y}.png",
            "visible": true
          }
        },
        "08391c19f7dd4e9c8438c11fe087bf61": {
          "model_module": "jupyter-leaflet",
          "model_name": "LeafletTileLayerModel",
          "model_module_version": "^0.16.0",
          "state": {
            "_model_module": "jupyter-leaflet",
            "_model_module_version": "^0.16.0",
            "_model_name": "LeafletTileLayerModel",
            "_view_count": null,
            "_view_module": "jupyter-leaflet",
            "_view_module_version": "^0.16.0",
            "_view_name": "LeafletTileLayerView",
            "attribution": "Google Earth Engine",
            "base": false,
            "bottom": true,
            "bounds": null,
            "detect_retina": false,
            "loading": false,
            "max_native_zoom": 18,
            "max_zoom": 24,
            "min_native_zoom": 0,
            "min_zoom": 0,
            "name": "NBR",
            "no_wrap": false,
            "opacity": 1,
            "options": [
              "attribution",
              "bounds",
              "detect_retina",
              "max_native_zoom",
              "max_zoom",
              "min_native_zoom",
              "min_zoom",
              "no_wrap",
              "tile_size",
              "tms"
            ],
            "popup": null,
            "popup_max_height": null,
            "popup_max_width": 300,
            "popup_min_width": 50,
            "show_loading": false,
            "tile_size": 256,
            "tms": false,
            "url": "https://earthengine.googleapis.com/v1alpha/projects/earthengine-legacy/maps/f933a5d29c4bf3d9292427e58b91e4e1-c095f7ede57c026627aeb7b055682000/tiles/{z}/{x}/{y}",
            "visible": true
          }
        },
        "f1e148da0d9548c988749f982242c14c": {
          "model_module": "@jupyter-widgets/base",
          "model_name": "LayoutModel",
          "model_module_version": "1.2.0",
          "state": {
            "_model_module": "@jupyter-widgets/base",
            "_model_module_version": "1.2.0",
            "_model_name": "LayoutModel",
            "_view_count": null,
            "_view_module": "@jupyter-widgets/base",
            "_view_module_version": "1.2.0",
            "_view_name": "LayoutView",
            "align_content": null,
            "align_items": null,
            "align_self": null,
            "border": null,
            "bottom": null,
            "display": null,
            "flex": null,
            "flex_flow": null,
            "grid_area": null,
            "grid_auto_columns": null,
            "grid_auto_flow": null,
            "grid_auto_rows": null,
            "grid_column": null,
            "grid_gap": null,
            "grid_row": null,
            "grid_template_areas": null,
            "grid_template_columns": null,
            "grid_template_rows": null,
            "height": "600px",
            "justify_content": null,
            "justify_items": null,
            "left": null,
            "margin": null,
            "max_height": null,
            "max_width": null,
            "min_height": null,
            "min_width": null,
            "object_fit": null,
            "object_position": null,
            "order": null,
            "overflow": null,
            "overflow_x": null,
            "overflow_y": null,
            "padding": null,
            "right": null,
            "top": null,
            "visibility": null,
            "width": null
          }
        },
        "86b3976f7cc3407885ad685b08f8a537": {
          "model_module": "jupyter-leaflet",
          "model_name": "LeafletMapStyleModel",
          "model_module_version": "^0.16.0",
          "state": {
            "_model_module": "jupyter-leaflet",
            "_model_module_version": "^0.16.0",
            "_model_name": "LeafletMapStyleModel",
            "_view_count": null,
            "_view_module": "@jupyter-widgets/base",
            "_view_module_version": "1.2.0",
            "_view_name": "StyleView",
            "cursor": "grab"
          }
        },
        "da7ecef549ea45ad9a69444d9ffd1817": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "HBoxModel",
          "model_module_version": "1.5.0",
          "state": {
            "_dom_classes": [],
            "_model_module": "@jupyter-widgets/controls",
            "_model_module_version": "1.5.0",
            "_model_name": "HBoxModel",
            "_view_count": null,
            "_view_module": "@jupyter-widgets/controls",
            "_view_module_version": "1.5.0",
            "_view_name": "HBoxView",
            "box_style": "",
            "children": [
              "IPY_MODEL_a2ae468ae4d2480f80067f878d107b22"
            ],
            "layout": "IPY_MODEL_1b33ea42a82e45d8b0b432f3c9050ddd"
          }
        },
        "00d6feb27683497f8936bfdf55bae6d6": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "VBoxModel",
          "model_module_version": "1.5.0",
          "state": {
            "_dom_classes": [],
            "_model_module": "@jupyter-widgets/controls",
            "_model_module_version": "1.5.0",
            "_model_name": "VBoxModel",
            "_view_count": null,
            "_view_module": "@jupyter-widgets/controls",
            "_view_module_version": "1.5.0",
            "_view_name": "VBoxView",
            "box_style": "",
            "children": [
              "IPY_MODEL_7e87bd9d5f42468f8fe24d574115478e"
            ],
            "layout": "IPY_MODEL_dc8b0877d76940e9862872d6346812d4"
          }
        },
        "6abac71f149d4f508e123501340172b9": {
          "model_module": "@jupyter-widgets/output",
          "model_name": "OutputModel",
          "model_module_version": "1.0.0",
          "state": {
            "_dom_classes": [],
            "_model_module": "@jupyter-widgets/output",
            "_model_module_version": "1.0.0",
            "_model_name": "OutputModel",
            "_view_count": null,
            "_view_module": "@jupyter-widgets/output",
            "_view_module_version": "1.0.0",
            "_view_name": "OutputView",
            "layout": "IPY_MODEL_d05c9d14846348c7a8116ca12deb31c5",
            "msg_id": "",
            "outputs": [
              {
                "output_type": "display_data",
                "data": {
                  "text/plain": "<Figure size 432x28.8 with 1 Axes>",
                  "image/png": "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\n"
                },
                "metadata": {
                  "needs_background": "light"
                }
              }
            ]
          }
        },
        "a2ae468ae4d2480f80067f878d107b22": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "ToggleButtonModel",
          "model_module_version": "1.5.0",
          "state": {
            "_dom_classes": [],
            "_model_module": "@jupyter-widgets/controls",
            "_model_module_version": "1.5.0",
            "_model_name": "ToggleButtonModel",
            "_view_count": null,
            "_view_module": "@jupyter-widgets/controls",
            "_view_module_version": "1.5.0",
            "_view_name": "ToggleButtonView",
            "button_style": "",
            "description": "",
            "description_tooltip": null,
            "disabled": false,
            "icon": "globe",
            "layout": "IPY_MODEL_7c58f40bc16e45aaaea7d5c5e45c679d",
            "style": "IPY_MODEL_2c9a4bb72ac4489eb01fea9bbe153fae",
            "tooltip": "Search location/data",
            "value": false
          }
        },
        "1b33ea42a82e45d8b0b432f3c9050ddd": {
          "model_module": "@jupyter-widgets/base",
          "model_name": "LayoutModel",
          "model_module_version": "1.2.0",
          "state": {
            "_model_module": "@jupyter-widgets/base",
            "_model_module_version": "1.2.0",
            "_model_name": "LayoutModel",
            "_view_count": null,
            "_view_module": "@jupyter-widgets/base",
            "_view_module_version": "1.2.0",
            "_view_name": "LayoutView",
            "align_content": null,
            "align_items": null,
            "align_self": null,
            "border": null,
            "bottom": null,
            "display": null,
            "flex": null,
            "flex_flow": null,
            "grid_area": null,
            "grid_auto_columns": null,
            "grid_auto_flow": null,
            "grid_auto_rows": null,
            "grid_column": null,
            "grid_gap": null,
            "grid_row": null,
            "grid_template_areas": null,
            "grid_template_columns": null,
            "grid_template_rows": null,
            "height": null,
            "justify_content": null,
            "justify_items": null,
            "left": null,
            "margin": null,
            "max_height": null,
            "max_width": null,
            "min_height": null,
            "min_width": null,
            "object_fit": null,
            "object_position": null,
            "order": null,
            "overflow": null,
            "overflow_x": null,
            "overflow_y": null,
            "padding": null,
            "right": null,
            "top": null,
            "visibility": null,
            "width": null
          }
        },
        "7e87bd9d5f42468f8fe24d574115478e": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "ToggleButtonModel",
          "model_module_version": "1.5.0",
          "state": {
            "_dom_classes": [],
            "_model_module": "@jupyter-widgets/controls",
            "_model_module_version": "1.5.0",
            "_model_name": "ToggleButtonModel",
            "_view_count": null,
            "_view_module": "@jupyter-widgets/controls",
            "_view_module_version": "1.5.0",
            "_view_name": "ToggleButtonView",
            "button_style": "",
            "description": "",
            "description_tooltip": null,
            "disabled": false,
            "icon": "wrench",
            "layout": "IPY_MODEL_25552fc09e2e437ebd432f5956f777d4",
            "style": "IPY_MODEL_acbaa504713c4564b60bf1540f81f4aa",
            "tooltip": "Toolbar",
            "value": false
          }
        },
        "dc8b0877d76940e9862872d6346812d4": {
          "model_module": "@jupyter-widgets/base",
          "model_name": "LayoutModel",
          "model_module_version": "1.2.0",
          "state": {
            "_model_module": "@jupyter-widgets/base",
            "_model_module_version": "1.2.0",
            "_model_name": "LayoutModel",
            "_view_count": null,
            "_view_module": "@jupyter-widgets/base",
            "_view_module_version": "1.2.0",
            "_view_name": "LayoutView",
            "align_content": null,
            "align_items": null,
            "align_self": null,
            "border": null,
            "bottom": null,
            "display": null,
            "flex": null,
            "flex_flow": null,
            "grid_area": null,
            "grid_auto_columns": null,
            "grid_auto_flow": null,
            "grid_auto_rows": null,
            "grid_column": null,
            "grid_gap": null,
            "grid_row": null,
            "grid_template_areas": null,
            "grid_template_columns": null,
            "grid_template_rows": null,
            "height": null,
            "justify_content": null,
            "justify_items": null,
            "left": null,
            "margin": null,
            "max_height": null,
            "max_width": null,
            "min_height": null,
            "min_width": null,
            "object_fit": null,
            "object_position": null,
            "order": null,
            "overflow": null,
            "overflow_x": null,
            "overflow_y": null,
            "padding": null,
            "right": null,
            "top": null,
            "visibility": null,
            "width": null
          }
        },
        "d05c9d14846348c7a8116ca12deb31c5": {
          "model_module": "@jupyter-widgets/base",
          "model_name": "LayoutModel",
          "model_module_version": "1.2.0",
          "state": {
            "_model_module": "@jupyter-widgets/base",
            "_model_module_version": "1.2.0",
            "_model_name": "LayoutModel",
            "_view_count": null,
            "_view_module": "@jupyter-widgets/base",
            "_view_module_version": "1.2.0",
            "_view_name": "LayoutView",
            "align_content": null,
            "align_items": null,
            "align_self": null,
            "border": null,
            "bottom": null,
            "display": null,
            "flex": null,
            "flex_flow": null,
            "grid_area": null,
            "grid_auto_columns": null,
            "grid_auto_flow": null,
            "grid_auto_rows": null,
            "grid_column": null,
            "grid_gap": null,
            "grid_row": null,
            "grid_template_areas": null,
            "grid_template_columns": null,
            "grid_template_rows": null,
            "height": null,
            "justify_content": null,
            "justify_items": null,
            "left": null,
            "margin": null,
            "max_height": null,
            "max_width": null,
            "min_height": null,
            "min_width": null,
            "object_fit": null,
            "object_position": null,
            "order": null,
            "overflow": null,
            "overflow_x": null,
            "overflow_y": null,
            "padding": null,
            "right": null,
            "top": null,
            "visibility": null,
            "width": null
          }
        },
        "7c58f40bc16e45aaaea7d5c5e45c679d": {
          "model_module": "@jupyter-widgets/base",
          "model_name": "LayoutModel",
          "model_module_version": "1.2.0",
          "state": {
            "_model_module": "@jupyter-widgets/base",
            "_model_module_version": "1.2.0",
            "_model_name": "LayoutModel",
            "_view_count": null,
            "_view_module": "@jupyter-widgets/base",
            "_view_module_version": "1.2.0",
            "_view_name": "LayoutView",
            "align_content": null,
            "align_items": null,
            "align_self": null,
            "border": null,
            "bottom": null,
            "display": null,
            "flex": null,
            "flex_flow": null,
            "grid_area": null,
            "grid_auto_columns": null,
            "grid_auto_flow": null,
            "grid_auto_rows": null,
            "grid_column": null,
            "grid_gap": null,
            "grid_row": null,
            "grid_template_areas": null,
            "grid_template_columns": null,
            "grid_template_rows": null,
            "height": "28px",
            "justify_content": null,
            "justify_items": null,
            "left": null,
            "margin": null,
            "max_height": null,
            "max_width": null,
            "min_height": null,
            "min_width": null,
            "object_fit": null,
            "object_position": null,
            "order": null,
            "overflow": null,
            "overflow_x": null,
            "overflow_y": null,
            "padding": "0px 0px 0px 4px",
            "right": null,
            "top": null,
            "visibility": null,
            "width": "28px"
          }
        },
        "2c9a4bb72ac4489eb01fea9bbe153fae": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "DescriptionStyleModel",
          "model_module_version": "1.5.0",
          "state": {
            "_model_module": "@jupyter-widgets/controls",
            "_model_module_version": "1.5.0",
            "_model_name": "DescriptionStyleModel",
            "_view_count": null,
            "_view_module": "@jupyter-widgets/base",
            "_view_module_version": "1.2.0",
            "_view_name": "StyleView",
            "description_width": ""
          }
        },
        "25552fc09e2e437ebd432f5956f777d4": {
          "model_module": "@jupyter-widgets/base",
          "model_name": "LayoutModel",
          "model_module_version": "1.2.0",
          "state": {
            "_model_module": "@jupyter-widgets/base",
            "_model_module_version": "1.2.0",
            "_model_name": "LayoutModel",
            "_view_count": null,
            "_view_module": "@jupyter-widgets/base",
            "_view_module_version": "1.2.0",
            "_view_name": "LayoutView",
            "align_content": null,
            "align_items": null,
            "align_self": null,
            "border": null,
            "bottom": null,
            "display": null,
            "flex": null,
            "flex_flow": null,
            "grid_area": null,
            "grid_auto_columns": null,
            "grid_auto_flow": null,
            "grid_auto_rows": null,
            "grid_column": null,
            "grid_gap": null,
            "grid_row": null,
            "grid_template_areas": null,
            "grid_template_columns": null,
            "grid_template_rows": null,
            "height": "28px",
            "justify_content": null,
            "justify_items": null,
            "left": null,
            "margin": null,
            "max_height": null,
            "max_width": null,
            "min_height": null,
            "min_width": null,
            "object_fit": null,
            "object_position": null,
            "order": null,
            "overflow": null,
            "overflow_x": null,
            "overflow_y": null,
            "padding": "0px 0px 0px 4px",
            "right": null,
            "top": null,
            "visibility": null,
            "width": "28px"
          }
        },
        "acbaa504713c4564b60bf1540f81f4aa": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "DescriptionStyleModel",
          "model_module_version": "1.5.0",
          "state": {
            "_model_module": "@jupyter-widgets/controls",
            "_model_module_version": "1.5.0",
            "_model_name": "DescriptionStyleModel",
            "_view_count": null,
            "_view_module": "@jupyter-widgets/base",
            "_view_module_version": "1.2.0",
            "_view_name": "StyleView",
            "description_width": ""
          }
        },
        "e6d667e574ab4414914868e6ea132217": {
          "model_module": "jupyter-leaflet",
          "model_name": "LeafletMapModel",
          "model_module_version": "^0.16.0",
          "state": {
            "_dom_classes": [],
            "_model_module": "jupyter-leaflet",
            "_model_module_version": "^0.16.0",
            "_model_name": "LeafletMapModel",
            "_view_count": null,
            "_view_module": "jupyter-leaflet",
            "_view_module_version": "^0.16.0",
            "_view_name": "LeafletMapView",
            "bottom": 754,
            "bounce_at_zoom_limits": true,
            "box_zoom": true,
            "center": [
              20,
              0
            ],
            "close_popup_on_click": true,
            "controls": [
              "IPY_MODEL_66dc14da82434e83b0f609b3cf5221ea",
              "IPY_MODEL_86d800192d3b48fc8122e5047c0dd977",
              "IPY_MODEL_94a41859cf444b109069f66e94f55cec",
              "IPY_MODEL_b0f2a16cd9564a23b50e05bdafdf1b88",
              "IPY_MODEL_23a7ad02f5de49bc82c3e8a1b20d99e5",
              "IPY_MODEL_35af344e70cf47bda70a4ca62d976693",
              "IPY_MODEL_1eebec2d5a384b9cb83e0e6b4d33526c",
              "IPY_MODEL_fb3b15a863074b64bf47a57a588cdd89",
              "IPY_MODEL_05783fdea9e1465ab66465c534aff7fe",
              "IPY_MODEL_6e97c2381e1240e187391a96959ae748"
            ],
            "crs": {
              "name": "EPSG3857",
              "custom": false
            },
            "default_style": "IPY_MODEL_32a7f636fe01490bb0d42fd70d25a170",
            "double_click_zoom": true,
            "dragging": true,
            "dragging_style": "IPY_MODEL_bcdec957c4204a74a7d39b2309a0fc37",
            "east": 178.24218750000003,
            "fullscreen": false,
            "inertia": true,
            "inertia_deceleration": 3000,
            "inertia_max_speed": 1500,
            "interpolation": "bilinear",
            "keyboard": true,
            "keyboard_pan_offset": 80,
            "keyboard_zoom_offset": 1,
            "layers": [
              "IPY_MODEL_6a0845c96a8f490e897c601c2e989f8f",
              "IPY_MODEL_b038488e19c6478dbcc55bbcc5c78139",
              "IPY_MODEL_c9698e70d3714d978dcdd9bfd826bfaa"
            ],
            "layout": "IPY_MODEL_a81c733bb3ed4781ac7319042edad82d",
            "left": 6,
            "max_zoom": 24,
            "min_zoom": 1,
            "modisdate": "2022-05-31",
            "north": 77.31251993823143,
            "options": [
              "bounce_at_zoom_limits",
              "box_zoom",
              "center",
              "close_popup_on_click",
              "double_click_zoom",
              "dragging",
              "fullscreen",
              "inertia",
              "inertia_deceleration",
              "inertia_max_speed",
              "interpolation",
              "keyboard",
              "keyboard_pan_offset",
              "keyboard_zoom_offset",
              "max_zoom",
              "min_zoom",
              "prefer_canvas",
              "scroll_wheel_zoom",
              "tap",
              "tap_tolerance",
              "touch_zoom",
              "world_copy_jump",
              "zoom",
              "zoom_animation_threshold",
              "zoom_delta",
              "zoom_snap",
              "zoom_start"
            ],
            "prefer_canvas": false,
            "right": 1019,
            "scroll_wheel_zoom": true,
            "south": -64.47279382008165,
            "style": "IPY_MODEL_cf380d35e0d540629e7d1f8f6e3834bb",
            "tap": true,
            "tap_tolerance": 15,
            "top": 154,
            "touch_zoom": true,
            "west": -177.89062500000003,
            "window_url": "https://yltn1k17ltc-496ff2e9c6d22116-0-colab.googleusercontent.com/outputframe.html?vrz=colab-20220531-060047-RC00_451971023",
            "world_copy_jump": false,
            "zoom": 2,
            "zoom_animation_threshold": 4,
            "zoom_delta": 1,
            "zoom_snap": 1,
            "zoom_start": 12
          }
        },
        "66dc14da82434e83b0f609b3cf5221ea": {
          "model_module": "jupyter-leaflet",
          "model_name": "LeafletWidgetControlModel",
          "model_module_version": "^0.16.0",
          "state": {
            "_model_module": "jupyter-leaflet",
            "_model_module_version": "^0.16.0",
            "_model_name": "LeafletWidgetControlModel",
            "_view_count": null,
            "_view_module": "jupyter-leaflet",
            "_view_module_version": "^0.16.0",
            "_view_name": "LeafletWidgetControlView",
            "max_height": null,
            "max_width": null,
            "min_height": null,
            "min_width": null,
            "options": [
              "position",
              "transparent_bg"
            ],
            "position": "topleft",
            "transparent_bg": false,
            "widget": "IPY_MODEL_4d1fbcc2d8634f00bb5a5e4dd375f593"
          }
        },
        "86d800192d3b48fc8122e5047c0dd977": {
          "model_module": "jupyter-leaflet",
          "model_name": "LeafletZoomControlModel",
          "model_module_version": "^0.16.0",
          "state": {
            "_model_module": "jupyter-leaflet",
            "_model_module_version": "^0.16.0",
            "_model_name": "LeafletZoomControlModel",
            "_view_count": null,
            "_view_module": "jupyter-leaflet",
            "_view_module_version": "^0.16.0",
            "_view_name": "LeafletZoomControlView",
            "options": [
              "position",
              "zoom_in_text",
              "zoom_in_title",
              "zoom_out_text",
              "zoom_out_title"
            ],
            "position": "topleft",
            "zoom_in_text": "+",
            "zoom_in_title": "Zoom in",
            "zoom_out_text": "-",
            "zoom_out_title": "Zoom out"
          }
        },
        "94a41859cf444b109069f66e94f55cec": {
          "model_module": "jupyter-leaflet",
          "model_name": "LeafletScaleControlModel",
          "model_module_version": "^0.16.0",
          "state": {
            "_model_module": "jupyter-leaflet",
            "_model_module_version": "^0.16.0",
            "_model_name": "LeafletScaleControlModel",
            "_view_count": null,
            "_view_module": "jupyter-leaflet",
            "_view_module_version": "^0.16.0",
            "_view_name": "LeafletScaleControlView",
            "imperial": true,
            "max_width": 100,
            "metric": true,
            "options": [
              "imperial",
              "max_width",
              "metric",
              "position",
              "update_when_idle"
            ],
            "position": "bottomleft",
            "update_when_idle": false
          }
        },
        "b0f2a16cd9564a23b50e05bdafdf1b88": {
          "model_module": "jupyter-leaflet",
          "model_name": "LeafletFullScreenControlModel",
          "model_module_version": "^0.16.0",
          "state": {
            "_model_module": "jupyter-leaflet",
            "_model_module_version": "^0.16.0",
            "_model_name": "LeafletFullScreenControlModel",
            "_view_count": null,
            "_view_module": "jupyter-leaflet",
            "_view_module_version": "^0.16.0",
            "_view_name": "LeafletFullScreenControlView",
            "options": [
              "position"
            ],
            "position": "topleft"
          }
        },
        "23a7ad02f5de49bc82c3e8a1b20d99e5": {
          "model_module": "jupyter-leaflet",
          "model_name": "LeafletMeasureControlModel",
          "model_module_version": "^0.16.0",
          "state": {
            "_custom_units": {},
            "_model_module": "jupyter-leaflet",
            "_model_module_version": "^0.16.0",
            "_model_name": "LeafletMeasureControlModel",
            "_view_count": null,
            "_view_module": "jupyter-leaflet",
            "_view_module_version": "^0.16.0",
            "_view_name": "LeafletMeasureControlView",
            "active_color": "orange",
            "capture_z_index": 10000,
            "completed_color": "#C8F2BE",
            "options": [
              "active_color",
              "capture_z_index",
              "completed_color",
              "popup_options",
              "position",
              "primary_area_unit",
              "primary_length_unit",
              "secondary_area_unit",
              "secondary_length_unit"
            ],
            "popup_options": {
              "className": "leaflet-measure-resultpopup",
              "autoPanPadding": [
                10,
                10
              ]
            },
            "position": "bottomleft",
            "primary_area_unit": "acres",
            "primary_length_unit": "kilometers",
            "secondary_area_unit": null,
            "secondary_length_unit": null
          }
        },
        "35af344e70cf47bda70a4ca62d976693": {
          "model_module": "jupyter-leaflet",
          "model_name": "LeafletAttributionControlModel",
          "model_module_version": "^0.16.0",
          "state": {
            "_model_module": "jupyter-leaflet",
            "_model_module_version": "^0.16.0",
            "_model_name": "LeafletAttributionControlModel",
            "_view_count": null,
            "_view_module": "jupyter-leaflet",
            "_view_module_version": "^0.16.0",
            "_view_name": "LeafletAttributionControlView",
            "options": [
              "position",
              "prefix"
            ],
            "position": "bottomright",
            "prefix": "ipyleaflet"
          }
        },
        "1eebec2d5a384b9cb83e0e6b4d33526c": {
          "model_module": "jupyter-leaflet",
          "model_name": "LeafletDrawControlModel",
          "model_module_version": "^0.16.0",
          "state": {
            "_model_module": "jupyter-leaflet",
            "_model_module_version": "^0.16.0",
            "_model_name": "LeafletDrawControlModel",
            "_view_count": null,
            "_view_module": "jupyter-leaflet",
            "_view_module_version": "^0.16.0",
            "_view_name": "LeafletDrawControlView",
            "circle": {
              "shapeOptions": {
                "color": "#3388ff"
              }
            },
            "circlemarker": {},
            "data": [],
            "edit": true,
            "marker": {
              "shapeOptions": {
                "color": "#3388ff"
              }
            },
            "options": [
              "position"
            ],
            "polygon": {
              "shapeOptions": {}
            },
            "polyline": {
              "shapeOptions": {}
            },
            "position": "topleft",
            "rectangle": {
              "shapeOptions": {
                "color": "#3388ff"
              }
            },
            "remove": true
          }
        },
        "fb3b15a863074b64bf47a57a588cdd89": {
          "model_module": "jupyter-leaflet",
          "model_name": "LeafletWidgetControlModel",
          "model_module_version": "^0.16.0",
          "state": {
            "_model_module": "jupyter-leaflet",
            "_model_module_version": "^0.16.0",
            "_model_name": "LeafletWidgetControlModel",
            "_view_count": null,
            "_view_module": "jupyter-leaflet",
            "_view_module_version": "^0.16.0",
            "_view_name": "LeafletWidgetControlView",
            "max_height": null,
            "max_width": null,
            "min_height": null,
            "min_width": null,
            "options": [
              "position",
              "transparent_bg"
            ],
            "position": "topright",
            "transparent_bg": false,
            "widget": "IPY_MODEL_b4827147cde14d7ea8d34bf2fb1bd4c3"
          }
        },
        "05783fdea9e1465ab66465c534aff7fe": {
          "model_module": "jupyter-leaflet",
          "model_name": "LeafletWidgetControlModel",
          "model_module_version": "^0.16.0",
          "state": {
            "_model_module": "jupyter-leaflet",
            "_model_module_version": "^0.16.0",
            "_model_name": "LeafletWidgetControlModel",
            "_view_count": null,
            "_view_module": "jupyter-leaflet",
            "_view_module_version": "^0.16.0",
            "_view_name": "LeafletWidgetControlView",
            "max_height": null,
            "max_width": null,
            "min_height": null,
            "min_width": null,
            "options": [
              "position",
              "transparent_bg"
            ],
            "position": "bottomright",
            "transparent_bg": false,
            "widget": "IPY_MODEL_fdafd723d3c94a129dd31185c4820b17"
          }
        },
        "6e97c2381e1240e187391a96959ae748": {
          "model_module": "jupyter-leaflet",
          "model_name": "LeafletLayersControlModel",
          "model_module_version": "^0.16.0",
          "state": {
            "_model_module": "jupyter-leaflet",
            "_model_module_version": "^0.16.0",
            "_model_name": "LeafletLayersControlModel",
            "_view_count": null,
            "_view_module": "jupyter-leaflet",
            "_view_module_version": "^0.16.0",
            "_view_name": "LeafletLayersControlView",
            "options": [
              "position"
            ],
            "position": "topright"
          }
        },
        "32a7f636fe01490bb0d42fd70d25a170": {
          "model_module": "jupyter-leaflet",
          "model_name": "LeafletMapStyleModel",
          "model_module_version": "^0.16.0",
          "state": {
            "_model_module": "jupyter-leaflet",
            "_model_module_version": "^0.16.0",
            "_model_name": "LeafletMapStyleModel",
            "_view_count": null,
            "_view_module": "@jupyter-widgets/base",
            "_view_module_version": "1.2.0",
            "_view_name": "StyleView",
            "cursor": "grab"
          }
        },
        "bcdec957c4204a74a7d39b2309a0fc37": {
          "model_module": "jupyter-leaflet",
          "model_name": "LeafletMapStyleModel",
          "model_module_version": "^0.16.0",
          "state": {
            "_model_module": "jupyter-leaflet",
            "_model_module_version": "^0.16.0",
            "_model_name": "LeafletMapStyleModel",
            "_view_count": null,
            "_view_module": "@jupyter-widgets/base",
            "_view_module_version": "1.2.0",
            "_view_name": "StyleView",
            "cursor": "move"
          }
        },
        "6a0845c96a8f490e897c601c2e989f8f": {
          "model_module": "jupyter-leaflet",
          "model_name": "LeafletTileLayerModel",
          "model_module_version": "^0.16.0",
          "state": {
            "_model_module": "jupyter-leaflet",
            "_model_module_version": "^0.16.0",
            "_model_name": "LeafletTileLayerModel",
            "_view_count": null,
            "_view_module": "jupyter-leaflet",
            "_view_module_version": "^0.16.0",
            "_view_name": "LeafletTileLayerView",
            "attribution": "&copy; <a href=\"https://www.openstreetmap.org/copyright\">OpenStreetMap</a> contributors",
            "base": true,
            "bottom": true,
            "bounds": null,
            "detect_retina": false,
            "loading": false,
            "max_native_zoom": 18,
            "max_zoom": 19,
            "min_native_zoom": 0,
            "min_zoom": 1,
            "name": "OpenStreetMap.Mapnik",
            "no_wrap": false,
            "opacity": 1,
            "options": [
              "attribution",
              "bounds",
              "detect_retina",
              "max_native_zoom",
              "max_zoom",
              "min_native_zoom",
              "min_zoom",
              "no_wrap",
              "tile_size",
              "tms"
            ],
            "popup": null,
            "popup_max_height": null,
            "popup_max_width": 300,
            "popup_min_width": 50,
            "show_loading": false,
            "tile_size": 256,
            "tms": false,
            "url": "https://a.tile.openstreetmap.org/{z}/{x}/{y}.png",
            "visible": true
          }
        },
        "c9698e70d3714d978dcdd9bfd826bfaa": {
          "model_module": "jupyter-leaflet",
          "model_name": "LeafletTileLayerModel",
          "model_module_version": "^0.16.0",
          "state": {
            "_model_module": "jupyter-leaflet",
            "_model_module_version": "^0.16.0",
            "_model_name": "LeafletTileLayerModel",
            "_view_count": null,
            "_view_module": "jupyter-leaflet",
            "_view_module_version": "^0.16.0",
            "_view_name": "LeafletTileLayerView",
            "attribution": "Google Earth Engine",
            "base": false,
            "bottom": true,
            "bounds": null,
            "detect_retina": false,
            "loading": false,
            "max_native_zoom": 18,
            "max_zoom": 24,
            "min_native_zoom": 0,
            "min_zoom": 0,
            "name": "NDMI",
            "no_wrap": false,
            "opacity": 1,
            "options": [
              "attribution",
              "bounds",
              "detect_retina",
              "max_native_zoom",
              "max_zoom",
              "min_native_zoom",
              "min_zoom",
              "no_wrap",
              "tile_size",
              "tms"
            ],
            "popup": null,
            "popup_max_height": null,
            "popup_max_width": 300,
            "popup_min_width": 50,
            "show_loading": false,
            "tile_size": 256,
            "tms": false,
            "url": "https://earthengine.googleapis.com/v1alpha/projects/earthengine-legacy/maps/be1f565a7239bd18a68640aeba073438-1aa794d82cac58400e766c7380f61029/tiles/{z}/{x}/{y}",
            "visible": true
          }
        },
        "a81c733bb3ed4781ac7319042edad82d": {
          "model_module": "@jupyter-widgets/base",
          "model_name": "LayoutModel",
          "model_module_version": "1.2.0",
          "state": {
            "_model_module": "@jupyter-widgets/base",
            "_model_module_version": "1.2.0",
            "_model_name": "LayoutModel",
            "_view_count": null,
            "_view_module": "@jupyter-widgets/base",
            "_view_module_version": "1.2.0",
            "_view_name": "LayoutView",
            "align_content": null,
            "align_items": null,
            "align_self": null,
            "border": null,
            "bottom": null,
            "display": null,
            "flex": null,
            "flex_flow": null,
            "grid_area": null,
            "grid_auto_columns": null,
            "grid_auto_flow": null,
            "grid_auto_rows": null,
            "grid_column": null,
            "grid_gap": null,
            "grid_row": null,
            "grid_template_areas": null,
            "grid_template_columns": null,
            "grid_template_rows": null,
            "height": "600px",
            "justify_content": null,
            "justify_items": null,
            "left": null,
            "margin": null,
            "max_height": null,
            "max_width": null,
            "min_height": null,
            "min_width": null,
            "object_fit": null,
            "object_position": null,
            "order": null,
            "overflow": null,
            "overflow_x": null,
            "overflow_y": null,
            "padding": null,
            "right": null,
            "top": null,
            "visibility": null,
            "width": null
          }
        },
        "cf380d35e0d540629e7d1f8f6e3834bb": {
          "model_module": "jupyter-leaflet",
          "model_name": "LeafletMapStyleModel",
          "model_module_version": "^0.16.0",
          "state": {
            "_model_module": "jupyter-leaflet",
            "_model_module_version": "^0.16.0",
            "_model_name": "LeafletMapStyleModel",
            "_view_count": null,
            "_view_module": "@jupyter-widgets/base",
            "_view_module_version": "1.2.0",
            "_view_name": "StyleView",
            "cursor": "grab"
          }
        },
        "4d1fbcc2d8634f00bb5a5e4dd375f593": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "HBoxModel",
          "model_module_version": "1.5.0",
          "state": {
            "_dom_classes": [],
            "_model_module": "@jupyter-widgets/controls",
            "_model_module_version": "1.5.0",
            "_model_name": "HBoxModel",
            "_view_count": null,
            "_view_module": "@jupyter-widgets/controls",
            "_view_module_version": "1.5.0",
            "_view_name": "HBoxView",
            "box_style": "",
            "children": [
              "IPY_MODEL_ac4985aec3894b28874fd467967ba2bc"
            ],
            "layout": "IPY_MODEL_268136591a7d4fbd97c0e4dc9764424a"
          }
        },
        "b4827147cde14d7ea8d34bf2fb1bd4c3": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "VBoxModel",
          "model_module_version": "1.5.0",
          "state": {
            "_dom_classes": [],
            "_model_module": "@jupyter-widgets/controls",
            "_model_module_version": "1.5.0",
            "_model_name": "VBoxModel",
            "_view_count": null,
            "_view_module": "@jupyter-widgets/controls",
            "_view_module_version": "1.5.0",
            "_view_name": "VBoxView",
            "box_style": "",
            "children": [
              "IPY_MODEL_0b2d1c08023740239cfa65f26fe5baeb"
            ],
            "layout": "IPY_MODEL_763a3f41fcc948c29c1177950b0f6255"
          }
        },
        "fdafd723d3c94a129dd31185c4820b17": {
          "model_module": "@jupyter-widgets/output",
          "model_name": "OutputModel",
          "model_module_version": "1.0.0",
          "state": {
            "_dom_classes": [],
            "_model_module": "@jupyter-widgets/output",
            "_model_module_version": "1.0.0",
            "_model_name": "OutputModel",
            "_view_count": null,
            "_view_module": "@jupyter-widgets/output",
            "_view_module_version": "1.0.0",
            "_view_name": "OutputView",
            "layout": "IPY_MODEL_7aa47ce1aa494544ad8867eeba5162b5",
            "msg_id": "",
            "outputs": [
              {
                "output_type": "display_data",
                "data": {
                  "text/plain": "<Figure size 432x28.8 with 1 Axes>",
                  "image/png": "iVBORw0KGgoAAAANSUhEUgAAAYQAAABDCAYAAACcJ3JrAAAABHNCSVQICAgIfAhkiAAAAAlwSFlzAAALEgAACxIB0t1+/AAAADh0RVh0U29mdHdhcmUAbWF0cGxvdGxpYiB2ZXJzaW9uMy4yLjIsIGh0dHA6Ly9tYXRwbG90bGliLm9yZy+WH4yJAAAMpElEQVR4nO2df7BdVXXHP18JEJoykB+Upv4KGUEG6NRgAJlAQSo0ONaq2BGElh+OrVppi8N0cGiZtEx/CDKik7ailjo6jATGSNEZjfwwgtTyK4QYhZhA0yYxAsEBSwu0oat/7HXfO+/k3Pvuve/de1/g+5l58/bZP9Zae5197jpn73P3VURgjDHGvGrUBhhjjJkZOCAYY4wBHBCMMcYkDgjGGGMABwRjjDGJA4IxxhgAZo1CqbQ8YFdDQT0j2uQ3tYk2+Z3a9KqnzSu67dqpwyu9I2/TSjS0bWrTV/+rB12en6G36bL//eoZK+tBz4SyLvRM2We1dtN+vfU4bsbKevXZsPT02Kbvz6gGHQ/uXBMRyzu0nBIjCQiwC3R/6bQYP5GK8byx46gcV/LGjjvk9SqzGz1tZVKT0a/Muozp9kcPdnbU06Wdffuj5pO+/VGX0c7v/fij3v8uZLbV04OdPdveoKNvfzSN0ynI7Nj/LmU2XUON/e8gs59rvS5z2v1RkwmgFQsYIJ4yMsYYAzggGGOMSRwQjDHGAA4IxhhjEgcEY4wxgAOCMcaYxAHBGGMM4IBgjDEmcUAwxhgDOCAYY4xJHBCMMcYADgjGGGMSBwRjjDGAA4IxxpjEAcEYYwzggGCMMSZxQDDGGAM4IBhjjEkcEIwxxgAOCMYYYxJFxPCVShuBF4auuHcWALtGbcQk7A02gu2cbmzn9LK32Dk7Io4ZlPBZgxI8CS9ExNIR6e4aSQ/MdDv3BhvBdk43tnN62ZvsHKR8TxkZY4wBHBCMMcYkowoInxuR3l7ZG+zcG2wE2znd2M7pxXYyokVlY4wxMw9PGRljjClERN9/wDzgNmBz/p/bpt75WWczcH4l/6+AbcBztfr7A6uALcC9wKJK2cczfxPwm0Oy883AD1LvZxh/sloFrM+/rcD6zF8EPF8p++yI7VwB7KjY8/YZ6s+rgUeBDcDXgIN79SewPPuyBbisobznsdVOJnBYytiSMvfr4dqZVjuB1wLfAX4E/BD440r9tud/2HZm/tY8/+uBB3odV0Py5xsr/loP/Bz4k1H5E5if5/c5YGWtTbvrqWd/dtWJDp27qtUp4DLgEw115gGP5/+5mZ6bZW8BFrJnQPgIedEDZwOrMn0U8HA67TDgMWCfIdh5X9oq4JvAmQ3trwGuyPQiYOMI/NloZw7gSxtkzSh/AmcAszL9iZbcbv0J7JN9WAzsl307aipjq5NM4Cbg7Ex/Fvhwl+d5EHYuBI7NOgcCP67Y2Xj+R2Fnlm0FFvQzroZpZ03+T4HXj9Cfc4CTgA+xZ0Bodz317M++g0Eq2QQszPRCYFNDnXOA6yrH1wHn1OrUA8Ia4MRMz6J8YUSUSP7xpnqDsjPrP9quXuaJ8qRzeB4vor+AMBA72w3gmerPzH83cEMv/gROBNa0618/Y6udzGyzi/EANqHesO1s0PHPwOmdzv+o7KR9QJh0XI3Cn5QblXsqx0P3Z6X8AioBgc7Xfc/+nOoawqERsTPTPwUObajzasqHZYvtmdeJsTYRsRt4lvLI1I+sqdr56kx30nky8EREbK7kHSbpIUnflXRyFzYO2s6PStog6XpJcyeRNUo7W1xEudtp0Y0/u+lPr2OrXf584JmU0akfw7JzDEmLgCWUKYcWTed/VHYG8G1JD0r6/UqdbsbVMO1scTbwlVresP3ZSWa766lnf076TWVJtwO/3FB0efUgIkJSTCZvUIzYznOYOGB2Aq+LiKclvRm4RdLREfHzEdn5D8CVlAvxSsr01kWdGozSn5IuB3YDN2RWW39Op96XA5J+EfgqZb675Z+ez/+AOSkidkj6JeA2SY9GxF3VCqP+PGkhaT/gnZS7+RYzzZ+T0q0/Jw0IEfG2dmWSnpC0MCJ2SloIPNlQbQdwauX4NcDaSdTuoCySbZc0CzgIeLqSX5W1Y8B27sj0HjpT9izgPZSFHdKWF4EXM/2gpMeAIygLaEO3MyKeqOj4PPCNiqyZ5s8LgHcAvxH5rNvJnw06G/vTUKfrsdUm/2ngYEmz8k6uSVc7BmKnpH0pweCGiFjdqtDh/I/Ezoho/X9S0teA44G7gG7G1dDsTM4E1lV9OCJ/dpLZ7nrq3Z+9zoPV5ruuZuKixVUNdeYB/0ZZWJyb6Xm1OvU1hD9k4sLKTZk+mokLQI/T3SLolOxkz0Wb6ls6y4Hv1mQdwvgC2uI8QfNGZSc5j5jpS4AbZ6I/05c/Ag7px5+UG5zHsy+tRbujpzK2OskEbmbiovJHurxuBmGngC8B1zboazz/I7JzDnBg1pkD/AuwvNtxNSw7K+1uBC4ctT8r5Rcw+aJy63rq2Z9TDQjzgTsorzXdzvgFvxT4QqXeRZRXorZUnUtZBd8O/F/+X5H5sykX25bs7OJKm8spK/WbaHjbZ0B2LgU2pt6VTFzk+SLwoZq+syiv/q0H1gG/NUo7gS9TXkvbANxaG9Azxp9Zbxu110t78SfwdsobNo8Bl2feXwLv7HdsNcnM/MUpY0vK3L+Ha2da7aS8gRJ5jie8Dtnp/I/AzsWUD8KH85xW/dk4rkZhZ+bPodydH1TTNSp/bgV+Rnn1dDvjb5G1u5569qe/qWyMMQbwN5WNMcYkDgjGGGMABwRjjDGJA4IxxhjAAcEYY0zigGAmRVJIuqZyfKmkFZleIWmHpPWSNktaLemoSt21kv5Dkip5t0h6LtOLJG1s0LlI0vsH2KcLJK1sU/YuSVf0KXeFpEunaNs3Jb1m8pp9y/+opBn9zVozGhwQTDe8CLxH0oI25Z+KiDdFxOGUrXvvlHRIpfwZYBmApIMpG21NxiKgMSDkNzgHyZ8Cfz9gHY1IOgCYHxHbJ63cn/xZwPXAxYOQb/ZuHBBMN+ym/HTfJZNVjIhVwLeZ+GF+I+Vbl1C2+Vhdb9fA3wIn55PHJXlHf6ukO4E7JM3JjcXuy03vfhvG7vxXS/pWPrFc1RIo6UJJP5Z0Hxmg6kg6AngxInZJOkjSv0t6VZbNkbRN0r6SPijpfkkPS/qqpF9okLVW0tJML5C0NdP7SLo622+Q9AeVZqcCayWdJumWiqzTc5sHJJ0h6fuS1km6OfcvQtIVKXOjpM+1nsrSjmslPUD5nYT/BrZKOr6L82BeQTggmG75O+BcSQd1UXcdcGTl+A7g1yXtQ+7x3oWMy4C788njU5l3LPDeiDiF8u3SOyPieOCtwNWS5mS9NwHvA34VeJ+k1+ZeLn9BCQQnUfbBb2JZ2k9EPEv5xu8pWfYOyvbF/wusjojjIuLXgEeAD3TRpxYfAJ6NiOOA44APSjosy84EvkX5MZQjK09aFwLX51PanwFvi4hjKfs5fSzrrEybjgEOSHtb7BcRSyOiNfX3AGWXXmPGcEAwXRFl58wvAX/URXXVjl8CvkcJBgdExNY+zbgtIn6W6TOAyyStp2yaNxt4XZbdERHPRsQLlL2RXg+cAKyNiKci4n9oH5QWAk9VjldRggtMDGbHSLpb0g+Acyl74nTLGcDvpe33UrYYODzLlgHfi7KFwJeB83Ka7UTKPjVvoQSze7L9+dk/gLdKujdtOq1mU72/TwK/0oPN5hXAoOdizcuLayl3z/80Sb0l7LkT6Y2Un8VcMQX9/1VJCzgrIjZVK0g6gdwZNXmJ3sb585QdJlvcCvy1pHmUHW3vzPwvAu+KiIdVdmg9tUHWbsZvumbXbL84ItbUbF8MbMuABcXPXwdeAG6OiN05DXRbRJxTazubsu6xNCK25aJ/VWfVdy17nm+w2byC8ROC6Zq8O7+JDtMjks6i3AHXf1DkbuBvGvLb8Z+Un4Jsxxrg4so8+ZJJ5N0LnCJpvso20b/Tpt4jwBtaBxHxHHA/8GngGxHxUhYdCOxMWee2kbWV8W3R31uz/cPZFklH5HRXa7qopfsnwE8oU0StIPyvwDJJb8i2c3Ldo/XhvyvXFKr6mjiCsiGaMWM4IJheuQaov210SS7+bgbOA06LiOq0C1H4ZETs6lLPBuClXLRtWsy+EtgX2CDph3nclii/HLUC+D5wD+WDv4m7gCXV12Qp0y3nMXHa5c8pQeYe4NE2sj5J+eB/iIk++wJlKmtdvnJ7HeUpZjmVgJDcQHlqeCT78RRlC+SvSNqQ/TkyIp4BPk/5kF9DCWKdWEb54XVjxvBup8bUkPRp4OsRcfsQde5P+d3epbX8lcBDEfGP06hrCfCxiPjd6ZJpXh44IBhTQ9KhwAkRceuI7XiQMvd/epRfjZsuuacDm6ewuG9epjggGGOMAbyGYIwxJnFAMMYYAzggGGOMSRwQjDHGAA4IxhhjEgcEY4wxAPw/2VrcucRRLCwAAAAASUVORK5CYII=\n"
                },
                "metadata": {
                  "needs_background": "light"
                }
              }
            ]
          }
        },
        "ac4985aec3894b28874fd467967ba2bc": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "ToggleButtonModel",
          "model_module_version": "1.5.0",
          "state": {
            "_dom_classes": [],
            "_model_module": "@jupyter-widgets/controls",
            "_model_module_version": "1.5.0",
            "_model_name": "ToggleButtonModel",
            "_view_count": null,
            "_view_module": "@jupyter-widgets/controls",
            "_view_module_version": "1.5.0",
            "_view_name": "ToggleButtonView",
            "button_style": "",
            "description": "",
            "description_tooltip": null,
            "disabled": false,
            "icon": "globe",
            "layout": "IPY_MODEL_3e1235830038476c819850656b8d5062",
            "style": "IPY_MODEL_b3ebc800e4e24d23b7c140401edcd666",
            "tooltip": "Search location/data",
            "value": false
          }
        },
        "268136591a7d4fbd97c0e4dc9764424a": {
          "model_module": "@jupyter-widgets/base",
          "model_name": "LayoutModel",
          "model_module_version": "1.2.0",
          "state": {
            "_model_module": "@jupyter-widgets/base",
            "_model_module_version": "1.2.0",
            "_model_name": "LayoutModel",
            "_view_count": null,
            "_view_module": "@jupyter-widgets/base",
            "_view_module_version": "1.2.0",
            "_view_name": "LayoutView",
            "align_content": null,
            "align_items": null,
            "align_self": null,
            "border": null,
            "bottom": null,
            "display": null,
            "flex": null,
            "flex_flow": null,
            "grid_area": null,
            "grid_auto_columns": null,
            "grid_auto_flow": null,
            "grid_auto_rows": null,
            "grid_column": null,
            "grid_gap": null,
            "grid_row": null,
            "grid_template_areas": null,
            "grid_template_columns": null,
            "grid_template_rows": null,
            "height": null,
            "justify_content": null,
            "justify_items": null,
            "left": null,
            "margin": null,
            "max_height": null,
            "max_width": null,
            "min_height": null,
            "min_width": null,
            "object_fit": null,
            "object_position": null,
            "order": null,
            "overflow": null,
            "overflow_x": null,
            "overflow_y": null,
            "padding": null,
            "right": null,
            "top": null,
            "visibility": null,
            "width": null
          }
        },
        "0b2d1c08023740239cfa65f26fe5baeb": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "ToggleButtonModel",
          "model_module_version": "1.5.0",
          "state": {
            "_dom_classes": [],
            "_model_module": "@jupyter-widgets/controls",
            "_model_module_version": "1.5.0",
            "_model_name": "ToggleButtonModel",
            "_view_count": null,
            "_view_module": "@jupyter-widgets/controls",
            "_view_module_version": "1.5.0",
            "_view_name": "ToggleButtonView",
            "button_style": "",
            "description": "",
            "description_tooltip": null,
            "disabled": false,
            "icon": "wrench",
            "layout": "IPY_MODEL_8c8c9b1957864507b09beb4ccdeea7aa",
            "style": "IPY_MODEL_2b5407c0ceb942ed8d98fb2ac468040d",
            "tooltip": "Toolbar",
            "value": false
          }
        },
        "763a3f41fcc948c29c1177950b0f6255": {
          "model_module": "@jupyter-widgets/base",
          "model_name": "LayoutModel",
          "model_module_version": "1.2.0",
          "state": {
            "_model_module": "@jupyter-widgets/base",
            "_model_module_version": "1.2.0",
            "_model_name": "LayoutModel",
            "_view_count": null,
            "_view_module": "@jupyter-widgets/base",
            "_view_module_version": "1.2.0",
            "_view_name": "LayoutView",
            "align_content": null,
            "align_items": null,
            "align_self": null,
            "border": null,
            "bottom": null,
            "display": null,
            "flex": null,
            "flex_flow": null,
            "grid_area": null,
            "grid_auto_columns": null,
            "grid_auto_flow": null,
            "grid_auto_rows": null,
            "grid_column": null,
            "grid_gap": null,
            "grid_row": null,
            "grid_template_areas": null,
            "grid_template_columns": null,
            "grid_template_rows": null,
            "height": null,
            "justify_content": null,
            "justify_items": null,
            "left": null,
            "margin": null,
            "max_height": null,
            "max_width": null,
            "min_height": null,
            "min_width": null,
            "object_fit": null,
            "object_position": null,
            "order": null,
            "overflow": null,
            "overflow_x": null,
            "overflow_y": null,
            "padding": null,
            "right": null,
            "top": null,
            "visibility": null,
            "width": null
          }
        },
        "7aa47ce1aa494544ad8867eeba5162b5": {
          "model_module": "@jupyter-widgets/base",
          "model_name": "LayoutModel",
          "model_module_version": "1.2.0",
          "state": {
            "_model_module": "@jupyter-widgets/base",
            "_model_module_version": "1.2.0",
            "_model_name": "LayoutModel",
            "_view_count": null,
            "_view_module": "@jupyter-widgets/base",
            "_view_module_version": "1.2.0",
            "_view_name": "LayoutView",
            "align_content": null,
            "align_items": null,
            "align_self": null,
            "border": null,
            "bottom": null,
            "display": null,
            "flex": null,
            "flex_flow": null,
            "grid_area": null,
            "grid_auto_columns": null,
            "grid_auto_flow": null,
            "grid_auto_rows": null,
            "grid_column": null,
            "grid_gap": null,
            "grid_row": null,
            "grid_template_areas": null,
            "grid_template_columns": null,
            "grid_template_rows": null,
            "height": null,
            "justify_content": null,
            "justify_items": null,
            "left": null,
            "margin": null,
            "max_height": null,
            "max_width": null,
            "min_height": null,
            "min_width": null,
            "object_fit": null,
            "object_position": null,
            "order": null,
            "overflow": null,
            "overflow_x": null,
            "overflow_y": null,
            "padding": null,
            "right": null,
            "top": null,
            "visibility": null,
            "width": null
          }
        },
        "3e1235830038476c819850656b8d5062": {
          "model_module": "@jupyter-widgets/base",
          "model_name": "LayoutModel",
          "model_module_version": "1.2.0",
          "state": {
            "_model_module": "@jupyter-widgets/base",
            "_model_module_version": "1.2.0",
            "_model_name": "LayoutModel",
            "_view_count": null,
            "_view_module": "@jupyter-widgets/base",
            "_view_module_version": "1.2.0",
            "_view_name": "LayoutView",
            "align_content": null,
            "align_items": null,
            "align_self": null,
            "border": null,
            "bottom": null,
            "display": null,
            "flex": null,
            "flex_flow": null,
            "grid_area": null,
            "grid_auto_columns": null,
            "grid_auto_flow": null,
            "grid_auto_rows": null,
            "grid_column": null,
            "grid_gap": null,
            "grid_row": null,
            "grid_template_areas": null,
            "grid_template_columns": null,
            "grid_template_rows": null,
            "height": "28px",
            "justify_content": null,
            "justify_items": null,
            "left": null,
            "margin": null,
            "max_height": null,
            "max_width": null,
            "min_height": null,
            "min_width": null,
            "object_fit": null,
            "object_position": null,
            "order": null,
            "overflow": null,
            "overflow_x": null,
            "overflow_y": null,
            "padding": "0px 0px 0px 4px",
            "right": null,
            "top": null,
            "visibility": null,
            "width": "28px"
          }
        },
        "b3ebc800e4e24d23b7c140401edcd666": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "DescriptionStyleModel",
          "model_module_version": "1.5.0",
          "state": {
            "_model_module": "@jupyter-widgets/controls",
            "_model_module_version": "1.5.0",
            "_model_name": "DescriptionStyleModel",
            "_view_count": null,
            "_view_module": "@jupyter-widgets/base",
            "_view_module_version": "1.2.0",
            "_view_name": "StyleView",
            "description_width": ""
          }
        },
        "8c8c9b1957864507b09beb4ccdeea7aa": {
          "model_module": "@jupyter-widgets/base",
          "model_name": "LayoutModel",
          "model_module_version": "1.2.0",
          "state": {
            "_model_module": "@jupyter-widgets/base",
            "_model_module_version": "1.2.0",
            "_model_name": "LayoutModel",
            "_view_count": null,
            "_view_module": "@jupyter-widgets/base",
            "_view_module_version": "1.2.0",
            "_view_name": "LayoutView",
            "align_content": null,
            "align_items": null,
            "align_self": null,
            "border": null,
            "bottom": null,
            "display": null,
            "flex": null,
            "flex_flow": null,
            "grid_area": null,
            "grid_auto_columns": null,
            "grid_auto_flow": null,
            "grid_auto_rows": null,
            "grid_column": null,
            "grid_gap": null,
            "grid_row": null,
            "grid_template_areas": null,
            "grid_template_columns": null,
            "grid_template_rows": null,
            "height": "28px",
            "justify_content": null,
            "justify_items": null,
            "left": null,
            "margin": null,
            "max_height": null,
            "max_width": null,
            "min_height": null,
            "min_width": null,
            "object_fit": null,
            "object_position": null,
            "order": null,
            "overflow": null,
            "overflow_x": null,
            "overflow_y": null,
            "padding": "0px 0px 0px 4px",
            "right": null,
            "top": null,
            "visibility": null,
            "width": "28px"
          }
        },
        "2b5407c0ceb942ed8d98fb2ac468040d": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "DescriptionStyleModel",
          "model_module_version": "1.5.0",
          "state": {
            "_model_module": "@jupyter-widgets/controls",
            "_model_module_version": "1.5.0",
            "_model_name": "DescriptionStyleModel",
            "_view_count": null,
            "_view_module": "@jupyter-widgets/base",
            "_view_module_version": "1.2.0",
            "_view_name": "StyleView",
            "description_width": ""
          }
        },
        "2c2cf1dabe304c7ab01f48fe86f9c778": {
          "model_module": "jupyter-leaflet",
          "model_name": "LeafletMapModel",
          "model_module_version": "^0.16.0",
          "state": {
            "_dom_classes": [],
            "_model_module": "jupyter-leaflet",
            "_model_module_version": "^0.16.0",
            "_model_name": "LeafletMapModel",
            "_view_count": null,
            "_view_module": "jupyter-leaflet",
            "_view_module_version": "^0.16.0",
            "_view_name": "LeafletMapView",
            "bottom": 754,
            "bounce_at_zoom_limits": true,
            "box_zoom": true,
            "center": [
              20,
              0
            ],
            "close_popup_on_click": true,
            "controls": [
              "IPY_MODEL_e108524d49224e76a83105542b1d3349",
              "IPY_MODEL_b2939422f02d413aa651b8cd4bb24142",
              "IPY_MODEL_3f8d468840b04dcc98562ff1451911cf",
              "IPY_MODEL_3059ae9b0f6f4fe3982aaf794ddf9cc5",
              "IPY_MODEL_e32dacbeed074462b2d966b3fbf76020",
              "IPY_MODEL_29b9560738484f2fbe34d837abd78ce0",
              "IPY_MODEL_b048249668c4417a8534557de90782d4",
              "IPY_MODEL_a765c84deafc4425acc1cd76bb88966b",
              "IPY_MODEL_982f9e1dc95447d087187019036e13e5",
              "IPY_MODEL_94c891d119064b47a027efbdd7e48ff7"
            ],
            "crs": {
              "name": "EPSG3857",
              "custom": false
            },
            "default_style": "IPY_MODEL_f3326cb42f084d849960bc33ba6b4371",
            "double_click_zoom": true,
            "dragging": true,
            "dragging_style": "IPY_MODEL_1cf0cfc6f4754ccaa116e6f8d830f6be",
            "east": 178.24218750000003,
            "fullscreen": false,
            "inertia": true,
            "inertia_deceleration": 3000,
            "inertia_max_speed": 1500,
            "interpolation": "bilinear",
            "keyboard": true,
            "keyboard_pan_offset": 80,
            "keyboard_zoom_offset": 1,
            "layers": [
              "IPY_MODEL_0a02ca7df11b47cbb9d592dfc807fbe4",
              "IPY_MODEL_b038488e19c6478dbcc55bbcc5c78139",
              "IPY_MODEL_b66a30379e3242ff947122d865749a65"
            ],
            "layout": "IPY_MODEL_4e2933150d6246d19ee4419cc46d378c",
            "left": 6,
            "max_zoom": 24,
            "min_zoom": 1,
            "modisdate": "2022-05-31",
            "north": 77.31251993823143,
            "options": [
              "bounce_at_zoom_limits",
              "box_zoom",
              "center",
              "close_popup_on_click",
              "double_click_zoom",
              "dragging",
              "fullscreen",
              "inertia",
              "inertia_deceleration",
              "inertia_max_speed",
              "interpolation",
              "keyboard",
              "keyboard_pan_offset",
              "keyboard_zoom_offset",
              "max_zoom",
              "min_zoom",
              "prefer_canvas",
              "scroll_wheel_zoom",
              "tap",
              "tap_tolerance",
              "touch_zoom",
              "world_copy_jump",
              "zoom",
              "zoom_animation_threshold",
              "zoom_delta",
              "zoom_snap",
              "zoom_start"
            ],
            "prefer_canvas": false,
            "right": 1019,
            "scroll_wheel_zoom": true,
            "south": -64.47279382008165,
            "style": "IPY_MODEL_39b5900a6b244824869bf50385b20eea",
            "tap": true,
            "tap_tolerance": 15,
            "top": 154,
            "touch_zoom": true,
            "west": -177.89062500000003,
            "window_url": "https://yltn1k17ltc-496ff2e9c6d22116-0-colab.googleusercontent.com/outputframe.html?vrz=colab-20220531-060047-RC00_451971023",
            "world_copy_jump": false,
            "zoom": 2,
            "zoom_animation_threshold": 4,
            "zoom_delta": 1,
            "zoom_snap": 1,
            "zoom_start": 12
          }
        },
        "e108524d49224e76a83105542b1d3349": {
          "model_module": "jupyter-leaflet",
          "model_name": "LeafletWidgetControlModel",
          "model_module_version": "^0.16.0",
          "state": {
            "_model_module": "jupyter-leaflet",
            "_model_module_version": "^0.16.0",
            "_model_name": "LeafletWidgetControlModel",
            "_view_count": null,
            "_view_module": "jupyter-leaflet",
            "_view_module_version": "^0.16.0",
            "_view_name": "LeafletWidgetControlView",
            "max_height": null,
            "max_width": null,
            "min_height": null,
            "min_width": null,
            "options": [
              "position",
              "transparent_bg"
            ],
            "position": "topleft",
            "transparent_bg": false,
            "widget": "IPY_MODEL_54e206c8309742cb806807c081d04e18"
          }
        },
        "b2939422f02d413aa651b8cd4bb24142": {
          "model_module": "jupyter-leaflet",
          "model_name": "LeafletZoomControlModel",
          "model_module_version": "^0.16.0",
          "state": {
            "_model_module": "jupyter-leaflet",
            "_model_module_version": "^0.16.0",
            "_model_name": "LeafletZoomControlModel",
            "_view_count": null,
            "_view_module": "jupyter-leaflet",
            "_view_module_version": "^0.16.0",
            "_view_name": "LeafletZoomControlView",
            "options": [
              "position",
              "zoom_in_text",
              "zoom_in_title",
              "zoom_out_text",
              "zoom_out_title"
            ],
            "position": "topleft",
            "zoom_in_text": "+",
            "zoom_in_title": "Zoom in",
            "zoom_out_text": "-",
            "zoom_out_title": "Zoom out"
          }
        },
        "3f8d468840b04dcc98562ff1451911cf": {
          "model_module": "jupyter-leaflet",
          "model_name": "LeafletScaleControlModel",
          "model_module_version": "^0.16.0",
          "state": {
            "_model_module": "jupyter-leaflet",
            "_model_module_version": "^0.16.0",
            "_model_name": "LeafletScaleControlModel",
            "_view_count": null,
            "_view_module": "jupyter-leaflet",
            "_view_module_version": "^0.16.0",
            "_view_name": "LeafletScaleControlView",
            "imperial": true,
            "max_width": 100,
            "metric": true,
            "options": [
              "imperial",
              "max_width",
              "metric",
              "position",
              "update_when_idle"
            ],
            "position": "bottomleft",
            "update_when_idle": false
          }
        },
        "3059ae9b0f6f4fe3982aaf794ddf9cc5": {
          "model_module": "jupyter-leaflet",
          "model_name": "LeafletFullScreenControlModel",
          "model_module_version": "^0.16.0",
          "state": {
            "_model_module": "jupyter-leaflet",
            "_model_module_version": "^0.16.0",
            "_model_name": "LeafletFullScreenControlModel",
            "_view_count": null,
            "_view_module": "jupyter-leaflet",
            "_view_module_version": "^0.16.0",
            "_view_name": "LeafletFullScreenControlView",
            "options": [
              "position"
            ],
            "position": "topleft"
          }
        },
        "e32dacbeed074462b2d966b3fbf76020": {
          "model_module": "jupyter-leaflet",
          "model_name": "LeafletMeasureControlModel",
          "model_module_version": "^0.16.0",
          "state": {
            "_custom_units": {},
            "_model_module": "jupyter-leaflet",
            "_model_module_version": "^0.16.0",
            "_model_name": "LeafletMeasureControlModel",
            "_view_count": null,
            "_view_module": "jupyter-leaflet",
            "_view_module_version": "^0.16.0",
            "_view_name": "LeafletMeasureControlView",
            "active_color": "orange",
            "capture_z_index": 10000,
            "completed_color": "#C8F2BE",
            "options": [
              "active_color",
              "capture_z_index",
              "completed_color",
              "popup_options",
              "position",
              "primary_area_unit",
              "primary_length_unit",
              "secondary_area_unit",
              "secondary_length_unit"
            ],
            "popup_options": {
              "className": "leaflet-measure-resultpopup",
              "autoPanPadding": [
                10,
                10
              ]
            },
            "position": "bottomleft",
            "primary_area_unit": "acres",
            "primary_length_unit": "kilometers",
            "secondary_area_unit": null,
            "secondary_length_unit": null
          }
        },
        "29b9560738484f2fbe34d837abd78ce0": {
          "model_module": "jupyter-leaflet",
          "model_name": "LeafletAttributionControlModel",
          "model_module_version": "^0.16.0",
          "state": {
            "_model_module": "jupyter-leaflet",
            "_model_module_version": "^0.16.0",
            "_model_name": "LeafletAttributionControlModel",
            "_view_count": null,
            "_view_module": "jupyter-leaflet",
            "_view_module_version": "^0.16.0",
            "_view_name": "LeafletAttributionControlView",
            "options": [
              "position",
              "prefix"
            ],
            "position": "bottomright",
            "prefix": "ipyleaflet"
          }
        },
        "b048249668c4417a8534557de90782d4": {
          "model_module": "jupyter-leaflet",
          "model_name": "LeafletDrawControlModel",
          "model_module_version": "^0.16.0",
          "state": {
            "_model_module": "jupyter-leaflet",
            "_model_module_version": "^0.16.0",
            "_model_name": "LeafletDrawControlModel",
            "_view_count": null,
            "_view_module": "jupyter-leaflet",
            "_view_module_version": "^0.16.0",
            "_view_name": "LeafletDrawControlView",
            "circle": {
              "shapeOptions": {
                "color": "#3388ff"
              }
            },
            "circlemarker": {},
            "data": [],
            "edit": true,
            "marker": {
              "shapeOptions": {
                "color": "#3388ff"
              }
            },
            "options": [
              "position"
            ],
            "polygon": {
              "shapeOptions": {}
            },
            "polyline": {
              "shapeOptions": {}
            },
            "position": "topleft",
            "rectangle": {
              "shapeOptions": {
                "color": "#3388ff"
              }
            },
            "remove": true
          }
        },
        "a765c84deafc4425acc1cd76bb88966b": {
          "model_module": "jupyter-leaflet",
          "model_name": "LeafletWidgetControlModel",
          "model_module_version": "^0.16.0",
          "state": {
            "_model_module": "jupyter-leaflet",
            "_model_module_version": "^0.16.0",
            "_model_name": "LeafletWidgetControlModel",
            "_view_count": null,
            "_view_module": "jupyter-leaflet",
            "_view_module_version": "^0.16.0",
            "_view_name": "LeafletWidgetControlView",
            "max_height": null,
            "max_width": null,
            "min_height": null,
            "min_width": null,
            "options": [
              "position",
              "transparent_bg"
            ],
            "position": "topright",
            "transparent_bg": false,
            "widget": "IPY_MODEL_1cfabec135004889a8d844d37835336b"
          }
        },
        "982f9e1dc95447d087187019036e13e5": {
          "model_module": "jupyter-leaflet",
          "model_name": "LeafletWidgetControlModel",
          "model_module_version": "^0.16.0",
          "state": {
            "_model_module": "jupyter-leaflet",
            "_model_module_version": "^0.16.0",
            "_model_name": "LeafletWidgetControlModel",
            "_view_count": null,
            "_view_module": "jupyter-leaflet",
            "_view_module_version": "^0.16.0",
            "_view_name": "LeafletWidgetControlView",
            "max_height": null,
            "max_width": null,
            "min_height": null,
            "min_width": null,
            "options": [
              "position",
              "transparent_bg"
            ],
            "position": "bottomright",
            "transparent_bg": false,
            "widget": "IPY_MODEL_78c732ebb7b943c19a83c7f3d7cb1489"
          }
        },
        "94c891d119064b47a027efbdd7e48ff7": {
          "model_module": "jupyter-leaflet",
          "model_name": "LeafletLayersControlModel",
          "model_module_version": "^0.16.0",
          "state": {
            "_model_module": "jupyter-leaflet",
            "_model_module_version": "^0.16.0",
            "_model_name": "LeafletLayersControlModel",
            "_view_count": null,
            "_view_module": "jupyter-leaflet",
            "_view_module_version": "^0.16.0",
            "_view_name": "LeafletLayersControlView",
            "options": [
              "position"
            ],
            "position": "topright"
          }
        },
        "f3326cb42f084d849960bc33ba6b4371": {
          "model_module": "jupyter-leaflet",
          "model_name": "LeafletMapStyleModel",
          "model_module_version": "^0.16.0",
          "state": {
            "_model_module": "jupyter-leaflet",
            "_model_module_version": "^0.16.0",
            "_model_name": "LeafletMapStyleModel",
            "_view_count": null,
            "_view_module": "@jupyter-widgets/base",
            "_view_module_version": "1.2.0",
            "_view_name": "StyleView",
            "cursor": "grab"
          }
        },
        "1cf0cfc6f4754ccaa116e6f8d830f6be": {
          "model_module": "jupyter-leaflet",
          "model_name": "LeafletMapStyleModel",
          "model_module_version": "^0.16.0",
          "state": {
            "_model_module": "jupyter-leaflet",
            "_model_module_version": "^0.16.0",
            "_model_name": "LeafletMapStyleModel",
            "_view_count": null,
            "_view_module": "@jupyter-widgets/base",
            "_view_module_version": "1.2.0",
            "_view_name": "StyleView",
            "cursor": "move"
          }
        },
        "0a02ca7df11b47cbb9d592dfc807fbe4": {
          "model_module": "jupyter-leaflet",
          "model_name": "LeafletTileLayerModel",
          "model_module_version": "^0.16.0",
          "state": {
            "_model_module": "jupyter-leaflet",
            "_model_module_version": "^0.16.0",
            "_model_name": "LeafletTileLayerModel",
            "_view_count": null,
            "_view_module": "jupyter-leaflet",
            "_view_module_version": "^0.16.0",
            "_view_name": "LeafletTileLayerView",
            "attribution": "&copy; <a href=\"https://www.openstreetmap.org/copyright\">OpenStreetMap</a> contributors",
            "base": true,
            "bottom": true,
            "bounds": null,
            "detect_retina": false,
            "loading": false,
            "max_native_zoom": 18,
            "max_zoom": 19,
            "min_native_zoom": 0,
            "min_zoom": 1,
            "name": "OpenStreetMap.Mapnik",
            "no_wrap": false,
            "opacity": 1,
            "options": [
              "attribution",
              "bounds",
              "detect_retina",
              "max_native_zoom",
              "max_zoom",
              "min_native_zoom",
              "min_zoom",
              "no_wrap",
              "tile_size",
              "tms"
            ],
            "popup": null,
            "popup_max_height": null,
            "popup_max_width": 300,
            "popup_min_width": 50,
            "show_loading": false,
            "tile_size": 256,
            "tms": false,
            "url": "https://a.tile.openstreetmap.org/{z}/{x}/{y}.png",
            "visible": true
          }
        },
        "b66a30379e3242ff947122d865749a65": {
          "model_module": "jupyter-leaflet",
          "model_name": "LeafletTileLayerModel",
          "model_module_version": "^0.16.0",
          "state": {
            "_model_module": "jupyter-leaflet",
            "_model_module_version": "^0.16.0",
            "_model_name": "LeafletTileLayerModel",
            "_view_count": null,
            "_view_module": "jupyter-leaflet",
            "_view_module_version": "^0.16.0",
            "_view_name": "LeafletTileLayerView",
            "attribution": "Google Earth Engine",
            "base": false,
            "bottom": true,
            "bounds": null,
            "detect_retina": false,
            "loading": false,
            "max_native_zoom": 18,
            "max_zoom": 24,
            "min_native_zoom": 0,
            "min_zoom": 0,
            "name": "NDVI",
            "no_wrap": false,
            "opacity": 1,
            "options": [
              "attribution",
              "bounds",
              "detect_retina",
              "max_native_zoom",
              "max_zoom",
              "min_native_zoom",
              "min_zoom",
              "no_wrap",
              "tile_size",
              "tms"
            ],
            "popup": null,
            "popup_max_height": null,
            "popup_max_width": 300,
            "popup_min_width": 50,
            "show_loading": false,
            "tile_size": 256,
            "tms": false,
            "url": "https://earthengine.googleapis.com/v1alpha/projects/earthengine-legacy/maps/bc18cc6c41fe5ad0fa5c0b75fee7fc89-674f88e227a64e8b150d57ae9288a90a/tiles/{z}/{x}/{y}",
            "visible": true
          }
        },
        "4e2933150d6246d19ee4419cc46d378c": {
          "model_module": "@jupyter-widgets/base",
          "model_name": "LayoutModel",
          "model_module_version": "1.2.0",
          "state": {
            "_model_module": "@jupyter-widgets/base",
            "_model_module_version": "1.2.0",
            "_model_name": "LayoutModel",
            "_view_count": null,
            "_view_module": "@jupyter-widgets/base",
            "_view_module_version": "1.2.0",
            "_view_name": "LayoutView",
            "align_content": null,
            "align_items": null,
            "align_self": null,
            "border": null,
            "bottom": null,
            "display": null,
            "flex": null,
            "flex_flow": null,
            "grid_area": null,
            "grid_auto_columns": null,
            "grid_auto_flow": null,
            "grid_auto_rows": null,
            "grid_column": null,
            "grid_gap": null,
            "grid_row": null,
            "grid_template_areas": null,
            "grid_template_columns": null,
            "grid_template_rows": null,
            "height": "600px",
            "justify_content": null,
            "justify_items": null,
            "left": null,
            "margin": null,
            "max_height": null,
            "max_width": null,
            "min_height": null,
            "min_width": null,
            "object_fit": null,
            "object_position": null,
            "order": null,
            "overflow": null,
            "overflow_x": null,
            "overflow_y": null,
            "padding": null,
            "right": null,
            "top": null,
            "visibility": null,
            "width": null
          }
        },
        "39b5900a6b244824869bf50385b20eea": {
          "model_module": "jupyter-leaflet",
          "model_name": "LeafletMapStyleModel",
          "model_module_version": "^0.16.0",
          "state": {
            "_model_module": "jupyter-leaflet",
            "_model_module_version": "^0.16.0",
            "_model_name": "LeafletMapStyleModel",
            "_view_count": null,
            "_view_module": "@jupyter-widgets/base",
            "_view_module_version": "1.2.0",
            "_view_name": "StyleView",
            "cursor": "grab"
          }
        },
        "54e206c8309742cb806807c081d04e18": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "HBoxModel",
          "model_module_version": "1.5.0",
          "state": {
            "_dom_classes": [],
            "_model_module": "@jupyter-widgets/controls",
            "_model_module_version": "1.5.0",
            "_model_name": "HBoxModel",
            "_view_count": null,
            "_view_module": "@jupyter-widgets/controls",
            "_view_module_version": "1.5.0",
            "_view_name": "HBoxView",
            "box_style": "",
            "children": [
              "IPY_MODEL_7ee87961b7234d718dc87cf5d9b74e9b"
            ],
            "layout": "IPY_MODEL_f19d424c7af04c209095b36b29879287"
          }
        },
        "1cfabec135004889a8d844d37835336b": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "VBoxModel",
          "model_module_version": "1.5.0",
          "state": {
            "_dom_classes": [],
            "_model_module": "@jupyter-widgets/controls",
            "_model_module_version": "1.5.0",
            "_model_name": "VBoxModel",
            "_view_count": null,
            "_view_module": "@jupyter-widgets/controls",
            "_view_module_version": "1.5.0",
            "_view_name": "VBoxView",
            "box_style": "",
            "children": [
              "IPY_MODEL_4cf91a4521db41d58c24ce2ede325506"
            ],
            "layout": "IPY_MODEL_15ade50836894c78afb7f86803d0901a"
          }
        },
        "78c732ebb7b943c19a83c7f3d7cb1489": {
          "model_module": "@jupyter-widgets/output",
          "model_name": "OutputModel",
          "model_module_version": "1.0.0",
          "state": {
            "_dom_classes": [],
            "_model_module": "@jupyter-widgets/output",
            "_model_module_version": "1.0.0",
            "_model_name": "OutputModel",
            "_view_count": null,
            "_view_module": "@jupyter-widgets/output",
            "_view_module_version": "1.0.0",
            "_view_name": "OutputView",
            "layout": "IPY_MODEL_c4fa65bd0855474eaaf58870ddd0f488",
            "msg_id": "",
            "outputs": [
              {
                "output_type": "display_data",
                "data": {
                  "text/plain": "<Figure size 432x28.8 with 1 Axes>",
                  "image/png": "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\n"
                },
                "metadata": {
                  "needs_background": "light"
                }
              }
            ]
          }
        },
        "7ee87961b7234d718dc87cf5d9b74e9b": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "ToggleButtonModel",
          "model_module_version": "1.5.0",
          "state": {
            "_dom_classes": [],
            "_model_module": "@jupyter-widgets/controls",
            "_model_module_version": "1.5.0",
            "_model_name": "ToggleButtonModel",
            "_view_count": null,
            "_view_module": "@jupyter-widgets/controls",
            "_view_module_version": "1.5.0",
            "_view_name": "ToggleButtonView",
            "button_style": "",
            "description": "",
            "description_tooltip": null,
            "disabled": false,
            "icon": "globe",
            "layout": "IPY_MODEL_9c61fbb4bba146bda5137b065715c38a",
            "style": "IPY_MODEL_73930396a4094288a63c5172688ce2e7",
            "tooltip": "Search location/data",
            "value": false
          }
        },
        "f19d424c7af04c209095b36b29879287": {
          "model_module": "@jupyter-widgets/base",
          "model_name": "LayoutModel",
          "model_module_version": "1.2.0",
          "state": {
            "_model_module": "@jupyter-widgets/base",
            "_model_module_version": "1.2.0",
            "_model_name": "LayoutModel",
            "_view_count": null,
            "_view_module": "@jupyter-widgets/base",
            "_view_module_version": "1.2.0",
            "_view_name": "LayoutView",
            "align_content": null,
            "align_items": null,
            "align_self": null,
            "border": null,
            "bottom": null,
            "display": null,
            "flex": null,
            "flex_flow": null,
            "grid_area": null,
            "grid_auto_columns": null,
            "grid_auto_flow": null,
            "grid_auto_rows": null,
            "grid_column": null,
            "grid_gap": null,
            "grid_row": null,
            "grid_template_areas": null,
            "grid_template_columns": null,
            "grid_template_rows": null,
            "height": null,
            "justify_content": null,
            "justify_items": null,
            "left": null,
            "margin": null,
            "max_height": null,
            "max_width": null,
            "min_height": null,
            "min_width": null,
            "object_fit": null,
            "object_position": null,
            "order": null,
            "overflow": null,
            "overflow_x": null,
            "overflow_y": null,
            "padding": null,
            "right": null,
            "top": null,
            "visibility": null,
            "width": null
          }
        },
        "4cf91a4521db41d58c24ce2ede325506": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "ToggleButtonModel",
          "model_module_version": "1.5.0",
          "state": {
            "_dom_classes": [],
            "_model_module": "@jupyter-widgets/controls",
            "_model_module_version": "1.5.0",
            "_model_name": "ToggleButtonModel",
            "_view_count": null,
            "_view_module": "@jupyter-widgets/controls",
            "_view_module_version": "1.5.0",
            "_view_name": "ToggleButtonView",
            "button_style": "",
            "description": "",
            "description_tooltip": null,
            "disabled": false,
            "icon": "wrench",
            "layout": "IPY_MODEL_f9fb3b6ce66c421e924e8e52f542dfe1",
            "style": "IPY_MODEL_4187f02af8b449d59d40f079c61ffd0a",
            "tooltip": "Toolbar",
            "value": false
          }
        },
        "15ade50836894c78afb7f86803d0901a": {
          "model_module": "@jupyter-widgets/base",
          "model_name": "LayoutModel",
          "model_module_version": "1.2.0",
          "state": {
            "_model_module": "@jupyter-widgets/base",
            "_model_module_version": "1.2.0",
            "_model_name": "LayoutModel",
            "_view_count": null,
            "_view_module": "@jupyter-widgets/base",
            "_view_module_version": "1.2.0",
            "_view_name": "LayoutView",
            "align_content": null,
            "align_items": null,
            "align_self": null,
            "border": null,
            "bottom": null,
            "display": null,
            "flex": null,
            "flex_flow": null,
            "grid_area": null,
            "grid_auto_columns": null,
            "grid_auto_flow": null,
            "grid_auto_rows": null,
            "grid_column": null,
            "grid_gap": null,
            "grid_row": null,
            "grid_template_areas": null,
            "grid_template_columns": null,
            "grid_template_rows": null,
            "height": null,
            "justify_content": null,
            "justify_items": null,
            "left": null,
            "margin": null,
            "max_height": null,
            "max_width": null,
            "min_height": null,
            "min_width": null,
            "object_fit": null,
            "object_position": null,
            "order": null,
            "overflow": null,
            "overflow_x": null,
            "overflow_y": null,
            "padding": null,
            "right": null,
            "top": null,
            "visibility": null,
            "width": null
          }
        },
        "c4fa65bd0855474eaaf58870ddd0f488": {
          "model_module": "@jupyter-widgets/base",
          "model_name": "LayoutModel",
          "model_module_version": "1.2.0",
          "state": {
            "_model_module": "@jupyter-widgets/base",
            "_model_module_version": "1.2.0",
            "_model_name": "LayoutModel",
            "_view_count": null,
            "_view_module": "@jupyter-widgets/base",
            "_view_module_version": "1.2.0",
            "_view_name": "LayoutView",
            "align_content": null,
            "align_items": null,
            "align_self": null,
            "border": null,
            "bottom": null,
            "display": null,
            "flex": null,
            "flex_flow": null,
            "grid_area": null,
            "grid_auto_columns": null,
            "grid_auto_flow": null,
            "grid_auto_rows": null,
            "grid_column": null,
            "grid_gap": null,
            "grid_row": null,
            "grid_template_areas": null,
            "grid_template_columns": null,
            "grid_template_rows": null,
            "height": null,
            "justify_content": null,
            "justify_items": null,
            "left": null,
            "margin": null,
            "max_height": null,
            "max_width": null,
            "min_height": null,
            "min_width": null,
            "object_fit": null,
            "object_position": null,
            "order": null,
            "overflow": null,
            "overflow_x": null,
            "overflow_y": null,
            "padding": null,
            "right": null,
            "top": null,
            "visibility": null,
            "width": null
          }
        },
        "9c61fbb4bba146bda5137b065715c38a": {
          "model_module": "@jupyter-widgets/base",
          "model_name": "LayoutModel",
          "model_module_version": "1.2.0",
          "state": {
            "_model_module": "@jupyter-widgets/base",
            "_model_module_version": "1.2.0",
            "_model_name": "LayoutModel",
            "_view_count": null,
            "_view_module": "@jupyter-widgets/base",
            "_view_module_version": "1.2.0",
            "_view_name": "LayoutView",
            "align_content": null,
            "align_items": null,
            "align_self": null,
            "border": null,
            "bottom": null,
            "display": null,
            "flex": null,
            "flex_flow": null,
            "grid_area": null,
            "grid_auto_columns": null,
            "grid_auto_flow": null,
            "grid_auto_rows": null,
            "grid_column": null,
            "grid_gap": null,
            "grid_row": null,
            "grid_template_areas": null,
            "grid_template_columns": null,
            "grid_template_rows": null,
            "height": "28px",
            "justify_content": null,
            "justify_items": null,
            "left": null,
            "margin": null,
            "max_height": null,
            "max_width": null,
            "min_height": null,
            "min_width": null,
            "object_fit": null,
            "object_position": null,
            "order": null,
            "overflow": null,
            "overflow_x": null,
            "overflow_y": null,
            "padding": "0px 0px 0px 4px",
            "right": null,
            "top": null,
            "visibility": null,
            "width": "28px"
          }
        },
        "73930396a4094288a63c5172688ce2e7": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "DescriptionStyleModel",
          "model_module_version": "1.5.0",
          "state": {
            "_model_module": "@jupyter-widgets/controls",
            "_model_module_version": "1.5.0",
            "_model_name": "DescriptionStyleModel",
            "_view_count": null,
            "_view_module": "@jupyter-widgets/base",
            "_view_module_version": "1.2.0",
            "_view_name": "StyleView",
            "description_width": ""
          }
        },
        "f9fb3b6ce66c421e924e8e52f542dfe1": {
          "model_module": "@jupyter-widgets/base",
          "model_name": "LayoutModel",
          "model_module_version": "1.2.0",
          "state": {
            "_model_module": "@jupyter-widgets/base",
            "_model_module_version": "1.2.0",
            "_model_name": "LayoutModel",
            "_view_count": null,
            "_view_module": "@jupyter-widgets/base",
            "_view_module_version": "1.2.0",
            "_view_name": "LayoutView",
            "align_content": null,
            "align_items": null,
            "align_self": null,
            "border": null,
            "bottom": null,
            "display": null,
            "flex": null,
            "flex_flow": null,
            "grid_area": null,
            "grid_auto_columns": null,
            "grid_auto_flow": null,
            "grid_auto_rows": null,
            "grid_column": null,
            "grid_gap": null,
            "grid_row": null,
            "grid_template_areas": null,
            "grid_template_columns": null,
            "grid_template_rows": null,
            "height": "28px",
            "justify_content": null,
            "justify_items": null,
            "left": null,
            "margin": null,
            "max_height": null,
            "max_width": null,
            "min_height": null,
            "min_width": null,
            "object_fit": null,
            "object_position": null,
            "order": null,
            "overflow": null,
            "overflow_x": null,
            "overflow_y": null,
            "padding": "0px 0px 0px 4px",
            "right": null,
            "top": null,
            "visibility": null,
            "width": "28px"
          }
        },
        "4187f02af8b449d59d40f079c61ffd0a": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "DescriptionStyleModel",
          "model_module_version": "1.5.0",
          "state": {
            "_model_module": "@jupyter-widgets/controls",
            "_model_module_version": "1.5.0",
            "_model_name": "DescriptionStyleModel",
            "_view_count": null,
            "_view_module": "@jupyter-widgets/base",
            "_view_module_version": "1.2.0",
            "_view_name": "StyleView",
            "description_width": ""
          }
        }
      }
    }
  },
  "nbformat": 4,
  "nbformat_minor": 0
}